<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.issue.IssueFilterMapper">

  <sql id="issueFilterColumns">
    filters.id as id,
    filters.name as name,
    filters.user_login as userLogin,
    filters.shared as shared,
    filters.description as description,
    filters.data as data,
    filters.created_at as createdAt,
    filters.updated_at as updatedAt
  </sql>

  <select id="selectById" parameterType="long" resultType="IssueFilter">
    select
    <include refid="issueFilterColumns"/>
    from issue_filters filters
    where filters.id=#{id}
  </select>

  <select id="selectByUser" parameterType="String" resultType="IssueFilter">
    select
    <include refid="issueFilterColumns"/>
    from issue_filters filters
    where filters.user_login=#{user}
  </select>

  <select id="selectFavoriteFiltersByUser" parameterType="String" resultType="IssueFilter">
    select
    <include refid="issueFilterColumns"/>
    from issue_filters filters
    inner join issue_filter_favourites fav on fav.issue_filter_id = filters.id
    where fav.user_login=#{user}
  </select>

  <select id="selectSharedFilters" parameterType="String" resultType="IssueFilter">
    select
    <include refid="issueFilterColumns"/>
    from issue_filters filters
    where filters.shared=${_true}
  </select>

  <select id="selectProvidedFilterByName" parameterType="String" resultType="IssueFilter">
    select
    <include refid="issueFilterColumns"/>
    from issue_filters filters
    where filters.user_login is null
    and filters.shared=${_true}
    and filters.name=#{name}
  </select>

  <insert id="insert" parameterType="IssueFilter" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO issue_filters (name, user_login, shared, description, data, created_at, updated_at)
    VALUES (#{name}, #{userLogin}, #{shared}, #{description}, #{data}, #{createdAt}, #{updatedAt})
  </insert>

  <update id="update" parameterType="IssueFilter">
    update issue_filters set
    name=#{name},
    shared=#{shared},
    description=#{description},
    data=#{data},
    user_login=#{userLogin},
    updated_at=current_timestamp
    where id=#{id}
  </update>

  <delete id="delete" parameterType="long">
    delete from issue_filters where id=#{id}
  </delete>

</mapper>
