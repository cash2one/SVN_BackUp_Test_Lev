// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db-commons.proto

package org.sonar.db.protobuf;

public final class DbCommons {
  private DbCommons() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TextRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonarqube.db.commons.TextRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 start_line = 1;</code>
     *
     * <pre>
     * Start line. Should never be absent
     * </pre>
     */
    boolean hasStartLine();
    /**
     * <code>optional int32 start_line = 1;</code>
     *
     * <pre>
     * Start line. Should never be absent
     * </pre>
     */
    int getStartLine();

    /**
     * <code>optional int32 end_line = 2;</code>
     *
     * <pre>
     * End line (inclusive). Absent means it is same as start line
     * </pre>
     */
    boolean hasEndLine();
    /**
     * <code>optional int32 end_line = 2;</code>
     *
     * <pre>
     * End line (inclusive). Absent means it is same as start line
     * </pre>
     */
    int getEndLine();

    /**
     * <code>optional int32 start_offset = 3;</code>
     *
     * <pre>
     * If absent it means range starts at the first offset of start line
     * </pre>
     */
    boolean hasStartOffset();
    /**
     * <code>optional int32 start_offset = 3;</code>
     *
     * <pre>
     * If absent it means range starts at the first offset of start line
     * </pre>
     */
    int getStartOffset();

    /**
     * <code>optional int32 end_offset = 4;</code>
     *
     * <pre>
     * If absent it means range ends at the last offset of end line
     * </pre>
     */
    boolean hasEndOffset();
    /**
     * <code>optional int32 end_offset = 4;</code>
     *
     * <pre>
     * If absent it means range ends at the last offset of end line
     * </pre>
     */
    int getEndOffset();
  }
  /**
   * Protobuf type {@code sonarqube.db.commons.TextRange}
   *
   * <pre>
   * Lines start at 1 and line offsets start at 0
   * </pre>
   */
  public  static final class TextRange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:sonarqube.db.commons.TextRange)
      TextRangeOrBuilder {
    // Use TextRange.newBuilder() to construct.
    private TextRange(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private TextRange() {
      startLine_ = 0;
      endLine_ = 0;
      startOffset_ = 0;
      endOffset_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TextRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startLine_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endLine_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startOffset_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endOffset_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sonar.db.protobuf.DbCommons.internal_static_sonarqube_db_commons_TextRange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sonar.db.protobuf.DbCommons.internal_static_sonarqube_db_commons_TextRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sonar.db.protobuf.DbCommons.TextRange.class, org.sonar.db.protobuf.DbCommons.TextRange.Builder.class);
    }

    private int bitField0_;
    public static final int START_LINE_FIELD_NUMBER = 1;
    private int startLine_;
    /**
     * <code>optional int32 start_line = 1;</code>
     *
     * <pre>
     * Start line. Should never be absent
     * </pre>
     */
    public boolean hasStartLine() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 start_line = 1;</code>
     *
     * <pre>
     * Start line. Should never be absent
     * </pre>
     */
    public int getStartLine() {
      return startLine_;
    }

    public static final int END_LINE_FIELD_NUMBER = 2;
    private int endLine_;
    /**
     * <code>optional int32 end_line = 2;</code>
     *
     * <pre>
     * End line (inclusive). Absent means it is same as start line
     * </pre>
     */
    public boolean hasEndLine() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 end_line = 2;</code>
     *
     * <pre>
     * End line (inclusive). Absent means it is same as start line
     * </pre>
     */
    public int getEndLine() {
      return endLine_;
    }

    public static final int START_OFFSET_FIELD_NUMBER = 3;
    private int startOffset_;
    /**
     * <code>optional int32 start_offset = 3;</code>
     *
     * <pre>
     * If absent it means range starts at the first offset of start line
     * </pre>
     */
    public boolean hasStartOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 start_offset = 3;</code>
     *
     * <pre>
     * If absent it means range starts at the first offset of start line
     * </pre>
     */
    public int getStartOffset() {
      return startOffset_;
    }

    public static final int END_OFFSET_FIELD_NUMBER = 4;
    private int endOffset_;
    /**
     * <code>optional int32 end_offset = 4;</code>
     *
     * <pre>
     * If absent it means range ends at the last offset of end line
     * </pre>
     */
    public boolean hasEndOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 end_offset = 4;</code>
     *
     * <pre>
     * If absent it means range ends at the last offset of end line
     * </pre>
     */
    public int getEndOffset() {
      return endOffset_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, startLine_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, endLine_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, startOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, endOffset_);
      }
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startLine_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endLine_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, startOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, endOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.sonar.db.protobuf.DbCommons.TextRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sonar.db.protobuf.DbCommons.TextRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sonarqube.db.commons.TextRange}
     *
     * <pre>
     * Lines start at 1 and line offsets start at 0
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonarqube.db.commons.TextRange)
        org.sonar.db.protobuf.DbCommons.TextRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sonar.db.protobuf.DbCommons.internal_static_sonarqube_db_commons_TextRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sonar.db.protobuf.DbCommons.internal_static_sonarqube_db_commons_TextRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sonar.db.protobuf.DbCommons.TextRange.class, org.sonar.db.protobuf.DbCommons.TextRange.Builder.class);
      }

      // Construct using org.sonar.db.protobuf.DbCommons.TextRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        startLine_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endLine_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sonar.db.protobuf.DbCommons.internal_static_sonarqube_db_commons_TextRange_descriptor;
      }

      public org.sonar.db.protobuf.DbCommons.TextRange getDefaultInstanceForType() {
        return org.sonar.db.protobuf.DbCommons.TextRange.getDefaultInstance();
      }

      public org.sonar.db.protobuf.DbCommons.TextRange build() {
        org.sonar.db.protobuf.DbCommons.TextRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.sonar.db.protobuf.DbCommons.TextRange buildPartial() {
        org.sonar.db.protobuf.DbCommons.TextRange result = new org.sonar.db.protobuf.DbCommons.TextRange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startLine_ = startLine_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endLine_ = endLine_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startOffset_ = startOffset_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endOffset_ = endOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sonar.db.protobuf.DbCommons.TextRange) {
          return mergeFrom((org.sonar.db.protobuf.DbCommons.TextRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sonar.db.protobuf.DbCommons.TextRange other) {
        if (other == org.sonar.db.protobuf.DbCommons.TextRange.getDefaultInstance()) return this;
        if (other.hasStartLine()) {
          setStartLine(other.getStartLine());
        }
        if (other.hasEndLine()) {
          setEndLine(other.getEndLine());
        }
        if (other.hasStartOffset()) {
          setStartOffset(other.getStartOffset());
        }
        if (other.hasEndOffset()) {
          setEndOffset(other.getEndOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.sonar.db.protobuf.DbCommons.TextRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.sonar.db.protobuf.DbCommons.TextRange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int startLine_ ;
      /**
       * <code>optional int32 start_line = 1;</code>
       *
       * <pre>
       * Start line. Should never be absent
       * </pre>
       */
      public boolean hasStartLine() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 start_line = 1;</code>
       *
       * <pre>
       * Start line. Should never be absent
       * </pre>
       */
      public int getStartLine() {
        return startLine_;
      }
      /**
       * <code>optional int32 start_line = 1;</code>
       *
       * <pre>
       * Start line. Should never be absent
       * </pre>
       */
      public Builder setStartLine(int value) {
        bitField0_ |= 0x00000001;
        startLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_line = 1;</code>
       *
       * <pre>
       * Start line. Should never be absent
       * </pre>
       */
      public Builder clearStartLine() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startLine_ = 0;
        onChanged();
        return this;
      }

      private int endLine_ ;
      /**
       * <code>optional int32 end_line = 2;</code>
       *
       * <pre>
       * End line (inclusive). Absent means it is same as start line
       * </pre>
       */
      public boolean hasEndLine() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 end_line = 2;</code>
       *
       * <pre>
       * End line (inclusive). Absent means it is same as start line
       * </pre>
       */
      public int getEndLine() {
        return endLine_;
      }
      /**
       * <code>optional int32 end_line = 2;</code>
       *
       * <pre>
       * End line (inclusive). Absent means it is same as start line
       * </pre>
       */
      public Builder setEndLine(int value) {
        bitField0_ |= 0x00000002;
        endLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_line = 2;</code>
       *
       * <pre>
       * End line (inclusive). Absent means it is same as start line
       * </pre>
       */
      public Builder clearEndLine() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endLine_ = 0;
        onChanged();
        return this;
      }

      private int startOffset_ ;
      /**
       * <code>optional int32 start_offset = 3;</code>
       *
       * <pre>
       * If absent it means range starts at the first offset of start line
       * </pre>
       */
      public boolean hasStartOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 start_offset = 3;</code>
       *
       * <pre>
       * If absent it means range starts at the first offset of start line
       * </pre>
       */
      public int getStartOffset() {
        return startOffset_;
      }
      /**
       * <code>optional int32 start_offset = 3;</code>
       *
       * <pre>
       * If absent it means range starts at the first offset of start line
       * </pre>
       */
      public Builder setStartOffset(int value) {
        bitField0_ |= 0x00000004;
        startOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_offset = 3;</code>
       *
       * <pre>
       * If absent it means range starts at the first offset of start line
       * </pre>
       */
      public Builder clearStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startOffset_ = 0;
        onChanged();
        return this;
      }

      private int endOffset_ ;
      /**
       * <code>optional int32 end_offset = 4;</code>
       *
       * <pre>
       * If absent it means range ends at the last offset of end line
       * </pre>
       */
      public boolean hasEndOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 end_offset = 4;</code>
       *
       * <pre>
       * If absent it means range ends at the last offset of end line
       * </pre>
       */
      public int getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>optional int32 end_offset = 4;</code>
       *
       * <pre>
       * If absent it means range ends at the last offset of end line
       * </pre>
       */
      public Builder setEndOffset(int value) {
        bitField0_ |= 0x00000008;
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_offset = 4;</code>
       *
       * <pre>
       * If absent it means range ends at the last offset of end line
       * </pre>
       */
      public Builder clearEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endOffset_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sonarqube.db.commons.TextRange)
    }

    // @@protoc_insertion_point(class_scope:sonarqube.db.commons.TextRange)
    private static final org.sonar.db.protobuf.DbCommons.TextRange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sonar.db.protobuf.DbCommons.TextRange();
    }

    public static org.sonar.db.protobuf.DbCommons.TextRange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<TextRange> PARSER =
        new com.google.protobuf.AbstractParser<TextRange>() {
      public TextRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TextRange(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TextRange> getParserForType() {
      return PARSER;
    }

    public org.sonar.db.protobuf.DbCommons.TextRange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sonarqube_db_commons_TextRange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sonarqube_db_commons_TextRange_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020db-commons.proto\022\024sonarqube.db.commons" +
      "\"[\n\tTextRange\022\022\n\nstart_line\030\001 \001(\005\022\020\n\010end" +
      "_line\030\002 \001(\005\022\024\n\014start_offset\030\003 \001(\005\022\022\n\nend" +
      "_offset\030\004 \001(\005B\031\n\025org.sonar.db.protobufH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_sonarqube_db_commons_TextRange_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sonarqube_db_commons_TextRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_sonarqube_db_commons_TextRange_descriptor,
        new java.lang.String[] { "StartLine", "EndLine", "StartOffset", "EndOffset", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
