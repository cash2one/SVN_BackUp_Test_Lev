<?xml version="1.0"?>
<cms
      useMinifiedResources="false"
      resourcesBasePath="(local)"
      loginUrl="/?returnUrl={returnUrl}" 
      webSiteUrl="Auto" 
      pageNotFoundUrl="/404/"
      workingDirectoryRootPath="~/App_Data/BetterCms"
      articleUrlPattern="/articles/{0}/"      
      renderContentEndingDiv="true"
      contentEndingDivCssClassName="custom-clearfix" 
      urlMode="TrailingSlash"
      enableMultilanguage="true"
      enableMacros="true"><!-- urlMode Possible values: NoTrailingSlash, TrailingSlash, Mixed -->

  <modules>
    <module name="google_analytics">
      <add key="LinkType" value="alternate"/>
      <add key="SitemapUrl" value="sitemap.xml"/>
      <add key="ChangeFrequency" value="weekly"/>
      <add key="Priority" value="0.5"/>
      <add key="SitemapTitle" value="Default Site Map"/>
      <add key="DateTimeFormat" value="yyyy-MM-dd"/>
      <add key="AnalyticsKey" value="UA-37459367-3"/>
    </module>
    <module name="pages">
      <add key="enableAddNewPageToSitemapAction" value="true"/>
      <add key="enableAddNewTranslationPageToSitemapAction" value="false"/>
      <add key="enableAddClonedPageToSitemapAction" value="false"/>
    </module>
  </modules>
  
  <urlPatterns>
    <add expression="\/(bin|app_code|app_globalresources|app_localresources|app_data|app_browsers|theme)\/" ignoreCase="true" negate="true" description="{0} cannot contain these as directories: bin, App_Code, App_GlobalResources, App_Localresources, App_Data, App_Browsers, Theme" />
  </urlPatterns>

  <installation
    Install404ErrorPage="true"
    Install500ErrorPage="true"
    InstallDefaultPage="true">
  </installation>

  <users
      createDefaultUserOnStart="true"
      enableCmsFormsAuthentication="true"      
    />

  <!-- ******************** STORAGE *********************** -->
  <!-- serviceType="FileSystem" defines to use server's file system as the uploads storage. -->
  <!-- processTimeout defines how much time file will be marked as processing, while it turns to failed. -->
  <storage serviceType="FileSystem" contentRoot="~/uploads/" contentRootUrl="~/uploads" processTimeout="00:05:00" maxFileNameLength="100" />

  <!-- serviceType="Ftp" defines to use FTP server as the upload storage: -->
  <!--<storage serviceType="Ftp" contentRoot="[BETTERCMS_FTP_STORAGE_CONTENT_ROOT]" contentRootUrl="[BETTERCMS_FTP_STORAGE_CONTENT_ROOT_URL]" processTimeout="00:05:00"  maxFileNameLength="100" ">
    <add key="FtpRoot" value="[BETTERCMS_FTP_STORAGE_FTP_ROOT]" />
    <add key="FtpUserName" value="[BETTERCMS_FTP_STORAGE_USER_NAME]" />
    <add key="FtpPassword" value="[BETTERCMS_FTP_STORAGE_PASSWORD]" />
    <add key="UsePassiveMode" value="[BETTERCMS_FTP_STORAGE_USE_PASSIVE_MODE]" />
  </storage>-->

  <!-- serviceType="Auto" defines to use concrete storage service implementation defined with the typeName property.
  If BetterCms.Module.AmazonS3Storage is installed: -->
  
  <!--<storage serviceType="Auto" contentRoot="[BETTERCMS_AMAZON_STORAGE_CONTENT_ROOT]" contentRootUrl="[BETTERCMS_AMAZON_STORAGE_PUBLIC_CONTENT_ROOT]" processTimeout="00:05:00"  maxFileNameLength="100" ">
    <add key="AmazonAccessKey" value="[BETTERCMS_AMAZON_STORAGE_ACCESS_KEY]" />
    <add key="AmazonSecretKey" value="[BETTERCMS_AMAZON_STORAGE_SECRET_KEY]" />
    <add key="AmazonBucketName" value="[BETTERCMS_AMAZON_STORAGE_BUCKET_NAME]" />
    <add key="AmazonTokenExpiryTime" value="00:01:00" />
  </storage>-->

  <!-- If BetterCms.Module.WindowsAzureStorage is installed: -->
  <!-- storage serviceType="Auto" 
           contentRoot="[BETTERCMS_AZURE_STORAGE_CONTENT_ROOT]" 
           contentRootUrl="[BETTERCMS_AZURE_STORAGE_CONTENT_ROOT]"
           securedContentRoot="[BETTERCMS_AZURE_STORAGE_SECURED_CONTENT_ROOT]" 
           securedContentRootUrl="[BETTERCMS_AZURE_STORAGE_SECURED_CONTENT_ROOT]" 
           processTimeout="00:05:00"
           trashFolder="[BETTERCMS_AZURE_STORAGE_CONTENT_TRASH]">
    <add key="AzureAccountName" value="[BETTERCMS_AZURE_STORAGE_ACCOUNT_KEY]" />
    <add key="AzureSecondaryKey" value="[BETTERCMS_AZURE_STORAGE_SECONDARY_KEY]" />
    <add key="AzureContainerName" value="[BETTERCMS_AZURE_STORAGE_CONTAINER_NAME]" />
    <add key="AzureSecuredContainerName" value="[BETTERCMS_AZURE_STORAGE_SECURED_CONTAINER_NAME]" />
    <add key="AzureUseHttps" value="[BETTERCMS_AZURE_STORAGE_USE_HTTPS]" />
    <add key="AzureTokenExpiryTime" value="00:01:00" />
  </-->

  <!-- serviceType="Custom" defines to use concrete storage service implementation defined with the typeName property.
  <storage serviceType="Custom" contentRoot="[path to upload files]" contentRootUrl="[path to access files publically]" processTimeout="00:05:00"  maxFileNameLength="100" ">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Custom.CustomStorageServiceTest, BetterCms.Sandbox.Mvc4"/>
  </storage>
  -->
  
  <!-- ******************** CACHE *********************** -->
  <!-- cacheType="HttpRuntime" is default cache provider. -->
  <cache enabled="false" timeout="00:10:00" cacheType="HttpRuntime" />
  
  <!-- CacheType="Auto" indicates to scan for the cache service in the installed modules list.   
  <cache enabled="true" timeout="00:10:00" cacheType="Auto" /> -->

  <!-- CacheType="Custom" defines to use concrete cache service implementation defined with the typeName property.
  <cache enabled="true" timeout="00:10:00" cacheType="Custom">
    <add key="typeName" value="BetterCms.Sandbox.Mvc4.Custom.CustomCacheTest, BetterCms.Sandbox.Mvc4"/>
  </cache> -->

  <!-- ******************** SEARCH *********************** -->
  <!-- Google search engine. Only if BetterCms.Module.GoogleSiteSearch module is installed -->
  <!--<search>
    <add key="GoogleSiteSearchApiKey" value="[BETTERCMS_GOOGLE_SEARCH_API_KEY]" />
    <add key="GoogleSiteSearchEngineKey" value="[BETTERCMS_GOOGLE_SEARCH_ENGINE_KEY]" />
  </search>-->

  <!-- Lucene search engine. Only if BetterCms.Module.LuceneSearch module is installed
       - LuceneWebSiteUrl: web site URL (prefix, which will be added to scraping URLs)
       - LuceSearchFileSystemDirectory: Lucene files directory, by default - one level below solution folder
       - LucenePagesWatcherFrequency: frequency timespan, how ofter worker should look for new pages created. 00:00:00 - disabled
       - LuceneIndexerFrequency: frequency timespan, how ofter content indexer should re-index pages content. 00:00:00 - disabled
       - LuceneIndexerPageFetchTimeout: timeout for trying to fetch page by URL
       - LuceneMaxPagesPerQuery: maximum number of re-indexed pages per query.
       - LucenePageExpireTimeout: indexed page expire timeout. Default value: 10 minutes
       - LuceneDisableStopWords: disables using of stop words, such as ["a", "the", "of", ...], when indexing the content
       - LuceneSearchForPartOfWords: if set to true, searches within words (like LIKE %query% in SQL)
       - LuceneIndexPrivatePages: if set to true, searches in private pages (authorization is required)
       - LuceneAuthorizationUrl - authorization URL (where user POST credentials)
       - LuceneAuthorizationForm.* - authorization form POST's parameters with values, e.g. LuceneAuthorizationForm.UserName, LuceneAuthorizationForm.Password
  -->
  <search>
    <add key="LuceneWebSiteUrl" value="http://bettercms.sandbox.mvc4.local/" />
    <add key="LuceneFileSystemDirectory" value="../../../Lucene.BetterCms" />
    <add key="LuceneIndexerFrequency" value="00:00:00" />
    <add key="LuceneIndexerPageFetchTimeout" value="00:01:00" />
    <add key="LucenePagesWatcherFrequency" value="00:00:00" />
    <add key="LuceneMaxPagesPerQuery" value="1000" />
    <add key="LucenePageExpireTimeout" value="00:00:00" />
    <add key="LuceneDisableStopWords" value="true" />
    <add key="LuceneSearchForPartOfWords" value="true" />
    <add key="LuceneIndexPrivatePages" value="true" />
    <add key="LuceneAuthorizationUrl" value="http://bettercms.sandbox.mvc4.local/login" />
    <add key="LuceneAuthorizationForm.UserName" value="admin" />
    <add key="LuceneAuthorizationForm.Password" value="admin" />
    <add key="LuceneAuthorizationForm.RememberMe" value="true" />

    <!-- Windows/Forms/None -->
    <add key="LuceneAuthorizationMode" value="Forms" />
    <add key="LuceneAuthorizationWindows.UserName" value="admin" />
    <add key="LuceneAuthorizationWindows.Password" value="admin" />
    
    <add key="LuceneIndexerDeleteLockFileOnStart" value="true" />
    <add key="LuceneIndexerRunsOnlyOnHost" value="" />
    <add key="LuceneExcludedNodes" value =""/>
    <add key="LuceneExcludedIds" value=""/>
    <add key="LuceneExcludedClasses" value=""/>
    <add key="LuceneExcludedPages" value="/500/"/>
  </search>

  <!-- ******************** DATABASE *********************** -->
  <database
     schemaName="dbo"
     connectionStringName="BetterCms"
     databaseType="MsSql2008" > 
  </database>

  <security 
            accessControlEnabled="true"
            fullAccessRoles="Admin"
            encryptionEnabled="false" 
            encryptionKey="bettercmstest"
            ignoreLocalFileSystemWarning="true">
    <defaultAccessRules defaultAccessLevel="ReadWrite">
      <add identity="Everyone" accessLevel="Read" isRole="true" />
      <add identity="Authenticated Users" accessLevel="ReadWrite" isRole="true" />
    </defaultAccessRules>
    <!-- If custom role provider is used instead of "BetterCms.Module.Users.Provider.RoleProvider", 
      custom roles need to be mapped to BetterCMS permissions. Example:-->
    <!--<customRoles>
      <add permission="BcmsEditContent" roles="User" />
      <add permission="BcmsPublishContent" roles="User" />
      <add permission="BcmsDeleteContent" roles="User, Admin" />
      <add permission="BcmsAdministration" roles="Admin" />
    </customRoles>-->
  </security>

  <moduleGallery
    feedUrl="http://mynugetfeed.com/nuget">
  </moduleGallery>
</cms>  
