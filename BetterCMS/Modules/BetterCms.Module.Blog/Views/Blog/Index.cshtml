@using BetterCms.Core.DataContracts.Enums
@using BetterCms.Module.Blog.Content.Resources
@using BetterCms.Module.Blog.Controllers
@using BetterCms.Module.Blog.ViewModels.Blog
@using BetterCms.Module.Root
@using BetterCms.Module.Root.Content.Resources
@using BetterCms.Module.Root.Mvc.Grids.Extensions
@using BetterCms.Module.Root.Mvc.Grids.TableRenderers
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Root.Mvc
@using Microsoft.Web.Mvc
@using MvcContrib.UI.Grid

@model BetterCms.Module.Blog.ViewModels.Filter.BlogsGridViewModel<SiteSettingBlogPostViewModel>
@{
    var controller = (CmsControllerBase)ViewContext.Controller;
    var canEdit = controller.SecurityService.IsAuthorized(RootModuleConstants.UserRoles.EditContent);
    var canPublish = controller.SecurityService.IsAuthorized(RootModuleConstants.UserRoles.PublishContent);
    
    Action<ColumnBuilder<SiteSettingBlogPostViewModel>> columns = column =>
    {
        if (canEdit || canPublish)
        {
            column.EditButtonColumn();
        }
        else
        {
            column.EmptyColumn();
        }

        column.For(m => string.Format("<a class=\"bcms-tables-link bcms-blog-Title\" data-id=\"{0}\" data-url=\"{2}\">{1}</a>", m.Id, System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(m.Title ?? "", true), m.PageUrl))
            .Named(BlogGlobalization.SiteSettings_Blogs_TitleColumn)
            .SortColumnName("Title")
            .Attributes()
            .Encode(false);

        column.For(m => m.CreatedOn.ToFormattedDateString())
           .Named(BlogGlobalization.SiteSettings_Blogs_CreatedColumn)
           .SortColumnName("CreatedOn")
           .Attributes(@class => "bcms-blog-CreatedOn");

        column.For(m => m.ModifiedOn.ToFormattedDateString())
           .Named(BlogGlobalization.SiteSettings_Blogs_ModifiedColumn)
           .SortColumnName("ModifiedOn")
           .Attributes(@class => "bcms-blog-ModifiedOn");

        column.For(m => m.ModifiedByUser)
           .Named(BlogGlobalization.SiteSettings_Blogs_ModifiedByColumn)
           .SortColumnName("ModifiedByUser")
           .Attributes(@class => "bcms-blog-ModifiedByUser");

        column.For(m => Html.EditorFor(e => m.Status, "PageStatus"))
           .Named(BlogGlobalization.SiteSettings_Blogs_PageStatusColumn)
           .SortColumnName("Status")
           .HeaderAttributes(@style => "width: 65px; text-align: center")
           .Attributes(@class => "bcms-blog-IsPublished");

        if (controller.SecurityService.IsAuthorized(RootModuleConstants.UserRoles.DeleteContent))
        {
            column.DeleteButtonColumn();
        }
        else
        {
            column.EmptyColumn();
        }
    };
}

@using (Html.BeginForm<BlogController>(f => f.Index(null), FormMethod.Post, new { @id = "bcms-blogs-form", @class = "bcms-ajax-form" }))
{
    @Html.HiddenGridOptions(Model.GridOptions)

    <div class="bcms-top-block-holder">
        @{
            if (canEdit)
            {
                <div class="bcms-btn-links-main" id="bcms-create-blog-button">@BlogGlobalization.SiteSettings_Blogs_AddNew</div>
            }
            else
            {
                <div class="bcms-btn-links-main">&nbsp;</div>
            }

            if (canPublish && canEdit)
            {
                <div class="bcms-btn-links-main" id="bcms-import-blogs">@BlogGlobalization.SiteSettings_Blogs_Import</div>
                <div class="bcms-btn-links-main" id="bcms-export-blogs">@BlogGlobalization.SiteSettings_Blogs_Export</div>
            }
        }

        <div class="bcms-search-block">
            @Html.TextBoxFor(m => m.SearchQuery, new { @class = "bcms-editor-field-box bcms-search-query", @placeholder = RootGlobalization.WaterMark_Search })
            <div class="bcms-btn-search" id="bcms-blogs-search-btn">@BlogGlobalization.SiteSettings_Blogs_Search</div>
        </div>
        
        <div class="bcms-featured-grid bcms-clearfix">
            @Html.RenderPaging(Model)
            @Html.Partial("~/Areas/bcms-blog/Views/Blog/Partial/BlogsFilterTemplate.cshtml", Model)
        </div>
    </div>
    
    @Html.SiteSettingsMessagesBox()

    @Html.Grid(Model.Items).Sort(Model.GridOptions).Columns(columns).Attributes(@class => "bcms-tables").RenderUsing(new EditableHtmlTableGridRenderer<SiteSettingBlogPostViewModel>())
}

<script type="text/html" id="bcms-blogs-list-row-template">
    @Html.Grid(new List<SiteSettingBlogPostViewModel> { new SiteSettingBlogPostViewModel() }).Columns(columns).Attributes(@class => "bcms-tables").RenderUsing(new HtmlTableGridSingleRowRenderer<SiteSettingBlogPostViewModel>())
</script>
<script type="text/html" id="bcms-pagestatus-published-template">
    @Html.Partial("EditorTemplates/PageStatus", PageStatus.Published)
</script>
<script type="text/html" id="bcms-pagestatus-unpublished-template">
    @Html.Partial("EditorTemplates/PageStatus", PageStatus.Unpublished)
</script>
<script type="text/html" id="bcms-pagestatus-draft-template">
    @Html.Partial("EditorTemplates/PageStatus", PageStatus.Draft)
</script>
