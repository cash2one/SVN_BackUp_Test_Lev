@using BetterCms.Module.Pages.Content.Resources
@using BetterCms.Module.Pages.Controllers
@using BetterCms.Module.Pages.ViewModels.Sitemap
@using BetterCms.Module.Root
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Root.ViewModels.Tags
@using Microsoft.Web.Mvc
@model SitemapViewModel
@{
    var tagsTemplateViewModel = new TagsTemplateViewModel
    {
        TooltipDescription = NavigationGlobalization.Sitemap_EditDialog_AddTags_Tooltip_Description
    };
}
<div class="bcms-tab-header">
    <a class="bcms-tab-item bcms-active" data-name="#bcms-tab-1">Properties</a>
    <a class="bcms-tab-item" data-name="#bcms-tab-2">Nodes</a>
</div>
<div id="bcms-sitemap-addnode">
    @Html.TabbedContentMessagesBox()
    @* Form is required for unobtrusive validation. *@
    @using (Html.BeginForm<SitemapController>(f => f.EditSitemap(null), FormMethod.Post, new
        {
            @class = "bcms-sitemap-form bcms-ajax-form",
            data_readonly = Model.IsReadOnly.ToString().ToLower()
        }))
    {
        <div id="bcms-tab-1" class="bcms-tab-single">
            <div class="bcms-padded-content">
                <div class="bcms-input-list-holder">
                    @Html.Tooltip(NavigationGlobalization.Sitemap_EditDialog_SitemapTitle_Tooltip_Description)
                    <div class="bcms-content-titles">@NavigationGlobalization.Sitemap_EditDialog_SitemapTitle_Title</div>
                    <div class="bcms-input-box">
                        @Html.TextBoxFor(model => model.Title, new { @class = "bcms-editor-field-box", data_bind = "value: title, valueUpdate: 'afterkeydown', hasfocus: true" })
                        @Html.BcmsValidationMessageFor(f => f.Title)
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.Version)
                    </div>
                </div>
                <div class="bcms-tags-box-holder" data-bind="with: tags">
                    @Html.Partial("~/Areas/bcms-root/Views/Tags/TagsTemplate.cshtml", tagsTemplateViewModel)
                </div>
                @if (Model.AccessControlEnabled)
                {
                    @Html.Partial(RootModuleConstants.AccessControlTemplate)
                }
            </div>
        </div>
        <div id="bcms-tab-2" class="bcms-tab-single">
            <div class="bcms-scroll-window">

                <div class="bcms-columns-container">
                    <div class="bcms-sitemap-filter-holder" data-bind="with: sitemap">
                        <div class="bcms-language-bar" style="display: none;" data-bind="visible: showLanguages, with: language">
                            <div class="bcms-filter-text bcms-table-middle-box">Edit sitemap in language:</div>
                            <div class="bcms-table-middle-box">
                                <select class="bcms-global-select" data-bind="options: languages, optionsText: 'value', optionsValue: 'key', value: languageId"></select>
                            </div>
                        </div>

                        <div class="bcms-expand-link-holder" @* data-bind="droppable: 'emptyListZone'" TODO: check later. NOTE: jQuery error is raised on leave over. *@>
                            <div class="bcms-expand-link" data-bind="click: expandAll">@NavigationGlobalization.Sitemap_Button_ExpandAll</div>
                            <div class="bcms-expand-link" data-bind="click: collapseAll">@NavigationGlobalization.Sitemap_Button_CollapseAll</div>
                        </div>
                    </div>

                    <div class="bcms-leftcol bcms-add-node-col">
                        <div class="bcms-sitemap-links-holder" data-bind="template: { name: 'bcms-navigation-pagelinks-template' }"></div>
                    </div>

                    <div class="bcms-rightcol">
                        <div class="bcms-sitemap-holder bcms-sitemap-edit">
                            <div class="bcms-addnode-placement-holder@(Model.IsReadOnly ? "-readonly" : string.Empty)">
                                @Html.Partial("Partial/Sitemap", new SitemapNodeViewModel())
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
</div>
@Html.Partial("Partial/SitemapTemplate", new SitemapNodeViewModel())
<script type="text/html" id="bcms-navigation-pagelinks-template">
    <div class="bcms-plain-text">@NavigationGlobalization.Sitemap_EditDialog_PageLink_Header</div>
    <div class="bcms-sidebar-search">
        <input type="text" class="bcms-editor-field-box" placeholder="@NavigationGlobalization.Sitemap_EditDialog_AddPageLink_SearchPlaceHolder"
               data-bind="hasfocus: hasfocus, value: searchQuery, valueUpdate: 'afterkeydown', enterPress: searchForPageLinks" />
        <div class="bcms-btn-search" data-bind="click: searchForPageLinks">@NavigationGlobalization.Sitemap_EditDialog_AddPageLink_SearchButton</div>
    </div>
    <div class="bcms-addnode-placement-holder@(Model.IsReadOnly ? "-readonly" : string.Empty)" data-bind="template: { name: 'bcms-navigation-pagelink-template', foreach: pageLinks }"></div>
</script>
<script type="text/html" id="bcms-navigation-pagelink-template">
    <!-- ko if: isVisible() || isCustom() -->
    <div class="bcms-placement-node" data-bind="@(!Model.IsReadOnly ? "draggable: $parentContext.$index, " : string.Empty)css: { 'bcms-placement-node-drag': isBeingDragged() }, style: { borderColor: isOnSitemap() == true ? '#0383df' : '' }">
        <div class="bcms-placement-title" data-bind="text: title()"></div>
        <div class="bcms-placement-path"><a data-bind="text: url, attr: { href: url }" href="" target="_blank"></a></div>
    </div>
    <!-- ko if: isBeingDragged() -->
    <div class="bcms-placement-dropzone"></div>
    <!-- /ko -->
    <!-- /ko -->
</script>
