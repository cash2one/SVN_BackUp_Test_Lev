## The contents of this file are subject to the Common Public Attribution
## License Version 1.0. (the "License"); you may not use this file except in
## compliance with the License. You may obtain a copy of the License at
## http://code.reddit.com/LICENSE. The License is based on the Mozilla Public
## License Version 1.1, but Sections 14 and 15 have been added to cover use of
## software over a computer network and provide for limited attribution for the
## Original Developer. In addition, Exhibit A has been modified to be
## consistent with Exhibit B.
##
## Software distributed under the License is distributed on an "AS IS" basis,
## WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
## the specific language governing rights and limitations under the License.
##
## The Original Code is reddit.
##
## The Original Developer is the Initial Developer.  The Initial Developer of
## the Original Code is reddit Inc.
##
## All portions of the code written by reddit are Copyright (c) 2006-2015
## reddit Inc. All Rights Reserved.
###############################################################################

<?xml version="1.0" encoding="UTF-8"?>
<%!
   from r2.models.subreddit import DefaultSR
   from r2.lib.template_helpers import get_domain, add_sr, header_url
%>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" 
    xmlns:media="http://search.yahoo.com/mrss/"
    xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>${self.Title()}</title>        
    <link>${add_sr("/", force_hostname = True)}</link>
    <description>${c.site.public_description or ''}</description>
    <image>
      <%
        if g.css_killswitch or not c.site.header or not c.can_apply_styles:
            header_img = header_url(DefaultSR().header)
        else:
            header_img = header_url(c.site.header)
        if not header_img.startswith("http:"):
            header_img = add_sr(header_img, sr_path=False, force_hostname=True)
      %>
      <url>${header_img}</url>
      <title>${self.Title()}</title>
      <link>${add_sr("/", force_hostname = True)}</link>
    </image>
    <atom:link rel="self" href="${add_sr(request.fullpath, sr_path=False, force_hostname=True)}" type="application/rss+xml" />
    ${next.body()}
  </channel>
</rss>  

<%def name="Title()">
${c.site.title}
</%def>

