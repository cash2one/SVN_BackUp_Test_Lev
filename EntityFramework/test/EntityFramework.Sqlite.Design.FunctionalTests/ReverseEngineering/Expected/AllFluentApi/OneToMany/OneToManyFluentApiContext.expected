using Microsoft.Data.Entity;
using Microsoft.Data.Entity.Metadata;

namespace E2E.Sqlite
{
    public partial class OneToManyFluentApiContext : DbContext
    {
        protected override void OnConfiguring(DbContextOptionsBuilder options)
        {
            options.UseSqlite(@"Data Source=OneToManyFluentApi.db;Cache=Private");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<OneToManyDependent>(entity =>
            {
                entity.HasKey(e => new { e.OneToManyDependentID1, e.OneToManyDependentID2 });

                entity.Property(e => e.OneToManyDependentID1).HasColumnType("INT");

                entity.Property(e => e.OneToManyDependentID2).HasColumnType("INT");

                entity.Property(e => e.OneToManyDependentFK1).HasColumnType("INT");

                entity.Property(e => e.OneToManyDependentFK2).HasColumnType("INT");

                entity.Property(e => e.SomeDependentEndColumn)
                    .IsRequired()
                    .HasColumnType("VARCHAR");

                entity.HasOne(d => d.OneToManyDependentFK).WithMany(p => p.OneToManyDependent).HasForeignKey(d => new { d.OneToManyDependentFK1, d.OneToManyDependentFK2 });
            });

            modelBuilder.Entity<OneToManyPrincipal>(entity =>
            {
                entity.HasKey(e => new { e.OneToManyPrincipalID1, e.OneToManyPrincipalID2 });

                entity.Property(e => e.OneToManyPrincipalID1).HasColumnType("INT");

                entity.Property(e => e.OneToManyPrincipalID2).HasColumnType("INT");

                entity.Property(e => e.Other).IsRequired();
            });
        }

        public virtual DbSet<OneToManyDependent> OneToManyDependent { get; set; }
        public virtual DbSet<OneToManyPrincipal> OneToManyPrincipal { get; set; }
    }
}