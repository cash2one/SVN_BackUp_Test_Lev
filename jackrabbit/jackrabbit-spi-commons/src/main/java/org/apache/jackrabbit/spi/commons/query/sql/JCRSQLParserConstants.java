/* Generated By:JJTree&JavaCC: Do not edit this line. JCRSQLParserConstants.java */
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.jackrabbit.spi.commons.query.sql;

public interface JCRSQLParserConstants {

  int EOF = 0;
  int COMMENT = 5;
  int COMMENT_CHAR = 6;
  int NON_QUOTE_CHAR = 7;
  int COMMENT_INTRO = 8;
  int BY = 9;
  int IN = 10;
  int OR = 11;
  int IS = 12;
  int AND = 13;
  int ASC = 14;
  int NOT = 15;
  int DESC = 16;
  int LIKE = 17;
  int NULL = 18;
  int FROM = 19;
  int LOWER = 20;
  int ORDER = 21;
  int UPPER = 22;
  int WHERE = 23;
  int ESCAPE = 24;
  int SELECT = 25;
  int BETWEEN = 26;
  int EXCERPT = 27;
  int SIMILAR = 28;
  int CONTAINS = 29;
  int SPELLCHECK = 30;
  int SIMPLE_LATIN_LETTER = 31;
  int SIMPLE_LATIN_UPPER_CASE_LETTER = 32;
  int SIMPLE_LATIN_LOWER_CASE_LETTER = 33;
  int LETTER = 34;
  int BASE_CHAR = 35;
  int IDEOGRAPHIC = 36;
  int DIGIT = 37;
  int DOUBLE_QUOTE = 38;
  int PERCENT = 39;
  int AMPERSAND = 40;
  int QUOTE = 41;
  int LEFT_PAREN = 42;
  int RIGHT_PAREN = 43;
  int ASTERISK = 44;
  int PLUS_SIGN = 45;
  int COMMA = 46;
  int MINUS_SIGN = 47;
  int PERIOD = 48;
  int SOLIDUS = 49;
  int COLON = 50;
  int SEMICOLON = 51;
  int LT_OPERATOR = 52;
  int EQ_OPERATOR = 53;
  int GT_OPERATOR = 54;
  int QUESTION_MARK = 55;
  int UNDERSCORE = 56;
  int VERTICAL_BAR = 57;
  int LEFT_BRACKET = 58;
  int RIGHT_BRACKET = 59;
  int REGULAR_IDENTIFIER = 60;
  int IDENTIFIER_BODY = 61;
  int IDENTIFIER_START = 62;
  int IDENTIFIER_PART = 63;
  int DELIMITED_IDENTIFIER = 64;
  int DELIMITED_IDENTIFIER_BODY = 65;
  int DELIMITED_IDENTIFIER_PART = 66;
  int NON_DOUBLE_QUOTE_CHAR = 67;
  int DOUBLE_QUOTE_SYMBOL = 68;
  int NE_OPERATOR = 69;
  int GE_OPERATOR = 70;
  int LE_OPERATOR = 71;
  int CONCAT_OPERATOR = 72;
  int DOUBLE_PERIOD = 73;
  int EXACT_NUMERIC_LITERAL = 74;
  int SIGN = 75;
  int APPROXIMATE_NUMERIC_LITERAL = 76;
  int MANTISSA = 77;
  int EXPONENT = 78;
  int SIGNED_INTEGER = 79;
  int UNSIGNED_INTEGER = 80;
  int DATETIME_LITERAL = 81;
  int DATE_LITERAL = 82;
  int TIMESTAMP_LITERAL = 83;
  int DATE_STRING = 84;
  int TIMESTAMP_STRING = 85;
  int TIME_ZONE_INTERVAL = 86;
  int DATE_VALUE = 87;
  int TIME_VALUE = 88;
  int YEARS_VALUE = 89;
  int MONTHS_VALUE = 90;
  int DAYS_VALUE = 91;
  int HOURS_VALUE = 92;
  int MINUTES_VALUE = 93;
  int SECONDS_VALUE = 94;
  int SECONDS_INTEGER_VALUE = 95;
  int SECONDS_FRACTION = 96;
  int DATETIME_VALUE = 97;
  int CHAR_STRING_LITERAL = 98;
  int CHAR_REPRESENTATION = 99;
  int QUOTE_SYMBOL = 100;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "<COMMENT>",
    "<COMMENT_CHAR>",
    "<NON_QUOTE_CHAR>",
    "<COMMENT_INTRO>",
    "\"BY\"",
    "\"IN\"",
    "\"OR\"",
    "\"IS\"",
    "\"AND\"",
    "\"ASC\"",
    "\"NOT\"",
    "\"DESC\"",
    "\"LIKE\"",
    "\"NULL\"",
    "\"FROM\"",
    "\"LOWER\"",
    "\"ORDER\"",
    "\"UPPER\"",
    "\"WHERE\"",
    "\"ESCAPE\"",
    "\"SELECT\"",
    "\"BETWEEN\"",
    "\"EXCERPT\"",
    "\"SIMILAR\"",
    "\"CONTAINS\"",
    "\"SPELLCHECK\"",
    "<SIMPLE_LATIN_LETTER>",
    "<SIMPLE_LATIN_UPPER_CASE_LETTER>",
    "<SIMPLE_LATIN_LOWER_CASE_LETTER>",
    "<LETTER>",
    "<BASE_CHAR>",
    "<IDEOGRAPHIC>",
    "<DIGIT>",
    "\"\\\"\"",
    "\"%\"",
    "\"&\"",
    "\"\\\'\"",
    "\"(\"",
    "\")\"",
    "\"*\"",
    "\"+\"",
    "\",\"",
    "\"-\"",
    "\".\"",
    "\"/\"",
    "\":\"",
    "\";\"",
    "\"<\"",
    "\"=\"",
    "\">\"",
    "\"?\"",
    "\"_\"",
    "\"|\"",
    "\"[\"",
    "\"]\"",
    "<REGULAR_IDENTIFIER>",
    "<IDENTIFIER_BODY>",
    "<IDENTIFIER_START>",
    "<IDENTIFIER_PART>",
    "<DELIMITED_IDENTIFIER>",
    "<DELIMITED_IDENTIFIER_BODY>",
    "<DELIMITED_IDENTIFIER_PART>",
    "<NON_DOUBLE_QUOTE_CHAR>",
    "<DOUBLE_QUOTE_SYMBOL>",
    "\"<>\"",
    "\">=\"",
    "\"<=\"",
    "\"||\"",
    "\"..\"",
    "<EXACT_NUMERIC_LITERAL>",
    "<SIGN>",
    "<APPROXIMATE_NUMERIC_LITERAL>",
    "<MANTISSA>",
    "<EXPONENT>",
    "<SIGNED_INTEGER>",
    "<UNSIGNED_INTEGER>",
    "<DATETIME_LITERAL>",
    "<DATE_LITERAL>",
    "<TIMESTAMP_LITERAL>",
    "<DATE_STRING>",
    "<TIMESTAMP_STRING>",
    "<TIME_ZONE_INTERVAL>",
    "<DATE_VALUE>",
    "<TIME_VALUE>",
    "<YEARS_VALUE>",
    "<MONTHS_VALUE>",
    "<DAYS_VALUE>",
    "<HOURS_VALUE>",
    "<MINUTES_VALUE>",
    "<SECONDS_VALUE>",
    "<SECONDS_INTEGER_VALUE>",
    "<SECONDS_FRACTION>",
    "<DATETIME_VALUE>",
    "<CHAR_STRING_LITERAL>",
    "<CHAR_REPRESENTATION>",
    "<QUOTE_SYMBOL>",
  };

}
