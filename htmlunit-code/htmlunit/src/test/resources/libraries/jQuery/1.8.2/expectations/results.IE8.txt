1.core: Unit Testing Environment (0, 2, 2)
2.core: Basic requirements (0, 7, 7)
3.core: jQuery() (0, 31, 31)
4.core: selector state (0, 31, 31)
5.core: globalEval (0, 3, 3)
6.core: noConflict (0, 7, 7)
7.core: trim (0, 13, 13)
8.core: type (0, 23, 23)
9.core: isPlainObject (0, 15, 15)
10.core: isFunction (0, 19, 19)
11.core: isNumeric (0, 36, 36)
12.core: isXMLDoc - HTML (0, 4, 4)
13.core: XSS via location.hash (0, 1, 1)
14.core: isXMLDoc - XML (0, 3, 3)
15.core: isWindow (0, 14, 14)
16.core: jQuery('html') (0, 18, 18)
17.core: jQuery('html', context) (0, 1, 1)
18.core: jQuery(selector, xml).text(str) - Loaded via XML document (0, 2, 2)
19.core: end() (0, 3, 3)
20.core: length (0, 1, 1)
21.core: size() (0, 1, 1)
22.core: get() (0, 1, 1)
23.core: toArray() (0, 1, 1)
24.core: inArray() (0, 19, 19)
25.core: get(Number) (0, 2, 2)
26.core: get(-Number) (0, 2, 2)
27.core: each(Function) (0, 1, 1)
28.core: slice() (0, 7, 7)
29.core: first()/last() (0, 4, 4)
30.core: map() (0, 8, 8)
31.core: jQuery.merge() (0, 8, 8)
32.core: jQuery.extend(Object, Object) (0, 28, 28)
33.core: jQuery.each(Object,Function) (0, 14, 14)
34.core: jQuery.makeArray (0, 17, 17)
35.core: jQuery.inArray (0, 3, 3)
36.core: jQuery.isEmptyObject (0, 2, 2)
37.core: jQuery.proxy (0, 7, 7)
38.core: jQuery.parseHTML (0, 11, 11)
39.core: jQuery.parseJSON (0, 8, 8)
40.core: jQuery.parseXML (0, 8, 8)
41.core: jQuery.sub() - Static Methods (0, 18, 18)
42.core: jQuery.sub() - .fn Methods (0, 378, 378)
43.core: jQuery.camelCase() (0, 7, 7)
44.callbacks: jQuery.Callbacks( "" ) - no filter (0, 20, 20)
45.callbacks: jQuery.Callbacks( { } ) - no filter (0, 20, 20)
46.callbacks: jQuery.Callbacks( "" ) - filter (0, 20, 20)
47.callbacks: jQuery.Callbacks( { } ) - filter (0, 20, 20)
48.callbacks: jQuery.Callbacks( "once" ) - no filter (0, 20, 20)
49.callbacks: jQuery.Callbacks( { "once": true } ) - no filter (0, 20, 20)
50.callbacks: jQuery.Callbacks( "once" ) - filter (0, 20, 20)
51.callbacks: jQuery.Callbacks( { "once": true } ) - filter (0, 20, 20)
52.callbacks: jQuery.Callbacks( "memory" ) - no filter (0, 20, 20)
53.callbacks: jQuery.Callbacks( { "memory": true } ) - no filter (0, 20, 20)
54.callbacks: jQuery.Callbacks( "memory" ) - filter (0, 20, 20)
55.callbacks: jQuery.Callbacks( { "memory": true } ) - filter (0, 20, 20)
56.callbacks: jQuery.Callbacks( "unique" ) - no filter (0, 20, 20)
57.callbacks: jQuery.Callbacks( { "unique": true } ) - no filter (0, 20, 20)
58.callbacks: jQuery.Callbacks( "unique" ) - filter (0, 20, 20)
59.callbacks: jQuery.Callbacks( { "unique": true } ) - filter (0, 20, 20)
60.callbacks: jQuery.Callbacks( "stopOnFalse" ) - no filter (0, 20, 20)
61.callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - no filter (0, 20, 20)
62.callbacks: jQuery.Callbacks( "stopOnFalse" ) - filter (0, 20, 20)
63.callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - filter (0, 20, 20)
64.callbacks: jQuery.Callbacks( "once memory" ) - no filter (0, 20, 20)
65.callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - no filter (0, 20, 20)
66.callbacks: jQuery.Callbacks( "once memory" ) - filter (0, 20, 20)
67.callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - filter (0, 20, 20)
68.callbacks: jQuery.Callbacks( "once unique" ) - no filter (0, 20, 20)
69.callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - no filter (0, 20, 20)
70.callbacks: jQuery.Callbacks( "once unique" ) - filter (0, 20, 20)
71.callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - filter (0, 20, 20)
72.callbacks: jQuery.Callbacks( "once stopOnFalse" ) - no filter (0, 20, 20)
73.callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - no filter (0, 20, 20)
74.callbacks: jQuery.Callbacks( "once stopOnFalse" ) - filter (0, 20, 20)
75.callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - filter (0, 20, 20)
76.callbacks: jQuery.Callbacks( "memory unique" ) - no filter (0, 20, 20)
77.callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - no filter (0, 20, 20)
78.callbacks: jQuery.Callbacks( "memory unique" ) - filter (0, 20, 20)
79.callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - filter (0, 20, 20)
80.callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - no filter (0, 20, 20)
81.callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - no filter (0, 20, 20)
82.callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - filter (0, 20, 20)
83.callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - filter (0, 20, 20)
84.callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - no filter (0, 20, 20)
85.callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - no filter (0, 20, 20)
86.callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - filter (0, 20, 20)
87.callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - filter (0, 20, 20)
88.callbacks: jQuery.Callbacks( options ) - options are copied (0, 1, 1)
89.callbacks: jQuery.Callbacks.fireWith - arguments are copied (0, 1, 1)
90.callbacks: jQuery.Callbacks.remove - should remove all instances (0, 1, 1)
91.callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (0, 1, 1)
92.deferred: jQuery.Deferred (0, 23, 23)
93.deferred: jQuery.Deferred - new operator (0, 23, 23)
94.deferred: jQuery.Deferred - chainability (0, 10, 10)
95.deferred: jQuery.Deferred.then - filtering (done) (0, 4, 4)
96.deferred: jQuery.Deferred.then - filtering (fail) (0, 4, 4)
97.deferred: jQuery.Deferred.then - filtering (progress) (0, 3, 3)
98.deferred: jQuery.Deferred.then - deferred (done) (0, 3, 3)
99.deferred: jQuery.Deferred.then - deferred (fail) (0, 3, 3)
100.deferred: jQuery.Deferred.then - deferred (progress) (0, 3, 3)
101.deferred: jQuery.Deferred.then - context (0, 4, 4)
102.deferred: jQuery.when (0, 34, 34)
103.deferred: jQuery.when - joined (0, 119, 119)
104.support: boxModel (0, 1, 1)
105.support: body background is not lost if set prior to loading jQuery (#9238) (9, 1, 10)
106.support: A background on the testElement does not cause IE8 to crash (#9823) (0, 1, 1)
107.support: Verify that the support tests resolve as expected per browser (6, 24, 30)
108.data: expando (0, 1, 1)
109.data: jQuery.data (0, 124, 124)
110.data: jQuery.acceptData (0, 7, 7)
111.data: .data() (0, 5, 5)
112.data: .data(String) and .data(String, Object) (0, 29, 29)
113.data: data-* attributes (0, 40, 40)
114.data: .data(Object) (0, 4, 4)
115.data: jQuery.removeData (0, 10, 10)
116.data: .removeData() (0, 6, 6)
117.data: JSON serialization (#8108) (0, 1, 1)
118.data: jQuery.data should follow html5 specification regarding camel casing (0, 10, 10)
119.data: jQuery.data should not miss data with preset hyphenated property names (0, 2, 2)
120.data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (0, 24, 24)
121.data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (0, 27, 27)
122.data: Triggering the removeData should not throw exceptions. (#10080) (0, 1, 1)
123.data: Only check element attributes once when calling .data() - #8909 (0, 2, 2)
124.data: JSON data- attributes can have newlines (0, 1, 1)
125.queue: queue() with other types (0, 14, 14)
126.queue: queue(name) passes in the next item in the queue as a parameter (0, 2, 2)
127.queue: queue() passes in the next item in the queue as a parameter to fx queues (0, 3, 3)
128.queue: callbacks keep their place in the queue (0, 5, 5)
129.queue: delay() (0, 2, 2)
130.queue: clearQueue(name) clears the queue (0, 2, 2)
131.queue: clearQueue() clears the fx queue (0, 1, 1)
132.queue: fn.promise() - called when fx queue is empty (0, 3, 3)
133.queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (0, 5, 5)
134.queue: fn.promise( "queue" ) - waits for animation to complete before resolving (0, 2, 2)
135.queue: .promise(obj) (0, 2, 2)
136.queue: delay() can be stopped (0, 3, 3)
137.queue: queue stop hooks (0, 2, 2)
138.attributes: jQuery.propFix integrity test (0, 1, 1)
139.attributes: attr(String) (0, 46, 46)
140.attributes: attr(String) in XML Files (0, 3, 3)
141.attributes: attr(String, Function) (0, 2, 2)
142.attributes: attr(Hash) (0, 3, 3)
143.attributes: attr(String, Object) (0, 81, 81)
144.attributes: attr(jquery_method) (0, 9, 9)
145.attributes: attr(String, Object) - Loaded via XML document (0, 2, 2)
146.attributes: attr('tabindex') (0, 8, 8)
147.attributes: attr('tabindex', value) (0, 9, 9)
148.attributes: removeAttr(String) (0, 12, 12)
149.attributes: removeAttr(String) in XML (0, 7, 7)
150.attributes: removeAttr(Multi String, variable space width) (0, 8, 8)
151.attributes: prop(String, Object) (0, 31, 31)
152.attributes: prop('tabindex') (0, 8, 8)
153.attributes: prop('tabindex', value) (0, 9, 9)
154.attributes: removeProp(String) (0, 6, 6)
155.attributes: val() (0, 26, 26)
156.attributes: val(String/Number) (0, 8, 8)
157.attributes: val(Function) (0, 8, 8)
158.attributes: val(Array of Numbers) (Bug #7123) (0, 4, 4)
159.attributes: val(Function) with incoming value (0, 10, 10)
160.attributes: val(select) after form.reset() (Bug #2551) (0, 3, 3)
161.attributes: addClass(String) (0, 9, 9)
162.attributes: addClass(Function) (0, 9, 9)
163.attributes: addClass(Function) with incoming value (0, 48, 48)
164.attributes: removeClass(String) - simple (0, 7, 7)
165.attributes: removeClass(Function) - simple (0, 7, 7)
166.attributes: removeClass(Function) with incoming value (0, 48, 48)
167.attributes: removeClass() removes duplicates (0, 1, 1)
168.attributes: toggleClass(String|boolean|undefined[, boolean]) (0, 17, 17)
169.attributes: toggleClass(Function[, boolean]) (0, 17, 17)
170.attributes: toggleClass(Fucntion[, boolean]) with incoming value (0, 14, 14)
171.attributes: addClass, removeClass, hasClass (0, 17, 17)
172.attributes: contents().hasClass() returns correct values (0, 2, 2)
173.attributes: coords returns correct values in IE6/IE7, see #10828 (0, 2, 2)
174.event: null or undefined handler (0, 2, 2)
175.event: bind(),live(),delegate() with non-null,defined data (0, 3, 3)
176.event: Handler changes and .trigger() order (0, 1, 1)
177.event: bind(), with data (0, 4, 4)
178.event: click(), with data (0, 3, 3)
179.event: bind(), with data, trigger with data (0, 4, 4)
180.event: bind(), multiple events at once (0, 2, 2)
181.event: bind(), five events at once (0, 1, 1)
182.event: bind(), multiple events at once and namespaces (0, 7, 7)
183.event: bind(), namespace with special add (0, 27, 27)
184.event: bind(), no data (0, 1, 1)
185.event: bind/one/unbind(Object) (0, 6, 6)
186.event: live/die(Object), delegate/undelegate(String, Object) (0, 6, 6)
187.event: live/delegate immediate propagation (0, 2, 2)
188.event: bind/delegate bubbling, isDefaultPrevented (0, 2, 2)
189.event: bind(), iframes (0, 1, 1)
190.event: bind(), trigger change on select (0, 5, 5)
191.event: bind(), namespaced events, cloned events (0, 18, 18)
192.event: bind(), multi-namespaced events (0, 6, 6)
193.event: bind(), with same function (0, 2, 2)
194.event: bind(), make sure order is maintained (0, 1, 1)
195.event: bind(), with different this object (0, 4, 4)
196.event: bind(name, false), unbind(name, false) (0, 3, 3)
197.event: live(name, false), die(name, false) (0, 3, 3)
198.event: delegate(selector, name, false), undelegate(selector, name, false) (0, 3, 3)
199.event: bind()/trigger()/unbind() on plain object (0, 7, 7)
200.event: unbind(type) (0, 1, 1)
201.event: unbind(eventObject) (0, 4, 4)
202.event: hover() and hover pseudo-event (0, 3, 3)
203.event: mouseover triggers mouseenter (0, 1, 1)
204.event: withinElement implemented with jQuery.contains() (0, 1, 1)
205.event: mouseenter, mouseleave don't catch exceptions (0, 2, 2)
206.event: trigger() shortcuts (0, 6, 6)
207.event: trigger() bubbling (0, 18, 18)
208.event: trigger(type, [data], [fn]) (0, 16, 16)
209.event: submit event bubbles on copied forms (#11649) (0, 3, 3)
210.event: change event bubbles on copied forms (#11796) (0, 3, 3)
211.event: trigger(eventObject, [data], [fn]) (0, 28, 28)
212.event: .trigger() bubbling on disconnected elements (#10489) (0, 2, 2)
213.event: .trigger() doesn't bubble load event (#10717) (0, 1, 1)
214.event: Delegated events in SVG (#10791) (0, 2, 2)
215.event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (0, 5, 5)
216.event: Submit event can be stopped (#11049) (0, 1, 1)
217.event: on(beforeunload) creates/deletes window property instead of adding/removing event listener (0, 3, 3)
218.event: jQuery.Event( type, props ) (0, 5, 5)
219.event: jQuery.Event.currentTarget (0, 2, 2)
220.event: toggle(Function, Function, ...) (0, 16, 16)
221.event: .live()/.die() (0, 66, 66)
222.event: die all bound events (0, 1, 1)
223.event: live with multiple events (0, 1, 1)
224.event: live with namespaces (0, 15, 15)
225.event: live with change (0, 8, 8)
226.event: live with submit (0, 7, 7)
227.event: live with special events (0, 13, 13)
228.event: .delegate()/.undelegate() (0, 65, 65)
229.event: jQuery.off using dispatched jQuery.Event (0, 1, 1)
230.event: delegated event with delegateTarget-relative selector (0, 3, 3)
231.event: stopPropagation() stops directly-bound events on delegated target (0, 1, 1)
232.event: undelegate all bound events (0, 2, 2)
233.event: delegate with multiple events (0, 1, 1)
234.event: delegate with change (0, 8, 8)
235.event: delegate with submit (0, 2, 2)
236.event: undelegate() with only namespaces (0, 2, 2)
237.event: Non DOM element events (0, 1, 1)
238.event: inline handler returning false stops default (0, 1, 1)
239.event: window resize (0, 2, 2)
240.event: focusin bubbles (0, 2, 2)
241.event: custom events with colons (#3533, #8272) (0, 1, 1)
242.event: .on and .off (0, 9, 9)
243.event: special bind/delegate name mapping (0, 7, 7)
244.event: .on and .off, selective mixed removal (#10705) (0, 7, 7)
245.event: .on( event-map, null-selector, data ) #11130 (0, 1, 1)
246.event: clone() delegated events (#11076) (0, 3, 3)
247.event: fixHooks extensions (0, 2, 2)
248.event: jQuery.ready promise (0, 1, 1)
249.event: jQuery.ready synchronous load with long loading subresources (0, 1, 1)
250.event: jQuery.isReady (0, 2, 2)
251.event: jQuery ready (0, 10, 10)
252.event: change handler should be detached from element (0, 2, 2)
253.event: trigger click on checkbox, fires change event (0, 1, 1)
254.selector - jQuery only: element - jQuery only (0, 7, 7)
255.selector - jQuery only: class - jQuery only (0, 4, 4)
256.selector - jQuery only: attributes - jQuery only (0, 2, 2)
257.selector - jQuery only: pseudo - visibility (0, 9, 9)
258.selector - jQuery only: disconnected nodes (0, 4, 4)
259.selector - jQuery only: attributes - jQuery.attr (0, 35, 35)
260.selector - jQuery only: Sizzle cache collides with multiple Sizzles on a page (0, 3, 3)
261.traversing: find(String) (0, 5, 5)
262.traversing: find(node|jQuery object) (0, 11, 11)
263.traversing: is(String|undefined) (0, 30, 30)
264.traversing: is(jQuery) (0, 21, 21)
265.traversing: is() with positional selectors (0, 23, 23)
266.traversing: index() (0, 2, 2)
267.traversing: index(Object|String|undefined) (0, 16, 16)
268.traversing: filter(Selector|undefined) (0, 9, 9)
269.traversing: filter(Function) (0, 2, 2)
270.traversing: filter(Element) (0, 1, 1)
271.traversing: filter(Array) (0, 1, 1)
272.traversing: filter(jQuery) (0, 1, 1)
273.traversing: filter() with positional selectors (0, 19, 19)
274.traversing: closest() (0, 14, 14)
275.traversing: closest(jQuery) (0, 8, 8)
276.traversing: not(Selector|undefined) (0, 11, 11)
277.traversing: not(Element) (0, 1, 1)
278.traversing: not(Function) (0, 1, 1)
279.traversing: not(Array) (0, 2, 2)
280.traversing: not(jQuery) (0, 1, 1)
281.traversing: has(Element) (0, 3, 3)
282.traversing: has(Selector) (0, 5, 5)
283.traversing: has(Arrayish) (0, 4, 4)
284.traversing: addBack() (0, 5, 5)
285.traversing: siblings([String]) (0, 7, 7)
286.traversing: children([String]) (0, 3, 3)
287.traversing: parent([String]) (0, 5, 5)
288.traversing: parents([String]) (0, 5, 5)
289.traversing: parentsUntil([String]) (0, 9, 9)
290.traversing: next([String]) (0, 5, 5)
291.traversing: prev([String]) (0, 4, 4)
292.traversing: nextAll([String]) (0, 4, 4)
293.traversing: prevAll([String]) (0, 4, 4)
294.traversing: nextUntil([String]) (0, 11, 11)
295.traversing: prevUntil([String]) (0, 10, 10)
296.traversing: contents() (0, 12, 12)
297.traversing: add(String|Element|Array|undefined) (0, 16, 16)
298.traversing: add(String, Context) (0, 6, 6)
299.traversing: eq('-1') #10616 (0, 3, 3)
300.manipulation: text() (0, 5, 5)
301.manipulation: text(undefined) (0, 1, 1)
302.manipulation: text(String) (0, 4, 4)
303.manipulation: text(Function) (0, 4, 4)
304.manipulation: text(Function) with incoming value (0, 2, 2)
305.manipulation: wrap(String|Element) (0, 19, 19)
306.manipulation: wrap(Function) (0, 19, 19)
307.manipulation: wrap(Function) with index (#10177) (0, 6, 6)
308.manipulation: wrap(String) consecutive elements (#10177) (0, 12, 12)
309.manipulation: wrapAll(String|Element) (0, 8, 8)
310.manipulation: wrapInner(String|Element) (0, 11, 11)
311.manipulation: wrapInner(Function) (0, 11, 11)
312.manipulation: unwrap() (0, 9, 9)
313.manipulation: append(String|Element|Array&lt;Element&gt;|jQuery) (0, 58, 58)
314.manipulation: append(Function) (0, 58, 58)
315.manipulation: append(Function) with incoming value (0, 12, 12)
316.manipulation: append the same fragment with events (Bug #6997, 5566) (0, 3, 3)
317.manipulation: append HTML5 sectioning elements (Bug #6485) (0, 2, 2)
318.manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (0, 1, 1)
319.manipulation: html5 clone() cannot use the fragment cache in IE (#6485) (0, 1, 1)
320.manipulation: html(String) with HTML5 (Bug #6485) (0, 2, 2)
321.manipulation: IE8 serialization bug (0, 2, 2)
322.manipulation: html() object element #10324 (0, 1, 1)
323.manipulation: append(xml) (0, 1, 1)
324.manipulation: appendTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 17, 17)
325.manipulation: prepend(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)
326.manipulation: prepend(Function) (0, 6, 6)
327.manipulation: prepend(Function) with incoming value (0, 10, 10)
328.manipulation: prependTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)
329.manipulation: before(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)
330.manipulation: before(Function) (0, 7, 7)
331.manipulation: before and after w/ empty object (#10812) (0, 2, 2)
332.manipulation: before and after on disconnected node (#10517) (0, 2, 2)
333.manipulation: insertBefore(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)
334.manipulation: after(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)
335.manipulation: after(Function) (0, 7, 7)
336.manipulation: insertAfter(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)
337.manipulation: replaceWith(String|Element|Array&lt;Element&gt;|jQuery) (0, 22, 22)
338.manipulation: replaceWith(Function) (0, 23, 23)
339.manipulation: replaceWith(string) for more than one element (0, 3, 3)
340.manipulation: replaceAll(String|Element|Array&lt;Element&gt;|jQuery) (0, 10, 10)
341.manipulation: jQuery.clone() (#8017) (0, 2, 2)
342.manipulation: clone() (#8070) (0, 2, 2)
343.manipulation: clone() (0, 44, 44)
344.manipulation: clone(script type=non-javascript) (#11359) (0, 3, 3)
345.manipulation: clone(form element) (Bug #3879, #6655) (0, 5, 5)
346.manipulation: clone(multiple selected options) (Bug #8129) (0, 1, 1)
347.manipulation: clone() on XML nodes (0, 2, 2)
348.manipulation: clone() on local XML nodes with html5 nodename (0, 2, 2)
349.manipulation: html(undefined) (0, 1, 1)
350.manipulation: html() on empty set (0, 1, 1)
351.manipulation: html(String) (0, 35, 35)
352.manipulation: html(Function) (0, 37, 37)
353.manipulation: html(Function) with incoming value (0, 20, 20)
354.manipulation: remove() (0, 9, 9)
355.manipulation: detach() (0, 9, 9)
356.manipulation: empty() (0, 3, 3)
357.manipulation: jQuery.cleanData (0, 14, 14)
358.manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (0, 1, 1)
359.manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (0, 3, 3)
360.manipulation: jQuery.buildFragment - plain objects are not a document #8950 (0, 1, 1)
361.manipulation: jQuery.clone - no exceptions for object elements #9587 (0, 1, 1)
362.manipulation: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (0, 2, 2)
363.manipulation: Cloned, detached HTML5 elems (#10667,10670) (0, 7, 7)
364.manipulation: jQuery.fragments cache expectations (0, 10, 10)
365.manipulation: Guard against exceptions when clearing safeChildNodes (0, 1, 1)
366.manipulation: Ensure oldIE creates a new set on appendTo (#8894) (0, 5, 5)
367.manipulation: html() - script exceptions bubble (#11743) (0, 2, 2)
368.manipulation: checked state is cloned with clone() (0, 2, 2)
369.manipulation: manipulate mixed jQuery and text (#12384, #12346) (0, 2, 2)
370.manipulation: buildFragment works even if document[0] is iframe's window object in IE9/10 (#12266) (0, 1, 1)
371.css: css(String|Hash) (0, 46, 46)
372.css: css() explicit and relative values (0, 29, 29)
373.css: css(String, Object) (0, 22, 22)
374.css: css(String, Object) for MSIE (0, 5, 5)
375.css: Setting opacity to 1 properly removes filter: style (#6652) (0, 2, 2)
376.css: css(String, Function) (0, 3, 3)
377.css: css(String, Function) with incoming value (0, 3, 3)
378.css: css(Object) where values are Functions (0, 3, 3)
379.css: css(Object) where values are Functions with incoming values (0, 3, 3)
380.css: show(); hide() (0, 22, 22)
381.css: show() resolves correct default display #8099 (2, 1, 3)
382.css: show() resolves correct default display, detached nodes (#10006) (0, 11, 11)
383.css: toggle() (0, 9, 9)
384.css: hide hidden elements (bug #7141) (0, 3, 3)
385.css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (0, 4, 4)
386.css: :visible selector works properly on table elements (bug #4512) (0, 1, 1)
387.css: :visible selector works properly on children with a hidden parent (bug #4512) (0, 1, 1)
388.css: internal ref to elem.runtimeStyle (bug #7608) (0, 1, 1)
389.css: marginRight computed style (bug #3333) (0, 1, 1)
390.css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (0, 2, 2)
391.css: jQuery.cssProps behavior, (bug #8402) (0, 2, 2)
392.css: widows & orphans #8936 (0, 4, 4)
393.css: can't get css for disconnected in IE<9, see #10254 and #8388 (0, 2, 2)
394.css: can't get background-position in IE<9, see #10796 (0, 8, 8)
395.css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (0, 1, 1)
396.css: percentage properties for left and top should be transformed to pixels, see #9505 (0, 2, 2)
397.css: Do not append px to 'fill-opacity' #9548 (0, 1, 1)
398.css: css('width') and css('height') should respect box-sizing, see #11004 (0, 4, 4)
399.css: certain css values of 'normal' should be convertable to a number, see #8627 (0, 2, 2)
400.css: cssHooks - expand (0, 15, 15)
401.serialize: jQuery.param() (0, 22, 22)
402.serialize: jQuery.param() Constructed prop values (0, 4, 4)
403.serialize: serialize() (0, 5, 5)
404.ajax: jQuery.ajax() - success callbacks (0, 8, 8)
405.ajax: jQuery.ajax() - success callbacks - (url, options) syntax (0, 8, 8)
406.ajax: jQuery.ajax() - success callbacks (late binding) (0, 8, 8)
407.ajax: jQuery.ajax() - success callbacks (oncomplete binding) (0, 8, 8)
408.ajax: jQuery.ajax() - success callbacks (very late binding) (0, 8, 8)
409.ajax: jQuery.ajax() - success callbacks (order) (0, 1, 1)
410.ajax: jQuery.ajax() - error callbacks (0, 8, 8)
411.ajax: jQuery.ajax - multiple method signatures introduced in 1.5 ( #8107) (0, 4, 4)
412.ajax: jQuery.ajax() - textStatus and errorThrown values (0, 4, 4)
413.ajax: jQuery.ajax() - responseText on error (0, 1, 1)
414.ajax: .ajax() - retry with jQuery.ajax( this ) (0, 2, 2)
415.ajax: .ajax() - headers (0, 4, 4)
416.ajax: .ajax() - Accept header (0, 1, 1)
417.ajax: .ajax() - contentType (0, 2, 2)
418.ajax: .ajax() - protocol-less urls (0, 1, 1)
419.ajax: .ajax() - hash (0, 3, 3)
420.ajax: jQuery ajax - cross-domain detection (0, 6, 6)
421.ajax: .load() - 404 error callbacks (0, 6, 6)
422.ajax: jQuery.ajax() - abort (0, 8, 8)
423.ajax: Ajax events with context (0, 14, 14)
424.ajax: jQuery.ajax context modification (0, 1, 1)
425.ajax: jQuery.ajax context modification through ajaxSetup (0, 4, 4)
426.ajax: jQuery.ajax() - disabled globals (0, 3, 3)
427.ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (0, 3, 3)
428.ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (over JSONP) (0, 3, 3)
429.ajax: jQuery.ajax - HEAD requests (2, 0, 2)
430.ajax: jQuery.ajax - beforeSend (0, 1, 1)
431.ajax: jQuery.ajax - beforeSend, cancel request (#2688) (0, 2, 2)
432.ajax: jQuery.ajax - beforeSend, cancel request manually (0, 2, 2)
433.ajax: jQuery.ajax - dataType html (0, 5, 5)
434.ajax: synchronous request (0, 1, 1)
435.ajax: synchronous request with callbacks (0, 2, 2)
436.ajax: pass-through request object (0, 8, 8)
437.ajax: ajax cache (0, 18, 18)
438.ajax: load(String) (0, 2, 2)
439.ajax: load(String,null) (0, 2, 2)
440.ajax: load(String,undefined) (0, 2, 2)
441.ajax: load('url selector') (0, 1, 1)
442.ajax: load(String, Function) with ajaxSetup on dataType json, see #2046 (0, 1, 1)
443.ajax: load(String, Function) - simple: inject text into DOM (0, 2, 2)
444.ajax: load(String, Function) - check scripts (0, 7, 7)
445.ajax: load(String, Function) - check file with only a script tag (0, 3, 3)
446.ajax: load(String, Function) - dataFilter in ajaxSettings (0, 2, 2)
447.ajax: load(String, Object, Function) (0, 2, 2)
448.ajax: load(String, String, Function) (0, 2, 2)
449.ajax: load() - data specified in ajaxSettings is merged in (#10524) (0, 1, 1)
450.ajax: load() - callbacks get the correct parameters (0, 8, 8)
451.ajax: jQuery.get(String, Function) - data in ajaxSettings (#8277) (0, 1, 1)
452.ajax: jQuery.get(String, Hash, Function) - parse xml and use text() on nodes (0, 2, 2)
453.ajax: jQuery.getScript(String, Function) - with callback (0, 3, 3)
454.ajax: jQuery.getScript(String, Function) - no callback (0, 1, 1)
455.ajax: jQuery.ajax() - JSONP, Same Domain (0, 24, 24)
456.ajax: jQuery.ajax() - JSONP, Cross Domain (0, 24, 24)
457.ajax: jQuery.ajax() - script, Remote (0, 2, 2)
458.ajax: jQuery.ajax() - script, Remote with POST (0, 3, 3)
459.ajax: jQuery.ajax() - script, Remote with scheme-less URL (0, 2, 2)
460.ajax: jQuery.ajax() - malformed JSON (0, 2, 2)
461.ajax: jQuery.ajax() - script, throws exception (#11743) (0, 1, 1)
462.ajax: jQuery.ajax() - script by content-type (0, 2, 2)
463.ajax: jQuery.ajax() - json by content-type (0, 5, 5)
464.ajax: jQuery.ajax() - json by content-type disabled with options (0, 6, 6)
465.ajax: jQuery.getJSON(String, Hash, Function) - JSON array (0, 5, 5)
466.ajax: jQuery.getJSON(String, Function) - JSON object (0, 2, 2)
467.ajax: jQuery.getJSON - Using Native JSON (0, 2, 2)
468.ajax: jQuery.getJSON(String, Function) - JSON object with absolute url to local content (0, 2, 2)
469.ajax: jQuery.post - data (0, 3, 3)
470.ajax: jQuery.post(String, Hash, Function) - simple with xml (0, 4, 4)
471.ajax: jQuery.ajaxSetup({timeout: Number}) - with global timeout (0, 1, 1)
472.ajax: jQuery.ajaxSetup({timeout: Number}) with localtimeout (0, 1, 1)
473.ajax: jQuery.ajax - simple get (0, 1, 1)
474.ajax: jQuery.ajax - simple post (0, 1, 1)
475.ajax: ajaxSetup() (0, 1, 1)
476.ajax: data option: evaluate function values (#2806) (0, 1, 1)
477.ajax: data option: empty bodies for non-GET requests (0, 1, 1)
478.ajax: jQuery.ajax - If-Modified-Since support (cache) (0, 3, 3)
479.ajax: jQuery.ajax - Etag support (cache) (0, 3, 3)
480.ajax: jQuery.ajax - If-Modified-Since support (no cache) (0, 3, 3)
481.ajax: jQuery.ajax - Etag support (no cache) (0, 3, 3)
482.ajax: jQuery ajax - failing cross-domain (0, 2, 2)
483.ajax: jQuery ajax - atom+xml (0, 1, 1)
484.ajax: jQuery.ajax - Location object as url (#7531) (0, 1, 1)
485.ajax: jQuery.ajax - Context with circular references (#9887) (0, 2, 2)
486.ajax: jQuery.ajax - statusText (0, 3, 3)
487.ajax: jQuery.ajax - statusCode (0, 20, 20)
488.ajax: jQuery.ajax - transitive conversions (0, 8, 8)
489.ajax: jQuery.ajax - overrideMimeType (0, 2, 2)
490.ajax: jQuery.ajax - abort in prefilter (0, 1, 1)
491.ajax: jQuery.ajax - loading binary data shouldn't throw an exception in IE (#11426) (0, 1, 1)
492.ajax: jQuery.domManip - no side effect because of ajaxSetup or global events (#11264) (0, 1, 1)
493.ajax: jQuery.domManip - script in comments are properly evaluated (#11402) (0, 2, 2)
494.ajax: jQuery.ajax - active counter (0, 1, 1)
495.effects: sanity check (0, 1, 1)
496.effects: show() (0, 26, 26)
497.effects: show(Number) - other displays (0, 15, 15)
498.effects: Persist correct display value (0, 3, 3)
499.effects: animate(Hash, Object, Function) (0, 1, 1)
500.effects: animate negative height (0, 1, 1)
501.effects: animate negative margin (0, 1, 1)
502.effects: animate negative margin with px (0, 1, 1)
503.effects: animate negative padding (0, 1, 1)
504.effects: animate block as inline width/height (0, 3, 3)
505.effects: animate native inline width/height (0, 3, 3)
506.effects: animate block width/height (0, 3, 3)
507.effects: animate table width/height (0, 1, 1)
508.effects: animate table-row width/height (0, 3, 3)
509.effects: animate table-cell width/height (0, 3, 3)
510.effects: animate percentage(%) on width/height (0, 2, 2)
511.effects: animate resets overflow-x and overflow-y when finished (0, 2, 2)
512.effects: animate option { queue: false } (0, 2, 2)
513.effects: animate option { queue: true } (0, 2, 2)
514.effects: animate option { queue: 'name' } (0, 5, 5)
515.effects: animate with no properties (0, 2, 2)
516.effects: animate duration 0 (0, 11, 11)
517.effects: animate hyphenated properties (0, 1, 1)
518.effects: animate non-element (0, 1, 1)
519.effects: stop() (0, 4, 4)
520.effects: stop() - several in queue (0, 3, 3)
521.effects: stop(clearQueue) (0, 4, 4)
522.effects: stop(clearQueue, gotoEnd) (0, 1, 1)
523.effects: stop( queue, ..., ... ) - Stop single queues (0, 3, 3)
524.effects: toggle() (0, 6, 6)
525.effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (0, 7, 7)
526.effects: JS Overflow and Display (0, 2, 2)
527.effects: CSS Overflow and Display (0, 2, 2)
528.effects: CSS Auto to show (0, 5, 5)
529.effects: CSS Auto to hide (0, 4, 4)
530.effects: CSS Auto to 100 (0, 6, 6)
531.effects: CSS Auto to 50 (0, 6, 6)
532.effects: CSS Auto to 0 (0, 6, 6)
533.effects: JS Auto to show (0, 5, 5)
534.effects: JS Auto to hide (0, 4, 4)
535.effects: JS Auto to 100 (0, 6, 6)
536.effects: JS Auto to 50 (0, 6, 6)
537.effects: JS Auto to 0 (0, 6, 6)
538.effects: CSS 100 to show (0, 5, 5)
539.effects: CSS 100 to hide (0, 4, 4)
540.effects: CSS 100 to 100 (0, 6, 6)
541.effects: CSS 100 to 50 (0, 6, 6)
542.effects: CSS 100 to 0 (0, 6, 6)
543.effects: JS 100 to show (0, 5, 5)
544.effects: JS 100 to hide (0, 4, 4)
545.effects: JS 100 to 100 (0, 6, 6)
546.effects: JS 100 to 50 (0, 6, 6)
547.effects: JS 100 to 0 (0, 6, 6)
548.effects: CSS 50 to show (0, 5, 5)
549.effects: CSS 50 to hide (0, 4, 4)
550.effects: CSS 50 to 100 (0, 6, 6)
551.effects: CSS 50 to 50 (0, 6, 6)
552.effects: CSS 50 to 0 (0, 6, 6)
553.effects: JS 50 to show (0, 5, 5)
554.effects: JS 50 to hide (0, 4, 4)
555.effects: JS 50 to 100 (0, 6, 6)
556.effects: JS 50 to 50 (0, 6, 6)
557.effects: JS 50 to 0 (0, 6, 6)
558.effects: CSS 0 to show (0, 5, 5)
559.effects: CSS 0 to hide (0, 4, 4)
560.effects: CSS 0 to 100 (0, 6, 6)
561.effects: CSS 0 to 50 (0, 6, 6)
562.effects: CSS 0 to 0 (0, 6, 6)
563.effects: JS 0 to show (0, 5, 5)
564.effects: JS 0 to hide (0, 4, 4)
565.effects: JS 0 to 100 (0, 6, 6)
566.effects: JS 0 to 50 (0, 6, 6)
567.effects: JS 0 to 0 (0, 6, 6)
568.effects: Chain fadeOut fadeIn (0, 5, 5)
569.effects: Chain fadeIn fadeOut (0, 5, 5)
570.effects: Chain hide show (0, 5, 5)
571.effects: Chain show hide (0, 5, 5)
572.effects: Chain show hide with easing and callback (0, 5, 5)
573.effects: Chain toggle in (0, 5, 5)
574.effects: Chain toggle out (0, 5, 5)
575.effects: Chain toggle out with easing and callback (0, 5, 5)
576.effects: Chain slideDown slideUp (0, 5, 5)
577.effects: Chain slideUp slideDown (0, 5, 5)
578.effects: Chain slideUp slideDown with easing and callback (0, 5, 5)
579.effects: Chain slideToggle in (0, 5, 5)
580.effects: Chain slideToggle out (0, 5, 5)
581.effects: Chain fadeToggle in (0, 5, 5)
582.effects: Chain fadeToggle out (0, 5, 5)
583.effects: Chain fadeTo 0.5 1.0 with easing and callback) (0, 5, 5)
584.effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (0, 4, 4)
585.effects: slideToggle().stop().slideToggle() (0, 8, 8)
586.effects: fadeToggle().stop().fadeToggle() (0, 8, 8)
587.effects: toggle().stop().toggle() (0, 8, 8)
588.effects: animate with per-property easing (0, 5, 5)
589.effects: animate with CSS shorthand properties (0, 11, 11)
590.effects: hide hidden elements, with animation (bug #7141) (0, 3, 3)
591.effects: animate unit-less properties (#4966) (0, 2, 2)
592.effects: animate properties missing px w/ opacity as last (#9074) (0, 6, 6)
593.effects: callbacks should fire in correct order (#9100) (0, 1, 1)
594.effects: callbacks that throw exceptions will be removed (#5684) (0, 2, 2)
595.effects: animate will scale margin properties individually (0, 2, 2)
596.effects: Do not append px to 'fill-opacity' #9548 (0, 1, 1)
597.effects: jQuery.Animation( object, props, opts ) (0, 4, 4)
598.effects: Animate Option: step: function( percent, tween ) (0, 1, 1)
599.effects: Animate callbacks have correct context (0, 2, 2)
600.effects: User supplied callback called after show when fx off (#8892) (0, 2, 2)
601.effects: animate should set display for disconnected nodes (0, 18, 18)
602.effects: Animation callback should not show animated element as animated (#7157) (0, 1, 1)
603.effects: hide called on element within hidden parent should set display to none (#10045) (0, 3, 3)
604.effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (0, 5, 5)
605.effects: Handle queue:false promises (0, 10, 10)
606.effects: multiple unqueued and promise (0, 4, 4)
607.effects: animate does not change start value for non-px animation (#7109) (0, 1, 1)
608.effects: non-px animation handles non-numeric start (#11971) (0, 2, 2)
609.effects: Animation callbacks (#11797) (0, 15, 15)
610.effects: Animate properly sets overflow hidden when animating width/height (#12117) (0, 4, 4)
611.effects: Animations with 0 duration don't ease (#12273) (0, 1, 1)
612.offset: empty set (0, 2, 2)
613.offset: object without getBoundingClientRect (0, 2, 2)
614.offset: disconnected node (0, 2, 2)
615.offset: absolute (0, 4, 4)
616.offset: absolute (0, 178, 178)
617.offset: relative (0, 60, 60)
618.offset: static (0, 80, 80)
619.offset: fixed (0, 30, 30)
620.offset: table (0, 4, 4)
621.offset: scroll (0, 24, 24)
622.offset: body (0, 2, 2)
623.offset: chaining (0, 3, 3)
624.offset: offsetParent (0, 12, 12)
625.offset: fractions (see #7730 and #7885) (0, 2, 2)
626.dimensions: width() (0, 9, 9)
627.dimensions: width(Function) (0, 9, 9)
628.dimensions: width(Function(args)) (0, 2, 2)
629.dimensions: height() (0, 9, 9)
630.dimensions: height(Function) (0, 9, 9)
631.dimensions: height(Function(args)) (0, 2, 2)
632.dimensions: innerWidth() (0, 6, 6)
633.dimensions: innerHeight() (0, 6, 6)
634.dimensions: outerWidth() (0, 11, 11)
635.dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (0, 16, 16)
636.dimensions: getting dimensions shouldnt modify runtimeStyle see #9233 (0, 1, 1)
637.dimensions: table dimensions (0, 2, 2)
638.dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (0, 16, 16)
639.dimensions: outerHeight() (0, 11, 11)
640.dimensions: passing undefined is a setter #5571 (0, 4, 4)
641.dimensions: getters on non elements should return null (0, 8, 8)
642.dimensions: setters with and without box-sizing:border-box (0, 20, 20)
643.dimensions: window vs. small document (0, 1, 1)
644.dimensions: window vs. large document (0, 2, 2)
645.deprecated: browser (0, 544, 544)
646.exports: amdModule (0, 1, 1)
647.Sizzle: selector: element (0, 36, 36)
648.Sizzle: selector: XML Document Selectors (0, 10, 10)
649.Sizzle: selector: broken (0, 21, 21)
650.Sizzle: selector: id (0, 31, 31)
651.Sizzle: selector: class (0, 24, 24)
652.Sizzle: selector: name (0, 15, 15)
653.Sizzle: selector: multiple (0, 6, 6)
654.Sizzle: selector: child and adjacent (0, 42, 42)
655.Sizzle: selector: attributes (0, 62, 62)
656.Sizzle: selector: pseudo - child (0, 42, 42)
657.Sizzle: selector: pseudo - misc (0, 42, 42)
658.Sizzle: selector: pseudo - :not (0, 43, 43)
659.Sizzle: selector: pseudo - position (0, 33, 33)
660.Sizzle: selector: pseudo - form (0, 10, 10)
661.Sizzle: selector: caching (0, 1, 1)
662.Sizzle: selector: Sizzle.contains (0, 16, 16)
