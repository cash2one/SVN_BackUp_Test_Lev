/*
 * Copyright (c) 2002-2015 Gargoyle Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.gargoylesoftware.htmlunit.general.huge;

import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.CHROME;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.FF;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.FF31;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.FF38;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.IE;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.IE11;
import static com.gargoylesoftware.htmlunit.BrowserRunner.Browser.IE8;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;

import com.gargoylesoftware.htmlunit.BrowserParameterizedRunner;
import com.gargoylesoftware.htmlunit.BrowserParameterizedRunner.Default;
import com.gargoylesoftware.htmlunit.BrowserRunner.Alerts;
import com.gargoylesoftware.htmlunit.BrowserRunner.NotYetImplemented;
import com.gargoylesoftware.htmlunit.WebDriverTestCase;
import com.gargoylesoftware.htmlunit.html.HtmlPageTest;

/**
 * Tests for an element to close another element, which is defined in {@link org.cyberneko.html.HTMLElements}.
 *
 * @version $Revision: 10927 $
 * @author Ahmed Ashour
 */
@RunWith(BrowserParameterizedRunner.class)
public class ElementClosesElementTest extends WebDriverTestCase {

    /**
     * Returns the parameterized data.
     * @return the parameterized data
     * @throws Exception if an error occurs
     */
    @Parameters
    public static Collection<Object[]> data() throws Exception {
        final List<Object[]> list = new ArrayList<>();
        final List<String> strings = new ArrayList<>(HtmlPageTest.HTML_TAGS_);
        for (final String parent : strings) {
            for (final String child : strings) {
                list.add(new Object[] {parent, child});
            }
        }
        return list;
    }

    private void test(final String parent, final String child) throws Exception {
        loadPageWithAlerts2("<html><head>\n"
                + "<script>\n"
                + "function test() {\n"
                + "  var e = document.getElementById('outer');\n"
                + "  alert(e == null ? e : e.childNodes.length);\n"
                + "}\n"
                + "</script>\n"
                + "</head><body onload='test()'>\n"
                + "<" + parent + " id='outer'><" + child + ">\n"
                + "</body></html>");
    }

    /**
     * The parent element name.
     */
    @Parameter
    public String parent_;

    /**
     * The child element name.
     */
    @Parameter(1)
    public String child_;

    /**
     * The default test.
     * @throws Exception if an error occurs
     */
    @Test
    @Alerts("1")
    @Default
    public void closes() throws Exception {
        test(parent_, child_);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected boolean isWebClientCached() {
        return true;
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _abbr_area() throws Exception {
        test("abbr", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_bgsound() throws Exception {
        test("abbr", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_base() throws Exception {
        test("abbr", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_basefont() throws Exception {
        test("abbr", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_br() throws Exception {
        test("abbr", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _abbr_command() throws Exception {
        test("abbr", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _abbr_embed() throws Exception {
        test("abbr", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_hr() throws Exception {
        test("abbr", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _abbr_img() throws Exception {
        test("abbr", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _abbr_image() throws Exception {
        test("abbr", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_keygen() throws Exception {
        test("abbr", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_link() throws Exception {
        test("abbr", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_meta() throws Exception {
        test("abbr", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _abbr_param() throws Exception {
        test("abbr", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _abbr_source() throws Exception {
        test("abbr", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _abbr_track() throws Exception {
        test("abbr", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _abbr_wbr() throws Exception {
        test("abbr", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _acronym_area() throws Exception {
        test("acronym", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_bgsound() throws Exception {
        test("acronym", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_base() throws Exception {
        test("acronym", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_basefont() throws Exception {
        test("acronym", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_br() throws Exception {
        test("acronym", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _acronym_command() throws Exception {
        test("acronym", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _acronym_embed() throws Exception {
        test("acronym", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_hr() throws Exception {
        test("acronym", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _acronym_img() throws Exception {
        test("acronym", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _acronym_image() throws Exception {
        test("acronym", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_keygen() throws Exception {
        test("acronym", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_link() throws Exception {
        test("acronym", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_meta() throws Exception {
        test("acronym", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _acronym_param() throws Exception {
        test("acronym", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _acronym_source() throws Exception {
        test("acronym", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _acronym_track() throws Exception {
        test("acronym", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _acronym_wbr() throws Exception {
        test("acronym", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _a_a() throws Exception {
        test("a", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _a_area() throws Exception {
        test("a", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_bgsound() throws Exception {
        test("a", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_base() throws Exception {
        test("a", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_basefont() throws Exception {
        test("a", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_br() throws Exception {
        test("a", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _a_command() throws Exception {
        test("a", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _a_embed() throws Exception {
        test("a", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_hr() throws Exception {
        test("a", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _a_img() throws Exception {
        test("a", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _a_image() throws Exception {
        test("a", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_keygen() throws Exception {
        test("a", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_link() throws Exception {
        test("a", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_meta() throws Exception {
        test("a", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _a_param() throws Exception {
        test("a", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _a_source() throws Exception {
        test("a", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _a_track() throws Exception {
        test("a", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _a_wbr() throws Exception {
        test("a", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_area() throws Exception {
        test("address", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_bgsound() throws Exception {
        test("address", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_base() throws Exception {
        test("address", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_basefont() throws Exception {
        test("address", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_br() throws Exception {
        test("address", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _address_command() throws Exception {
        test("address", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _address_embed() throws Exception {
        test("address", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_hr() throws Exception {
        test("address", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _address_img() throws Exception {
        test("address", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _address_image() throws Exception {
        test("address", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_keygen() throws Exception {
        test("address", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_link() throws Exception {
        test("address", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_meta() throws Exception {
        test("address", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_param() throws Exception {
        test("address", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_source() throws Exception {
        test("address", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_track() throws Exception {
        test("address", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _address_wbr() throws Exception {
        test("address", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_area() throws Exception {
        test("applet", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_bgsound() throws Exception {
        test("applet", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_base() throws Exception {
        test("applet", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_basefont() throws Exception {
        test("applet", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_br() throws Exception {
        test("applet", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _applet_command() throws Exception {
        test("applet", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_embed() throws Exception {
        test("applet", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_hr() throws Exception {
        test("applet", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_img() throws Exception {
        test("applet", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_image() throws Exception {
        test("applet", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_keygen() throws Exception {
        test("applet", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_link() throws Exception {
        test("applet", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_meta() throws Exception {
        test("applet", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_param() throws Exception {
        test("applet", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_source() throws Exception {
        test("applet", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_track() throws Exception {
        test("applet", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_wbr() throws Exception {
        test("applet", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_abbr() throws Exception {
        test("area", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_acronym() throws Exception {
        test("area", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_a() throws Exception {
        test("area", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_address() throws Exception {
        test("area", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_applet() throws Exception {
        test("area", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_area() throws Exception {
        test("area", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_article() throws Exception {
        test("area", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_aside() throws Exception {
        test("area", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_audio() throws Exception {
        test("area", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_bgsound() throws Exception {
        test("area", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_base() throws Exception {
        test("area", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_basefont() throws Exception {
        test("area", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_bdi() throws Exception {
        test("area", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_bdo() throws Exception {
        test("area", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_big() throws Exception {
        test("area", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_blink() throws Exception {
        test("area", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_blockquote() throws Exception {
        test("area", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_body() throws Exception {
        test("area", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_b() throws Exception {
        test("area", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_br() throws Exception {
        test("area", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_button() throws Exception {
        test("area", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_canvas() throws Exception {
        test("area", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_caption() throws Exception {
        test("area", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_center() throws Exception {
        test("area", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_cite() throws Exception {
        test("area", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_code() throws Exception {
        test("area", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_command() throws Exception {
        test("area", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_datalist() throws Exception {
        test("area", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dfn() throws Exception {
        test("area", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dd() throws Exception {
        test("area", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_del() throws Exception {
        test("area", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_details() throws Exception {
        test("area", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dialog() throws Exception {
        test("area", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dir() throws Exception {
        test("area", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_div() throws Exception {
        test("area", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dl() throws Exception {
        test("area", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_dt() throws Exception {
        test("area", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_embed() throws Exception {
        test("area", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_em() throws Exception {
        test("area", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_fieldset() throws Exception {
        test("area", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_figcaption() throws Exception {
        test("area", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_figure() throws Exception {
        test("area", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_font() throws Exception {
        test("area", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_form() throws Exception {
        test("area", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_footer() throws Exception {
        test("area", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_frame() throws Exception {
        test("area", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_frameset() throws Exception {
        test("area", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_head() throws Exception {
        test("area", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_header() throws Exception {
        test("area", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h1() throws Exception {
        test("area", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h2() throws Exception {
        test("area", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h3() throws Exception {
        test("area", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h4() throws Exception {
        test("area", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h5() throws Exception {
        test("area", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_h6() throws Exception {
        test("area", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_hr() throws Exception {
        test("area", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_html() throws Exception {
        test("area", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_iframe() throws Exception {
        test("area", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_q() throws Exception {
        test("area", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_img() throws Exception {
        test("area", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_image() throws Exception {
        test("area", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_ins() throws Exception {
        test("area", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_isindex() throws Exception {
        test("area", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_i() throws Exception {
        test("area", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_kbd() throws Exception {
        test("area", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_keygen() throws Exception {
        test("area", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_label() throws Exception {
        test("area", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_layer() throws Exception {
        test("area", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_legend() throws Exception {
        test("area", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_listing() throws Exception {
        test("area", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_li() throws Exception {
        test("area", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_link() throws Exception {
        test("area", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_main() throws Exception {
        test("area", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_map() throws Exception {
        test("area", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_mark() throws Exception {
        test("area", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_marquee() throws Exception {
        test("area", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_menu() throws Exception {
        test("area", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_menuitem() throws Exception {
        test("area", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_meta() throws Exception {
        test("area", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_meter() throws Exception {
        test("area", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_multicol() throws Exception {
        test("area", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_nav() throws Exception {
        test("area", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_nextid() throws Exception {
        test("area", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_nobr() throws Exception {
        test("area", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_noembed() throws Exception {
        test("area", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_noframes() throws Exception {
        test("area", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_nolayer() throws Exception {
        test("area", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_noscript() throws Exception {
        test("area", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_object() throws Exception {
        test("area", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_ol() throws Exception {
        test("area", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_optgroup() throws Exception {
        test("area", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_option() throws Exception {
        test("area", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_output() throws Exception {
        test("area", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_p() throws Exception {
        test("area", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_param() throws Exception {
        test("area", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_plaintext() throws Exception {
        test("area", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_pre() throws Exception {
        test("area", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_progress() throws Exception {
        test("area", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_rp() throws Exception {
        test("area", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_rt() throws Exception {
        test("area", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_ruby() throws Exception {
        test("area", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_s() throws Exception {
        test("area", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_samp() throws Exception {
        test("area", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _area_script() throws Exception {
        test("area", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_section() throws Exception {
        test("area", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_select() throws Exception {
        test("area", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_small() throws Exception {
        test("area", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_source() throws Exception {
        test("area", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_span() throws Exception {
        test("area", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_strike() throws Exception {
        test("area", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_strong() throws Exception {
        test("area", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_style() throws Exception {
        test("area", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_sub() throws Exception {
        test("area", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_summary() throws Exception {
        test("area", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_sup() throws Exception {
        test("area", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_table() throws Exception {
        test("area", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_col() throws Exception {
        test("area", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_colgroup() throws Exception {
        test("area", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_tbody() throws Exception {
        test("area", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_td() throws Exception {
        test("area", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_th() throws Exception {
        test("area", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_tr() throws Exception {
        test("area", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_textarea() throws Exception {
        test("area", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_tfoot() throws Exception {
        test("area", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_thead() throws Exception {
        test("area", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_tt() throws Exception {
        test("area", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_time() throws Exception {
        test("area", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_title() throws Exception {
        test("area", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_track() throws Exception {
        test("area", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_u() throws Exception {
        test("area", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_ul() throws Exception {
        test("area", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_var() throws Exception {
        test("area", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_video() throws Exception {
        test("area", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_wbr() throws Exception {
        test("area", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_xmp() throws Exception {
        test("area", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _article_area() throws Exception {
        test("article", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_bgsound() throws Exception {
        test("article", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_base() throws Exception {
        test("article", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_basefont() throws Exception {
        test("article", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_br() throws Exception {
        test("article", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _article_command() throws Exception {
        test("article", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_embed() throws Exception {
        test("article", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_hr() throws Exception {
        test("article", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_img() throws Exception {
        test("article", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _article_image() throws Exception {
        test("article", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_keygen() throws Exception {
        test("article", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_link() throws Exception {
        test("article", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_meta() throws Exception {
        test("article", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _article_param() throws Exception {
        test("article", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _article_source() throws Exception {
        test("article", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _article_track() throws Exception {
        test("article", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_wbr() throws Exception {
        test("article", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_area() throws Exception {
        test("aside", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_bgsound() throws Exception {
        test("aside", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_base() throws Exception {
        test("aside", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_basefont() throws Exception {
        test("aside", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_br() throws Exception {
        test("aside", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _aside_command() throws Exception {
        test("aside", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_embed() throws Exception {
        test("aside", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_hr() throws Exception {
        test("aside", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_img() throws Exception {
        test("aside", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_image() throws Exception {
        test("aside", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_keygen() throws Exception {
        test("aside", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_link() throws Exception {
        test("aside", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_meta() throws Exception {
        test("aside", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_param() throws Exception {
        test("aside", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_source() throws Exception {
        test("aside", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_track() throws Exception {
        test("aside", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_wbr() throws Exception {
        test("aside", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_area() throws Exception {
        test("audio", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_bgsound() throws Exception {
        test("audio", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_base() throws Exception {
        test("audio", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_basefont() throws Exception {
        test("audio", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_br() throws Exception {
        test("audio", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _audio_command() throws Exception {
        test("audio", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_embed() throws Exception {
        test("audio", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_hr() throws Exception {
        test("audio", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_img() throws Exception {
        test("audio", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_image() throws Exception {
        test("audio", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_keygen() throws Exception {
        test("audio", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_link() throws Exception {
        test("audio", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_meta() throws Exception {
        test("audio", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_param() throws Exception {
        test("audio", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_source() throws Exception {
        test("audio", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_track() throws Exception {
        test("audio", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_wbr() throws Exception {
        test("audio", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_abbr() throws Exception {
        test("bgsound", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_acronym() throws Exception {
        test("bgsound", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_a() throws Exception {
        test("bgsound", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_address() throws Exception {
        test("bgsound", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_applet() throws Exception {
        test("bgsound", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_area() throws Exception {
        test("bgsound", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_article() throws Exception {
        test("bgsound", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_aside() throws Exception {
        test("bgsound", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_audio() throws Exception {
        test("bgsound", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_bgsound() throws Exception {
        test("bgsound", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_base() throws Exception {
        test("bgsound", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_basefont() throws Exception {
        test("bgsound", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_bdi() throws Exception {
        test("bgsound", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_bdo() throws Exception {
        test("bgsound", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_big() throws Exception {
        test("bgsound", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_blink() throws Exception {
        test("bgsound", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_blockquote() throws Exception {
        test("bgsound", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_body() throws Exception {
        test("bgsound", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_b() throws Exception {
        test("bgsound", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_br() throws Exception {
        test("bgsound", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_button() throws Exception {
        test("bgsound", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_canvas() throws Exception {
        test("bgsound", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_caption() throws Exception {
        test("bgsound", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_center() throws Exception {
        test("bgsound", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_cite() throws Exception {
        test("bgsound", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_code() throws Exception {
        test("bgsound", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_command() throws Exception {
        test("bgsound", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_datalist() throws Exception {
        test("bgsound", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dfn() throws Exception {
        test("bgsound", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dd() throws Exception {
        test("bgsound", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_del() throws Exception {
        test("bgsound", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_details() throws Exception {
        test("bgsound", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dialog() throws Exception {
        test("bgsound", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dir() throws Exception {
        test("bgsound", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_div() throws Exception {
        test("bgsound", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dl() throws Exception {
        test("bgsound", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_dt() throws Exception {
        test("bgsound", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_embed() throws Exception {
        test("bgsound", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_em() throws Exception {
        test("bgsound", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_fieldset() throws Exception {
        test("bgsound", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_figcaption() throws Exception {
        test("bgsound", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_figure() throws Exception {
        test("bgsound", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_font() throws Exception {
        test("bgsound", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_form() throws Exception {
        test("bgsound", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_footer() throws Exception {
        test("bgsound", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_frame() throws Exception {
        test("bgsound", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_frameset() throws Exception {
        test("bgsound", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_head() throws Exception {
        test("bgsound", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_header() throws Exception {
        test("bgsound", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h1() throws Exception {
        test("bgsound", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h2() throws Exception {
        test("bgsound", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h3() throws Exception {
        test("bgsound", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h4() throws Exception {
        test("bgsound", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h5() throws Exception {
        test("bgsound", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_h6() throws Exception {
        test("bgsound", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_hr() throws Exception {
        test("bgsound", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_html() throws Exception {
        test("bgsound", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_iframe() throws Exception {
        test("bgsound", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_q() throws Exception {
        test("bgsound", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_img() throws Exception {
        test("bgsound", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_image() throws Exception {
        test("bgsound", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_ins() throws Exception {
        test("bgsound", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_isindex() throws Exception {
        test("bgsound", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_i() throws Exception {
        test("bgsound", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_kbd() throws Exception {
        test("bgsound", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_keygen() throws Exception {
        test("bgsound", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_label() throws Exception {
        test("bgsound", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_layer() throws Exception {
        test("bgsound", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_legend() throws Exception {
        test("bgsound", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_listing() throws Exception {
        test("bgsound", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_li() throws Exception {
        test("bgsound", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_link() throws Exception {
        test("bgsound", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_main() throws Exception {
        test("bgsound", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_map() throws Exception {
        test("bgsound", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_mark() throws Exception {
        test("bgsound", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_marquee() throws Exception {
        test("bgsound", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_menu() throws Exception {
        test("bgsound", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_menuitem() throws Exception {
        test("bgsound", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_meta() throws Exception {
        test("bgsound", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_meter() throws Exception {
        test("bgsound", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_multicol() throws Exception {
        test("bgsound", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_nav() throws Exception {
        test("bgsound", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_nextid() throws Exception {
        test("bgsound", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_nobr() throws Exception {
        test("bgsound", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_noembed() throws Exception {
        test("bgsound", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_noframes() throws Exception {
        test("bgsound", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_nolayer() throws Exception {
        test("bgsound", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_noscript() throws Exception {
        test("bgsound", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_object() throws Exception {
        test("bgsound", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_ol() throws Exception {
        test("bgsound", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_optgroup() throws Exception {
        test("bgsound", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_option() throws Exception {
        test("bgsound", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_output() throws Exception {
        test("bgsound", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_p() throws Exception {
        test("bgsound", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_param() throws Exception {
        test("bgsound", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_plaintext() throws Exception {
        test("bgsound", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_pre() throws Exception {
        test("bgsound", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_progress() throws Exception {
        test("bgsound", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_rp() throws Exception {
        test("bgsound", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_rt() throws Exception {
        test("bgsound", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_ruby() throws Exception {
        test("bgsound", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_s() throws Exception {
        test("bgsound", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_samp() throws Exception {
        test("bgsound", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _bgsound_script() throws Exception {
        test("bgsound", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_section() throws Exception {
        test("bgsound", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_select() throws Exception {
        test("bgsound", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_small() throws Exception {
        test("bgsound", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_source() throws Exception {
        test("bgsound", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_span() throws Exception {
        test("bgsound", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_strike() throws Exception {
        test("bgsound", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_strong() throws Exception {
        test("bgsound", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_style() throws Exception {
        test("bgsound", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_sub() throws Exception {
        test("bgsound", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_summary() throws Exception {
        test("bgsound", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_sup() throws Exception {
        test("bgsound", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_table() throws Exception {
        test("bgsound", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_col() throws Exception {
        test("bgsound", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_colgroup() throws Exception {
        test("bgsound", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_tbody() throws Exception {
        test("bgsound", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_td() throws Exception {
        test("bgsound", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_th() throws Exception {
        test("bgsound", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_tr() throws Exception {
        test("bgsound", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_textarea() throws Exception {
        test("bgsound", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_tfoot() throws Exception {
        test("bgsound", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_thead() throws Exception {
        test("bgsound", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_tt() throws Exception {
        test("bgsound", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_time() throws Exception {
        test("bgsound", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_title() throws Exception {
        test("bgsound", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_track() throws Exception {
        test("bgsound", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_u() throws Exception {
        test("bgsound", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_ul() throws Exception {
        test("bgsound", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_var() throws Exception {
        test("bgsound", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_video() throws Exception {
        test("bgsound", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_wbr() throws Exception {
        test("bgsound", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_xmp() throws Exception {
        test("bgsound", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_abbr() throws Exception {
        test("base", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_acronym() throws Exception {
        test("base", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_a() throws Exception {
        test("base", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_address() throws Exception {
        test("base", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_applet() throws Exception {
        test("base", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_area() throws Exception {
        test("base", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_article() throws Exception {
        test("base", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_aside() throws Exception {
        test("base", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_audio() throws Exception {
        test("base", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_bgsound() throws Exception {
        test("base", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_base() throws Exception {
        test("base", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_basefont() throws Exception {
        test("base", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_bdi() throws Exception {
        test("base", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_bdo() throws Exception {
        test("base", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_big() throws Exception {
        test("base", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_blink() throws Exception {
        test("base", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_blockquote() throws Exception {
        test("base", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_body() throws Exception {
        test("base", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_b() throws Exception {
        test("base", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_br() throws Exception {
        test("base", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_button() throws Exception {
        test("base", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_canvas() throws Exception {
        test("base", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_caption() throws Exception {
        test("base", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_center() throws Exception {
        test("base", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_cite() throws Exception {
        test("base", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_code() throws Exception {
        test("base", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_command() throws Exception {
        test("base", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_datalist() throws Exception {
        test("base", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dfn() throws Exception {
        test("base", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dd() throws Exception {
        test("base", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_del() throws Exception {
        test("base", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_details() throws Exception {
        test("base", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dialog() throws Exception {
        test("base", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dir() throws Exception {
        test("base", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_div() throws Exception {
        test("base", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dl() throws Exception {
        test("base", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_dt() throws Exception {
        test("base", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_embed() throws Exception {
        test("base", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_em() throws Exception {
        test("base", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_fieldset() throws Exception {
        test("base", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_figcaption() throws Exception {
        test("base", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_figure() throws Exception {
        test("base", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_font() throws Exception {
        test("base", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_form() throws Exception {
        test("base", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_footer() throws Exception {
        test("base", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_frame() throws Exception {
        test("base", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_frameset() throws Exception {
        test("base", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_head() throws Exception {
        test("base", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_header() throws Exception {
        test("base", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h1() throws Exception {
        test("base", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h2() throws Exception {
        test("base", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h3() throws Exception {
        test("base", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h4() throws Exception {
        test("base", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h5() throws Exception {
        test("base", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_h6() throws Exception {
        test("base", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_hr() throws Exception {
        test("base", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_html() throws Exception {
        test("base", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_iframe() throws Exception {
        test("base", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_q() throws Exception {
        test("base", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_img() throws Exception {
        test("base", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_image() throws Exception {
        test("base", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_ins() throws Exception {
        test("base", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_isindex() throws Exception {
        test("base", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_i() throws Exception {
        test("base", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_kbd() throws Exception {
        test("base", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_keygen() throws Exception {
        test("base", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_label() throws Exception {
        test("base", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_layer() throws Exception {
        test("base", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_legend() throws Exception {
        test("base", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_listing() throws Exception {
        test("base", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_li() throws Exception {
        test("base", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_link() throws Exception {
        test("base", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_main() throws Exception {
        test("base", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_map() throws Exception {
        test("base", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_mark() throws Exception {
        test("base", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_marquee() throws Exception {
        test("base", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_menu() throws Exception {
        test("base", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_menuitem() throws Exception {
        test("base", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_meta() throws Exception {
        test("base", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_meter() throws Exception {
        test("base", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_multicol() throws Exception {
        test("base", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_nav() throws Exception {
        test("base", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_nextid() throws Exception {
        test("base", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_nobr() throws Exception {
        test("base", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_noembed() throws Exception {
        test("base", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_noframes() throws Exception {
        test("base", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_nolayer() throws Exception {
        test("base", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_noscript() throws Exception {
        test("base", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_object() throws Exception {
        test("base", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_ol() throws Exception {
        test("base", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_optgroup() throws Exception {
        test("base", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_option() throws Exception {
        test("base", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_output() throws Exception {
        test("base", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_p() throws Exception {
        test("base", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_param() throws Exception {
        test("base", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_plaintext() throws Exception {
        test("base", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_pre() throws Exception {
        test("base", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_progress() throws Exception {
        test("base", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_rp() throws Exception {
        test("base", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_rt() throws Exception {
        test("base", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_ruby() throws Exception {
        test("base", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_s() throws Exception {
        test("base", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_samp() throws Exception {
        test("base", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _base_script() throws Exception {
        test("base", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_section() throws Exception {
        test("base", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_select() throws Exception {
        test("base", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_small() throws Exception {
        test("base", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_source() throws Exception {
        test("base", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_span() throws Exception {
        test("base", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_strike() throws Exception {
        test("base", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_strong() throws Exception {
        test("base", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_style() throws Exception {
        test("base", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_sub() throws Exception {
        test("base", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_summary() throws Exception {
        test("base", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_sup() throws Exception {
        test("base", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_table() throws Exception {
        test("base", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_col() throws Exception {
        test("base", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_colgroup() throws Exception {
        test("base", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_tbody() throws Exception {
        test("base", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_td() throws Exception {
        test("base", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_th() throws Exception {
        test("base", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_tr() throws Exception {
        test("base", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_textarea() throws Exception {
        test("base", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_tfoot() throws Exception {
        test("base", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_thead() throws Exception {
        test("base", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_tt() throws Exception {
        test("base", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_time() throws Exception {
        test("base", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_title() throws Exception {
        test("base", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_track() throws Exception {
        test("base", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_u() throws Exception {
        test("base", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_ul() throws Exception {
        test("base", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_var() throws Exception {
        test("base", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_video() throws Exception {
        test("base", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_wbr() throws Exception {
        test("base", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_xmp() throws Exception {
        test("base", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_abbr() throws Exception {
        test("basefont", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_acronym() throws Exception {
        test("basefont", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_a() throws Exception {
        test("basefont", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_address() throws Exception {
        test("basefont", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_applet() throws Exception {
        test("basefont", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_area() throws Exception {
        test("basefont", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_article() throws Exception {
        test("basefont", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_aside() throws Exception {
        test("basefont", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_audio() throws Exception {
        test("basefont", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_bgsound() throws Exception {
        test("basefont", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_base() throws Exception {
        test("basefont", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_basefont() throws Exception {
        test("basefont", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_bdi() throws Exception {
        test("basefont", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_bdo() throws Exception {
        test("basefont", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_big() throws Exception {
        test("basefont", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_blink() throws Exception {
        test("basefont", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_blockquote() throws Exception {
        test("basefont", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_body() throws Exception {
        test("basefont", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_b() throws Exception {
        test("basefont", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_br() throws Exception {
        test("basefont", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_button() throws Exception {
        test("basefont", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_canvas() throws Exception {
        test("basefont", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_caption() throws Exception {
        test("basefont", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_center() throws Exception {
        test("basefont", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_cite() throws Exception {
        test("basefont", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_code() throws Exception {
        test("basefont", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_command() throws Exception {
        test("basefont", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_datalist() throws Exception {
        test("basefont", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dfn() throws Exception {
        test("basefont", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dd() throws Exception {
        test("basefont", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_del() throws Exception {
        test("basefont", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_details() throws Exception {
        test("basefont", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dialog() throws Exception {
        test("basefont", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dir() throws Exception {
        test("basefont", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_div() throws Exception {
        test("basefont", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dl() throws Exception {
        test("basefont", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_dt() throws Exception {
        test("basefont", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_embed() throws Exception {
        test("basefont", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_em() throws Exception {
        test("basefont", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_fieldset() throws Exception {
        test("basefont", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_figcaption() throws Exception {
        test("basefont", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_figure() throws Exception {
        test("basefont", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_font() throws Exception {
        test("basefont", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_form() throws Exception {
        test("basefont", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_footer() throws Exception {
        test("basefont", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_frame() throws Exception {
        test("basefont", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_frameset() throws Exception {
        test("basefont", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_head() throws Exception {
        test("basefont", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_header() throws Exception {
        test("basefont", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h1() throws Exception {
        test("basefont", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h2() throws Exception {
        test("basefont", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h3() throws Exception {
        test("basefont", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h4() throws Exception {
        test("basefont", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h5() throws Exception {
        test("basefont", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_h6() throws Exception {
        test("basefont", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_hr() throws Exception {
        test("basefont", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_html() throws Exception {
        test("basefont", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_iframe() throws Exception {
        test("basefont", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_q() throws Exception {
        test("basefont", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_img() throws Exception {
        test("basefont", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_image() throws Exception {
        test("basefont", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_ins() throws Exception {
        test("basefont", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_isindex() throws Exception {
        test("basefont", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_i() throws Exception {
        test("basefont", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_kbd() throws Exception {
        test("basefont", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_keygen() throws Exception {
        test("basefont", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_label() throws Exception {
        test("basefont", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_layer() throws Exception {
        test("basefont", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_legend() throws Exception {
        test("basefont", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_listing() throws Exception {
        test("basefont", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_li() throws Exception {
        test("basefont", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_link() throws Exception {
        test("basefont", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_main() throws Exception {
        test("basefont", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_map() throws Exception {
        test("basefont", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_mark() throws Exception {
        test("basefont", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_marquee() throws Exception {
        test("basefont", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_menu() throws Exception {
        test("basefont", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_menuitem() throws Exception {
        test("basefont", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_meta() throws Exception {
        test("basefont", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_meter() throws Exception {
        test("basefont", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_multicol() throws Exception {
        test("basefont", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_nav() throws Exception {
        test("basefont", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_nextid() throws Exception {
        test("basefont", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_nobr() throws Exception {
        test("basefont", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_noembed() throws Exception {
        test("basefont", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_noframes() throws Exception {
        test("basefont", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_nolayer() throws Exception {
        test("basefont", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_noscript() throws Exception {
        test("basefont", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_object() throws Exception {
        test("basefont", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_ol() throws Exception {
        test("basefont", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_optgroup() throws Exception {
        test("basefont", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_option() throws Exception {
        test("basefont", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_output() throws Exception {
        test("basefont", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_p() throws Exception {
        test("basefont", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_param() throws Exception {
        test("basefont", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_plaintext() throws Exception {
        test("basefont", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_pre() throws Exception {
        test("basefont", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_progress() throws Exception {
        test("basefont", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_rp() throws Exception {
        test("basefont", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_rt() throws Exception {
        test("basefont", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_ruby() throws Exception {
        test("basefont", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_s() throws Exception {
        test("basefont", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_samp() throws Exception {
        test("basefont", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _basefont_script() throws Exception {
        test("basefont", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_section() throws Exception {
        test("basefont", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_select() throws Exception {
        test("basefont", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_small() throws Exception {
        test("basefont", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_source() throws Exception {
        test("basefont", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_span() throws Exception {
        test("basefont", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_strike() throws Exception {
        test("basefont", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_strong() throws Exception {
        test("basefont", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_style() throws Exception {
        test("basefont", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_sub() throws Exception {
        test("basefont", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_summary() throws Exception {
        test("basefont", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_sup() throws Exception {
        test("basefont", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_table() throws Exception {
        test("basefont", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_col() throws Exception {
        test("basefont", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_colgroup() throws Exception {
        test("basefont", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_tbody() throws Exception {
        test("basefont", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_td() throws Exception {
        test("basefont", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_th() throws Exception {
        test("basefont", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_tr() throws Exception {
        test("basefont", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_textarea() throws Exception {
        test("basefont", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_tfoot() throws Exception {
        test("basefont", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_thead() throws Exception {
        test("basefont", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_tt() throws Exception {
        test("basefont", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_time() throws Exception {
        test("basefont", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_title() throws Exception {
        test("basefont", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_track() throws Exception {
        test("basefont", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_u() throws Exception {
        test("basefont", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_ul() throws Exception {
        test("basefont", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_var() throws Exception {
        test("basefont", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_video() throws Exception {
        test("basefont", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_wbr() throws Exception {
        test("basefont", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _basefont_xmp() throws Exception {
        test("basefont", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_area() throws Exception {
        test("bdi", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_bgsound() throws Exception {
        test("bdi", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_base() throws Exception {
        test("bdi", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_basefont() throws Exception {
        test("bdi", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_br() throws Exception {
        test("bdi", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _bdi_command() throws Exception {
        test("bdi", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_embed() throws Exception {
        test("bdi", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_hr() throws Exception {
        test("bdi", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_img() throws Exception {
        test("bdi", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_image() throws Exception {
        test("bdi", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_keygen() throws Exception {
        test("bdi", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_link() throws Exception {
        test("bdi", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_meta() throws Exception {
        test("bdi", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_param() throws Exception {
        test("bdi", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_source() throws Exception {
        test("bdi", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_track() throws Exception {
        test("bdi", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_wbr() throws Exception {
        test("bdi", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdo_area() throws Exception {
        test("bdo", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_bgsound() throws Exception {
        test("bdo", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_base() throws Exception {
        test("bdo", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_basefont() throws Exception {
        test("bdo", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_br() throws Exception {
        test("bdo", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _bdo_command() throws Exception {
        test("bdo", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _bdo_embed() throws Exception {
        test("bdo", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_hr() throws Exception {
        test("bdo", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _bdo_img() throws Exception {
        test("bdo", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _bdo_image() throws Exception {
        test("bdo", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_keygen() throws Exception {
        test("bdo", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_link() throws Exception {
        test("bdo", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_meta() throws Exception {
        test("bdo", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _bdo_param() throws Exception {
        test("bdo", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdo_source() throws Exception {
        test("bdo", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdo_track() throws Exception {
        test("bdo", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _bdo_wbr() throws Exception {
        test("bdo", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _big_area() throws Exception {
        test("big", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_bgsound() throws Exception {
        test("big", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_base() throws Exception {
        test("big", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_basefont() throws Exception {
        test("big", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_br() throws Exception {
        test("big", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _big_command() throws Exception {
        test("big", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _big_embed() throws Exception {
        test("big", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_hr() throws Exception {
        test("big", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _big_img() throws Exception {
        test("big", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _big_image() throws Exception {
        test("big", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_keygen() throws Exception {
        test("big", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_link() throws Exception {
        test("big", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_meta() throws Exception {
        test("big", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _big_param() throws Exception {
        test("big", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _big_source() throws Exception {
        test("big", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _big_track() throws Exception {
        test("big", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _big_wbr() throws Exception {
        test("big", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blink_area() throws Exception {
        test("blink", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_bgsound() throws Exception {
        test("blink", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_base() throws Exception {
        test("blink", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_basefont() throws Exception {
        test("blink", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_br() throws Exception {
        test("blink", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _blink_command() throws Exception {
        test("blink", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _blink_embed() throws Exception {
        test("blink", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_hr() throws Exception {
        test("blink", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _blink_img() throws Exception {
        test("blink", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _blink_image() throws Exception {
        test("blink", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_keygen() throws Exception {
        test("blink", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_link() throws Exception {
        test("blink", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_meta() throws Exception {
        test("blink", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _blink_param() throws Exception {
        test("blink", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blink_source() throws Exception {
        test("blink", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blink_track() throws Exception {
        test("blink", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blink_wbr() throws Exception {
        test("blink", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_area() throws Exception {
        test("blockquote", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_bgsound() throws Exception {
        test("blockquote", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_base() throws Exception {
        test("blockquote", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_basefont() throws Exception {
        test("blockquote", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_br() throws Exception {
        test("blockquote", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _blockquote_command() throws Exception {
        test("blockquote", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _blockquote_embed() throws Exception {
        test("blockquote", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_hr() throws Exception {
        test("blockquote", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _blockquote_img() throws Exception {
        test("blockquote", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _blockquote_image() throws Exception {
        test("blockquote", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_keygen() throws Exception {
        test("blockquote", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_link() throws Exception {
        test("blockquote", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_meta() throws Exception {
        test("blockquote", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_param() throws Exception {
        test("blockquote", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_source() throws Exception {
        test("blockquote", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_track() throws Exception {
        test("blockquote", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _blockquote_wbr() throws Exception {
        test("blockquote", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_abbr() throws Exception {
        test("body", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_acronym() throws Exception {
        test("body", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_a() throws Exception {
        test("body", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_address() throws Exception {
        test("body", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_applet() throws Exception {
        test("body", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_area() throws Exception {
        test("body", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_article() throws Exception {
        test("body", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_aside() throws Exception {
        test("body", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_audio() throws Exception {
        test("body", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_bgsound() throws Exception {
        test("body", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_base() throws Exception {
        test("body", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_basefont() throws Exception {
        test("body", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_bdi() throws Exception {
        test("body", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_bdo() throws Exception {
        test("body", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_big() throws Exception {
        test("body", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_blink() throws Exception {
        test("body", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_blockquote() throws Exception {
        test("body", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_b() throws Exception {
        test("body", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_br() throws Exception {
        test("body", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_button() throws Exception {
        test("body", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_canvas() throws Exception {
        test("body", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_center() throws Exception {
        test("body", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_cite() throws Exception {
        test("body", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_code() throws Exception {
        test("body", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF = "2")
    @NotYetImplemented({ CHROME, IE11 })
    public void _body_command() throws Exception {
        test("body", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_datalist() throws Exception {
        test("body", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dfn() throws Exception {
        test("body", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dd() throws Exception {
        test("body", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_del() throws Exception {
        test("body", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_details() throws Exception {
        test("body", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dialog() throws Exception {
        test("body", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dir() throws Exception {
        test("body", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_div() throws Exception {
        test("body", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dl() throws Exception {
        test("body", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_dt() throws Exception {
        test("body", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "2",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ IE8 })
    public void _body_embed() throws Exception {
        test("body", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_em() throws Exception {
        test("body", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_fieldset() throws Exception {
        test("body", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_figcaption() throws Exception {
        test("body", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_figure() throws Exception {
        test("body", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_font() throws Exception {
        test("body", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_form() throws Exception {
        test("body", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_footer() throws Exception {
        test("body", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_header() throws Exception {
        test("body", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h1() throws Exception {
        test("body", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h2() throws Exception {
        test("body", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h3() throws Exception {
        test("body", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h4() throws Exception {
        test("body", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h5() throws Exception {
        test("body", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_h6() throws Exception {
        test("body", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_hr() throws Exception {
        test("body", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_iframe() throws Exception {
        test("body", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_q() throws Exception {
        test("body", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "2",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ IE8 })
    public void _body_img() throws Exception {
        test("body", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "2",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented
    public void _body_image() throws Exception {
        test("body", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_ins() throws Exception {
        test("body", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ FF, IE11 })
    public void _body_isindex() throws Exception {
        test("body", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_i() throws Exception {
        test("body", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_kbd() throws Exception {
        test("body", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_keygen() throws Exception {
        test("body", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_label() throws Exception {
        test("body", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_layer() throws Exception {
        test("body", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_legend() throws Exception {
        test("body", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_listing() throws Exception {
        test("body", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_li() throws Exception {
        test("body", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_link() throws Exception {
        test("body", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_main() throws Exception {
        test("body", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_map() throws Exception {
        test("body", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_mark() throws Exception {
        test("body", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_marquee() throws Exception {
        test("body", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_menu() throws Exception {
        test("body", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_menuitem() throws Exception {
        test("body", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_meta() throws Exception {
        test("body", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_meter() throws Exception {
        test("body", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_multicol() throws Exception {
        test("body", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_nav() throws Exception {
        test("body", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_nextid() throws Exception {
        test("body", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_nobr() throws Exception {
        test("body", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_noembed() throws Exception {
        test("body", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_noframes() throws Exception {
        test("body", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_nolayer() throws Exception {
        test("body", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_noscript() throws Exception {
        test("body", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _body_object() throws Exception {
        test("body", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_ol() throws Exception {
        test("body", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented
    public void _body_optgroup() throws Exception {
        test("body", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented
    public void _body_option() throws Exception {
        test("body", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_output() throws Exception {
        test("body", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_p() throws Exception {
        test("body", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_param() throws Exception {
        test("body", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_plaintext() throws Exception {
        test("body", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_pre() throws Exception {
        test("body", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_progress() throws Exception {
        test("body", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_rp() throws Exception {
        test("body", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_rt() throws Exception {
        test("body", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_ruby() throws Exception {
        test("body", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_s() throws Exception {
        test("body", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_samp() throws Exception {
        test("body", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented
    public void _body_script() throws Exception {
        test("body", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_section() throws Exception {
        test("body", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_select() throws Exception {
        test("body", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_small() throws Exception {
        test("body", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_source() throws Exception {
        test("body", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_span() throws Exception {
        test("body", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_strike() throws Exception {
        test("body", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_strong() throws Exception {
        test("body", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_style() throws Exception {
        test("body", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_sub() throws Exception {
        test("body", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_summary() throws Exception {
        test("body", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_sup() throws Exception {
        test("body", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_table() throws Exception {
        test("body", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_textarea() throws Exception {
        test("body", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_tt() throws Exception {
        test("body", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_time() throws Exception {
        test("body", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_title() throws Exception {
        test("body", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_track() throws Exception {
        test("body", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_u() throws Exception {
        test("body", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_ul() throws Exception {
        test("body", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_var() throws Exception {
        test("body", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_video() throws Exception {
        test("body", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "3",
            IE11 = "3",
            IE8 = "1",
            FF31 = "3",
            FF38 = "3")
    public void _body_wbr() throws Exception {
        test("body", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_xmp() throws Exception {
        test("body", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _b_area() throws Exception {
        test("b", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_bgsound() throws Exception {
        test("b", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_base() throws Exception {
        test("b", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_basefont() throws Exception {
        test("b", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_br() throws Exception {
        test("b", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _b_command() throws Exception {
        test("b", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _b_embed() throws Exception {
        test("b", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_hr() throws Exception {
        test("b", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _b_img() throws Exception {
        test("b", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _b_image() throws Exception {
        test("b", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_keygen() throws Exception {
        test("b", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_link() throws Exception {
        test("b", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_meta() throws Exception {
        test("b", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _b_param() throws Exception {
        test("b", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _b_source() throws Exception {
        test("b", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _b_track() throws Exception {
        test("b", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _b_wbr() throws Exception {
        test("b", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_abbr() throws Exception {
        test("br", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_acronym() throws Exception {
        test("br", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_a() throws Exception {
        test("br", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_address() throws Exception {
        test("br", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_applet() throws Exception {
        test("br", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_area() throws Exception {
        test("br", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_article() throws Exception {
        test("br", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_aside() throws Exception {
        test("br", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_audio() throws Exception {
        test("br", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_bgsound() throws Exception {
        test("br", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_base() throws Exception {
        test("br", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_basefont() throws Exception {
        test("br", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_bdi() throws Exception {
        test("br", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_bdo() throws Exception {
        test("br", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_big() throws Exception {
        test("br", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_blink() throws Exception {
        test("br", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_blockquote() throws Exception {
        test("br", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_body() throws Exception {
        test("br", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_b() throws Exception {
        test("br", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_br() throws Exception {
        test("br", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_button() throws Exception {
        test("br", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_canvas() throws Exception {
        test("br", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_caption() throws Exception {
        test("br", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_center() throws Exception {
        test("br", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_cite() throws Exception {
        test("br", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_code() throws Exception {
        test("br", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_command() throws Exception {
        test("br", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_datalist() throws Exception {
        test("br", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dfn() throws Exception {
        test("br", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dd() throws Exception {
        test("br", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_del() throws Exception {
        test("br", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_details() throws Exception {
        test("br", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dialog() throws Exception {
        test("br", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dir() throws Exception {
        test("br", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_div() throws Exception {
        test("br", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dl() throws Exception {
        test("br", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_dt() throws Exception {
        test("br", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_embed() throws Exception {
        test("br", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_em() throws Exception {
        test("br", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_fieldset() throws Exception {
        test("br", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_figcaption() throws Exception {
        test("br", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_figure() throws Exception {
        test("br", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_font() throws Exception {
        test("br", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_form() throws Exception {
        test("br", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_footer() throws Exception {
        test("br", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_frame() throws Exception {
        test("br", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_frameset() throws Exception {
        test("br", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_head() throws Exception {
        test("br", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_header() throws Exception {
        test("br", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h1() throws Exception {
        test("br", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h2() throws Exception {
        test("br", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h3() throws Exception {
        test("br", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h4() throws Exception {
        test("br", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h5() throws Exception {
        test("br", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_h6() throws Exception {
        test("br", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_hr() throws Exception {
        test("br", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_html() throws Exception {
        test("br", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_iframe() throws Exception {
        test("br", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_q() throws Exception {
        test("br", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_img() throws Exception {
        test("br", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_image() throws Exception {
        test("br", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_ins() throws Exception {
        test("br", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_isindex() throws Exception {
        test("br", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_i() throws Exception {
        test("br", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_kbd() throws Exception {
        test("br", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_keygen() throws Exception {
        test("br", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_label() throws Exception {
        test("br", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_layer() throws Exception {
        test("br", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_legend() throws Exception {
        test("br", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_listing() throws Exception {
        test("br", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_li() throws Exception {
        test("br", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_link() throws Exception {
        test("br", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_main() throws Exception {
        test("br", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_map() throws Exception {
        test("br", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_mark() throws Exception {
        test("br", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_marquee() throws Exception {
        test("br", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_menu() throws Exception {
        test("br", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_menuitem() throws Exception {
        test("br", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_meta() throws Exception {
        test("br", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_meter() throws Exception {
        test("br", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_multicol() throws Exception {
        test("br", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_nav() throws Exception {
        test("br", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_nextid() throws Exception {
        test("br", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_nobr() throws Exception {
        test("br", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_noembed() throws Exception {
        test("br", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_noframes() throws Exception {
        test("br", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_nolayer() throws Exception {
        test("br", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_noscript() throws Exception {
        test("br", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_object() throws Exception {
        test("br", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_ol() throws Exception {
        test("br", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_optgroup() throws Exception {
        test("br", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_option() throws Exception {
        test("br", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_output() throws Exception {
        test("br", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_p() throws Exception {
        test("br", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_param() throws Exception {
        test("br", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_plaintext() throws Exception {
        test("br", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_pre() throws Exception {
        test("br", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_progress() throws Exception {
        test("br", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_rp() throws Exception {
        test("br", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_rt() throws Exception {
        test("br", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_ruby() throws Exception {
        test("br", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_s() throws Exception {
        test("br", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_samp() throws Exception {
        test("br", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _br_script() throws Exception {
        test("br", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_section() throws Exception {
        test("br", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_select() throws Exception {
        test("br", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_small() throws Exception {
        test("br", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_source() throws Exception {
        test("br", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_span() throws Exception {
        test("br", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_strike() throws Exception {
        test("br", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_strong() throws Exception {
        test("br", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_style() throws Exception {
        test("br", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_sub() throws Exception {
        test("br", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_summary() throws Exception {
        test("br", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_sup() throws Exception {
        test("br", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_table() throws Exception {
        test("br", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_col() throws Exception {
        test("br", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_colgroup() throws Exception {
        test("br", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_tbody() throws Exception {
        test("br", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_td() throws Exception {
        test("br", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_th() throws Exception {
        test("br", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_tr() throws Exception {
        test("br", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_textarea() throws Exception {
        test("br", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_tfoot() throws Exception {
        test("br", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_thead() throws Exception {
        test("br", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_tt() throws Exception {
        test("br", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_time() throws Exception {
        test("br", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_title() throws Exception {
        test("br", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_track() throws Exception {
        test("br", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_u() throws Exception {
        test("br", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_ul() throws Exception {
        test("br", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_var() throws Exception {
        test("br", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_video() throws Exception {
        test("br", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_wbr() throws Exception {
        test("br", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_xmp() throws Exception {
        test("br", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_area() throws Exception {
        test("button", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_bgsound() throws Exception {
        test("button", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_base() throws Exception {
        test("button", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_basefont() throws Exception {
        test("button", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_br() throws Exception {
        test("button", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _button_button() throws Exception {
        test("button", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _button_command() throws Exception {
        test("button", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_embed() throws Exception {
        test("button", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_hr() throws Exception {
        test("button", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_img() throws Exception {
        test("button", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_image() throws Exception {
        test("button", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_keygen() throws Exception {
        test("button", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_link() throws Exception {
        test("button", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_meta() throws Exception {
        test("button", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _button_param() throws Exception {
        test("button", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_source() throws Exception {
        test("button", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_track() throws Exception {
        test("button", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _button_wbr() throws Exception {
        test("button", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_area() throws Exception {
        test("canvas", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_bgsound() throws Exception {
        test("canvas", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_base() throws Exception {
        test("canvas", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_basefont() throws Exception {
        test("canvas", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_br() throws Exception {
        test("canvas", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _canvas_command() throws Exception {
        test("canvas", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_embed() throws Exception {
        test("canvas", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_hr() throws Exception {
        test("canvas", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_img() throws Exception {
        test("canvas", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_image() throws Exception {
        test("canvas", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_keygen() throws Exception {
        test("canvas", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_link() throws Exception {
        test("canvas", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_meta() throws Exception {
        test("canvas", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_param() throws Exception {
        test("canvas", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_source() throws Exception {
        test("canvas", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_track() throws Exception {
        test("canvas", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_wbr() throws Exception {
        test("canvas", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_abbr() throws Exception {
        test("caption", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_acronym() throws Exception {
        test("caption", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_a() throws Exception {
        test("caption", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_address() throws Exception {
        test("caption", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_applet() throws Exception {
        test("caption", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_area() throws Exception {
        test("caption", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_article() throws Exception {
        test("caption", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_aside() throws Exception {
        test("caption", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_audio() throws Exception {
        test("caption", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_bgsound() throws Exception {
        test("caption", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_base() throws Exception {
        test("caption", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_basefont() throws Exception {
        test("caption", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_bdi() throws Exception {
        test("caption", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_bdo() throws Exception {
        test("caption", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_big() throws Exception {
        test("caption", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_blink() throws Exception {
        test("caption", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_blockquote() throws Exception {
        test("caption", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_body() throws Exception {
        test("caption", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_b() throws Exception {
        test("caption", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_br() throws Exception {
        test("caption", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_button() throws Exception {
        test("caption", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_canvas() throws Exception {
        test("caption", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_caption() throws Exception {
        test("caption", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_center() throws Exception {
        test("caption", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_cite() throws Exception {
        test("caption", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_code() throws Exception {
        test("caption", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_command() throws Exception {
        test("caption", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_datalist() throws Exception {
        test("caption", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dfn() throws Exception {
        test("caption", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dd() throws Exception {
        test("caption", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_del() throws Exception {
        test("caption", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_details() throws Exception {
        test("caption", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dialog() throws Exception {
        test("caption", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dir() throws Exception {
        test("caption", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_div() throws Exception {
        test("caption", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dl() throws Exception {
        test("caption", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_dt() throws Exception {
        test("caption", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_embed() throws Exception {
        test("caption", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_em() throws Exception {
        test("caption", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_fieldset() throws Exception {
        test("caption", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_figcaption() throws Exception {
        test("caption", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_figure() throws Exception {
        test("caption", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_font() throws Exception {
        test("caption", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_form() throws Exception {
        test("caption", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_footer() throws Exception {
        test("caption", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_frame() throws Exception {
        test("caption", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_frameset() throws Exception {
        test("caption", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_head() throws Exception {
        test("caption", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_header() throws Exception {
        test("caption", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h1() throws Exception {
        test("caption", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h2() throws Exception {
        test("caption", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h3() throws Exception {
        test("caption", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h4() throws Exception {
        test("caption", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h5() throws Exception {
        test("caption", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_h6() throws Exception {
        test("caption", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_hr() throws Exception {
        test("caption", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_html() throws Exception {
        test("caption", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_iframe() throws Exception {
        test("caption", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_q() throws Exception {
        test("caption", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_img() throws Exception {
        test("caption", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_image() throws Exception {
        test("caption", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_ins() throws Exception {
        test("caption", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_isindex() throws Exception {
        test("caption", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_i() throws Exception {
        test("caption", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_kbd() throws Exception {
        test("caption", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_keygen() throws Exception {
        test("caption", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_label() throws Exception {
        test("caption", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_layer() throws Exception {
        test("caption", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_legend() throws Exception {
        test("caption", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_listing() throws Exception {
        test("caption", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_li() throws Exception {
        test("caption", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_link() throws Exception {
        test("caption", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_main() throws Exception {
        test("caption", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_map() throws Exception {
        test("caption", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_mark() throws Exception {
        test("caption", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_marquee() throws Exception {
        test("caption", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_menu() throws Exception {
        test("caption", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_menuitem() throws Exception {
        test("caption", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_meta() throws Exception {
        test("caption", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_meter() throws Exception {
        test("caption", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_multicol() throws Exception {
        test("caption", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_nav() throws Exception {
        test("caption", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_nextid() throws Exception {
        test("caption", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_nobr() throws Exception {
        test("caption", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_noembed() throws Exception {
        test("caption", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_noframes() throws Exception {
        test("caption", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_nolayer() throws Exception {
        test("caption", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_noscript() throws Exception {
        test("caption", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_object() throws Exception {
        test("caption", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_ol() throws Exception {
        test("caption", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_optgroup() throws Exception {
        test("caption", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_option() throws Exception {
        test("caption", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_output() throws Exception {
        test("caption", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_p() throws Exception {
        test("caption", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_param() throws Exception {
        test("caption", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_plaintext() throws Exception {
        test("caption", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_pre() throws Exception {
        test("caption", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_progress() throws Exception {
        test("caption", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_rp() throws Exception {
        test("caption", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_rt() throws Exception {
        test("caption", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_ruby() throws Exception {
        test("caption", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_s() throws Exception {
        test("caption", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_samp() throws Exception {
        test("caption", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _caption_script() throws Exception {
        test("caption", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_section() throws Exception {
        test("caption", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_select() throws Exception {
        test("caption", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_small() throws Exception {
        test("caption", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_source() throws Exception {
        test("caption", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_span() throws Exception {
        test("caption", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_strike() throws Exception {
        test("caption", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_strong() throws Exception {
        test("caption", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_style() throws Exception {
        test("caption", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_sub() throws Exception {
        test("caption", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_summary() throws Exception {
        test("caption", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_sup() throws Exception {
        test("caption", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_table() throws Exception {
        test("caption", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_col() throws Exception {
        test("caption", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_colgroup() throws Exception {
        test("caption", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_tbody() throws Exception {
        test("caption", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_td() throws Exception {
        test("caption", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_th() throws Exception {
        test("caption", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_tr() throws Exception {
        test("caption", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_textarea() throws Exception {
        test("caption", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_tfoot() throws Exception {
        test("caption", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_thead() throws Exception {
        test("caption", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_tt() throws Exception {
        test("caption", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_time() throws Exception {
        test("caption", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_title() throws Exception {
        test("caption", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_track() throws Exception {
        test("caption", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_u() throws Exception {
        test("caption", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_ul() throws Exception {
        test("caption", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_var() throws Exception {
        test("caption", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_video() throws Exception {
        test("caption", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_wbr() throws Exception {
        test("caption", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_xmp() throws Exception {
        test("caption", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_area() throws Exception {
        test("center", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_bgsound() throws Exception {
        test("center", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_base() throws Exception {
        test("center", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_basefont() throws Exception {
        test("center", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_br() throws Exception {
        test("center", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _center_command() throws Exception {
        test("center", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _center_embed() throws Exception {
        test("center", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_hr() throws Exception {
        test("center", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _center_img() throws Exception {
        test("center", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _center_image() throws Exception {
        test("center", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_keygen() throws Exception {
        test("center", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_link() throws Exception {
        test("center", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_meta() throws Exception {
        test("center", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_param() throws Exception {
        test("center", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_source() throws Exception {
        test("center", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_track() throws Exception {
        test("center", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _center_wbr() throws Exception {
        test("center", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _cite_area() throws Exception {
        test("cite", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_bgsound() throws Exception {
        test("cite", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_base() throws Exception {
        test("cite", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_basefont() throws Exception {
        test("cite", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_br() throws Exception {
        test("cite", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _cite_command() throws Exception {
        test("cite", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _cite_embed() throws Exception {
        test("cite", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_hr() throws Exception {
        test("cite", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _cite_img() throws Exception {
        test("cite", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _cite_image() throws Exception {
        test("cite", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_keygen() throws Exception {
        test("cite", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_link() throws Exception {
        test("cite", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_meta() throws Exception {
        test("cite", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _cite_param() throws Exception {
        test("cite", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _cite_source() throws Exception {
        test("cite", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _cite_track() throws Exception {
        test("cite", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _cite_wbr() throws Exception {
        test("cite", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _code_area() throws Exception {
        test("code", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_bgsound() throws Exception {
        test("code", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_base() throws Exception {
        test("code", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_basefont() throws Exception {
        test("code", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_br() throws Exception {
        test("code", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _code_command() throws Exception {
        test("code", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _code_embed() throws Exception {
        test("code", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_hr() throws Exception {
        test("code", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _code_img() throws Exception {
        test("code", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _code_image() throws Exception {
        test("code", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_keygen() throws Exception {
        test("code", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_link() throws Exception {
        test("code", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_meta() throws Exception {
        test("code", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _code_param() throws Exception {
        test("code", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _code_source() throws Exception {
        test("code", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _code_track() throws Exception {
        test("code", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _code_wbr() throws Exception {
        test("code", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_abbr() throws Exception {
        test("command", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_acronym() throws Exception {
        test("command", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_a() throws Exception {
        test("command", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_address() throws Exception {
        test("command", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_applet() throws Exception {
        test("command", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_area() throws Exception {
        test("command", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_article() throws Exception {
        test("command", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_aside() throws Exception {
        test("command", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_audio() throws Exception {
        test("command", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_bgsound() throws Exception {
        test("command", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_base() throws Exception {
        test("command", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_basefont() throws Exception {
        test("command", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_bdi() throws Exception {
        test("command", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_bdo() throws Exception {
        test("command", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_big() throws Exception {
        test("command", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_blink() throws Exception {
        test("command", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_blockquote() throws Exception {
        test("command", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_body() throws Exception {
        test("command", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_b() throws Exception {
        test("command", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_br() throws Exception {
        test("command", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_button() throws Exception {
        test("command", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_canvas() throws Exception {
        test("command", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_caption() throws Exception {
        test("command", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_center() throws Exception {
        test("command", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_cite() throws Exception {
        test("command", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_code() throws Exception {
        test("command", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_command() throws Exception {
        test("command", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_datalist() throws Exception {
        test("command", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dfn() throws Exception {
        test("command", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dd() throws Exception {
        test("command", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_del() throws Exception {
        test("command", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_details() throws Exception {
        test("command", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dialog() throws Exception {
        test("command", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dir() throws Exception {
        test("command", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_div() throws Exception {
        test("command", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dl() throws Exception {
        test("command", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_dt() throws Exception {
        test("command", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_embed() throws Exception {
        test("command", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_em() throws Exception {
        test("command", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_fieldset() throws Exception {
        test("command", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_figcaption() throws Exception {
        test("command", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_figure() throws Exception {
        test("command", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_font() throws Exception {
        test("command", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_form() throws Exception {
        test("command", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_footer() throws Exception {
        test("command", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_frame() throws Exception {
        test("command", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_frameset() throws Exception {
        test("command", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_head() throws Exception {
        test("command", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_header() throws Exception {
        test("command", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h1() throws Exception {
        test("command", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h2() throws Exception {
        test("command", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h3() throws Exception {
        test("command", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h4() throws Exception {
        test("command", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h5() throws Exception {
        test("command", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_h6() throws Exception {
        test("command", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_hr() throws Exception {
        test("command", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_html() throws Exception {
        test("command", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_iframe() throws Exception {
        test("command", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_q() throws Exception {
        test("command", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_img() throws Exception {
        test("command", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_image() throws Exception {
        test("command", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_ins() throws Exception {
        test("command", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_isindex() throws Exception {
        test("command", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_i() throws Exception {
        test("command", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_kbd() throws Exception {
        test("command", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_keygen() throws Exception {
        test("command", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_label() throws Exception {
        test("command", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_layer() throws Exception {
        test("command", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_legend() throws Exception {
        test("command", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_listing() throws Exception {
        test("command", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_li() throws Exception {
        test("command", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_link() throws Exception {
        test("command", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_main() throws Exception {
        test("command", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_map() throws Exception {
        test("command", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_mark() throws Exception {
        test("command", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_marquee() throws Exception {
        test("command", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_menu() throws Exception {
        test("command", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_menuitem() throws Exception {
        test("command", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_meta() throws Exception {
        test("command", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_meter() throws Exception {
        test("command", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_multicol() throws Exception {
        test("command", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_nav() throws Exception {
        test("command", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented
    public void _command_nextid() throws Exception {
        test("command", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_nobr() throws Exception {
        test("command", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_noembed() throws Exception {
        test("command", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_noframes() throws Exception {
        test("command", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_nolayer() throws Exception {
        test("command", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_noscript() throws Exception {
        test("command", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_object() throws Exception {
        test("command", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_ol() throws Exception {
        test("command", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_optgroup() throws Exception {
        test("command", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_option() throws Exception {
        test("command", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_output() throws Exception {
        test("command", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_p() throws Exception {
        test("command", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_param() throws Exception {
        test("command", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_plaintext() throws Exception {
        test("command", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_pre() throws Exception {
        test("command", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_progress() throws Exception {
        test("command", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_rp() throws Exception {
        test("command", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_rt() throws Exception {
        test("command", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_ruby() throws Exception {
        test("command", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_s() throws Exception {
        test("command", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_samp() throws Exception {
        test("command", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented
    public void _command_script() throws Exception {
        test("command", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_section() throws Exception {
        test("command", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_select() throws Exception {
        test("command", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_small() throws Exception {
        test("command", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_source() throws Exception {
        test("command", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_span() throws Exception {
        test("command", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_strike() throws Exception {
        test("command", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_strong() throws Exception {
        test("command", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_style() throws Exception {
        test("command", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_sub() throws Exception {
        test("command", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_summary() throws Exception {
        test("command", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_sup() throws Exception {
        test("command", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_table() throws Exception {
        test("command", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_col() throws Exception {
        test("command", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_colgroup() throws Exception {
        test("command", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_tbody() throws Exception {
        test("command", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_td() throws Exception {
        test("command", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_th() throws Exception {
        test("command", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_tr() throws Exception {
        test("command", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_textarea() throws Exception {
        test("command", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_tfoot() throws Exception {
        test("command", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_thead() throws Exception {
        test("command", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_tt() throws Exception {
        test("command", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_time() throws Exception {
        test("command", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented(FF)
    public void _command_title() throws Exception {
        test("command", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _command_track() throws Exception {
        test("command", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_u() throws Exception {
        test("command", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_ul() throws Exception {
        test("command", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_var() throws Exception {
        test("command", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_video() throws Exception {
        test("command", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_wbr() throws Exception {
        test("command", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _command_xmp() throws Exception {
        test("command", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_area() throws Exception {
        test("datalist", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_bgsound() throws Exception {
        test("datalist", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_base() throws Exception {
        test("datalist", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_basefont() throws Exception {
        test("datalist", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_br() throws Exception {
        test("datalist", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _datalist_command() throws Exception {
        test("datalist", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_embed() throws Exception {
        test("datalist", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_hr() throws Exception {
        test("datalist", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_img() throws Exception {
        test("datalist", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_image() throws Exception {
        test("datalist", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_keygen() throws Exception {
        test("datalist", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_link() throws Exception {
        test("datalist", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_meta() throws Exception {
        test("datalist", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_param() throws Exception {
        test("datalist", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_source() throws Exception {
        test("datalist", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_track() throws Exception {
        test("datalist", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_wbr() throws Exception {
        test("datalist", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dfn_area() throws Exception {
        test("dfn", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_bgsound() throws Exception {
        test("dfn", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_base() throws Exception {
        test("dfn", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_basefont() throws Exception {
        test("dfn", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_br() throws Exception {
        test("dfn", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _dfn_command() throws Exception {
        test("dfn", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dfn_embed() throws Exception {
        test("dfn", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_hr() throws Exception {
        test("dfn", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dfn_img() throws Exception {
        test("dfn", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _dfn_image() throws Exception {
        test("dfn", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_keygen() throws Exception {
        test("dfn", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_link() throws Exception {
        test("dfn", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_meta() throws Exception {
        test("dfn", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _dfn_param() throws Exception {
        test("dfn", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dfn_source() throws Exception {
        test("dfn", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dfn_track() throws Exception {
        test("dfn", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dfn_wbr() throws Exception {
        test("dfn", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_area() throws Exception {
        test("dd", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_bgsound() throws Exception {
        test("dd", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_base() throws Exception {
        test("dd", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_basefont() throws Exception {
        test("dd", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_br() throws Exception {
        test("dd", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _dd_command() throws Exception {
        test("dd", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _dd_dd() throws Exception {
        test("dd", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _dd_dt() throws Exception {
        test("dd", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dd_embed() throws Exception {
        test("dd", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_hr() throws Exception {
        test("dd", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dd_img() throws Exception {
        test("dd", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _dd_image() throws Exception {
        test("dd", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_keygen() throws Exception {
        test("dd", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_link() throws Exception {
        test("dd", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_meta() throws Exception {
        test("dd", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_param() throws Exception {
        test("dd", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_source() throws Exception {
        test("dd", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_track() throws Exception {
        test("dd", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dd_wbr() throws Exception {
        test("dd", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_area() throws Exception {
        test("del", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_bgsound() throws Exception {
        test("del", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_base() throws Exception {
        test("del", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_basefont() throws Exception {
        test("del", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_br() throws Exception {
        test("del", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _del_command() throws Exception {
        test("del", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _del_embed() throws Exception {
        test("del", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_hr() throws Exception {
        test("del", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _del_img() throws Exception {
        test("del", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _del_image() throws Exception {
        test("del", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_keygen() throws Exception {
        test("del", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_link() throws Exception {
        test("del", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_meta() throws Exception {
        test("del", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_param() throws Exception {
        test("del", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_source() throws Exception {
        test("del", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_track() throws Exception {
        test("del", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _del_wbr() throws Exception {
        test("del", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _details_area() throws Exception {
        test("details", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_bgsound() throws Exception {
        test("details", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_base() throws Exception {
        test("details", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_basefont() throws Exception {
        test("details", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_br() throws Exception {
        test("details", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _details_command() throws Exception {
        test("details", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_embed() throws Exception {
        test("details", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_hr() throws Exception {
        test("details", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_img() throws Exception {
        test("details", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _details_image() throws Exception {
        test("details", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_keygen() throws Exception {
        test("details", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_link() throws Exception {
        test("details", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_meta() throws Exception {
        test("details", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _details_param() throws Exception {
        test("details", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _details_source() throws Exception {
        test("details", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _details_track() throws Exception {
        test("details", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_wbr() throws Exception {
        test("details", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_area() throws Exception {
        test("dialog", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_bgsound() throws Exception {
        test("dialog", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_base() throws Exception {
        test("dialog", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_basefont() throws Exception {
        test("dialog", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_br() throws Exception {
        test("dialog", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _dialog_command() throws Exception {
        test("dialog", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_embed() throws Exception {
        test("dialog", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_hr() throws Exception {
        test("dialog", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_img() throws Exception {
        test("dialog", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_image() throws Exception {
        test("dialog", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_keygen() throws Exception {
        test("dialog", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_link() throws Exception {
        test("dialog", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_meta() throws Exception {
        test("dialog", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_param() throws Exception {
        test("dialog", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_source() throws Exception {
        test("dialog", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_track() throws Exception {
        test("dialog", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_wbr() throws Exception {
        test("dialog", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_area() throws Exception {
        test("dir", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_bgsound() throws Exception {
        test("dir", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_base() throws Exception {
        test("dir", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_basefont() throws Exception {
        test("dir", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_br() throws Exception {
        test("dir", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _dir_command() throws Exception {
        test("dir", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dir_embed() throws Exception {
        test("dir", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_hr() throws Exception {
        test("dir", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dir_img() throws Exception {
        test("dir", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _dir_image() throws Exception {
        test("dir", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_keygen() throws Exception {
        test("dir", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_link() throws Exception {
        test("dir", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_meta() throws Exception {
        test("dir", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_param() throws Exception {
        test("dir", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_source() throws Exception {
        test("dir", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_track() throws Exception {
        test("dir", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dir_wbr() throws Exception {
        test("dir", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_area() throws Exception {
        test("div", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_bgsound() throws Exception {
        test("div", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_base() throws Exception {
        test("div", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_basefont() throws Exception {
        test("div", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_br() throws Exception {
        test("div", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _div_command() throws Exception {
        test("div", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _div_embed() throws Exception {
        test("div", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_hr() throws Exception {
        test("div", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _div_img() throws Exception {
        test("div", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _div_image() throws Exception {
        test("div", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_keygen() throws Exception {
        test("div", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_link() throws Exception {
        test("div", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_meta() throws Exception {
        test("div", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_param() throws Exception {
        test("div", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_source() throws Exception {
        test("div", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_track() throws Exception {
        test("div", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _div_wbr() throws Exception {
        test("div", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_area() throws Exception {
        test("dl", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_bgsound() throws Exception {
        test("dl", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_base() throws Exception {
        test("dl", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_basefont() throws Exception {
        test("dl", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_br() throws Exception {
        test("dl", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _dl_command() throws Exception {
        test("dl", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dl_embed() throws Exception {
        test("dl", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_hr() throws Exception {
        test("dl", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dl_img() throws Exception {
        test("dl", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _dl_image() throws Exception {
        test("dl", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_keygen() throws Exception {
        test("dl", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_link() throws Exception {
        test("dl", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_meta() throws Exception {
        test("dl", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_param() throws Exception {
        test("dl", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_source() throws Exception {
        test("dl", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_track() throws Exception {
        test("dl", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dl_wbr() throws Exception {
        test("dl", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_area() throws Exception {
        test("dt", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_bgsound() throws Exception {
        test("dt", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_base() throws Exception {
        test("dt", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_basefont() throws Exception {
        test("dt", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_br() throws Exception {
        test("dt", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _dt_command() throws Exception {
        test("dt", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _dt_dd() throws Exception {
        test("dt", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _dt_dt() throws Exception {
        test("dt", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dt_embed() throws Exception {
        test("dt", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_hr() throws Exception {
        test("dt", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _dt_img() throws Exception {
        test("dt", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _dt_image() throws Exception {
        test("dt", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_keygen() throws Exception {
        test("dt", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_link() throws Exception {
        test("dt", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_meta() throws Exception {
        test("dt", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_param() throws Exception {
        test("dt", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_source() throws Exception {
        test("dt", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_track() throws Exception {
        test("dt", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _dt_wbr() throws Exception {
        test("dt", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_abbr() throws Exception {
        test("embed", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_acronym() throws Exception {
        test("embed", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_a() throws Exception {
        test("embed", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_address() throws Exception {
        test("embed", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_applet() throws Exception {
        test("embed", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_area() throws Exception {
        test("embed", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_article() throws Exception {
        test("embed", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_aside() throws Exception {
        test("embed", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_audio() throws Exception {
        test("embed", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_bgsound() throws Exception {
        test("embed", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_base() throws Exception {
        test("embed", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_basefont() throws Exception {
        test("embed", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_bdi() throws Exception {
        test("embed", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_bdo() throws Exception {
        test("embed", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_big() throws Exception {
        test("embed", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_blink() throws Exception {
        test("embed", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_blockquote() throws Exception {
        test("embed", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_body() throws Exception {
        test("embed", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_b() throws Exception {
        test("embed", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_br() throws Exception {
        test("embed", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_button() throws Exception {
        test("embed", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_canvas() throws Exception {
        test("embed", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_caption() throws Exception {
        test("embed", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_center() throws Exception {
        test("embed", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_cite() throws Exception {
        test("embed", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_code() throws Exception {
        test("embed", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_command() throws Exception {
        test("embed", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_datalist() throws Exception {
        test("embed", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dfn() throws Exception {
        test("embed", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dd() throws Exception {
        test("embed", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_del() throws Exception {
        test("embed", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_details() throws Exception {
        test("embed", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dialog() throws Exception {
        test("embed", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dir() throws Exception {
        test("embed", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_div() throws Exception {
        test("embed", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dl() throws Exception {
        test("embed", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_dt() throws Exception {
        test("embed", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_embed() throws Exception {
        test("embed", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_em() throws Exception {
        test("embed", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_fieldset() throws Exception {
        test("embed", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_figcaption() throws Exception {
        test("embed", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_figure() throws Exception {
        test("embed", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_font() throws Exception {
        test("embed", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_form() throws Exception {
        test("embed", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_footer() throws Exception {
        test("embed", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_frame() throws Exception {
        test("embed", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_frameset() throws Exception {
        test("embed", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_head() throws Exception {
        test("embed", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_header() throws Exception {
        test("embed", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h1() throws Exception {
        test("embed", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h2() throws Exception {
        test("embed", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h3() throws Exception {
        test("embed", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h4() throws Exception {
        test("embed", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h5() throws Exception {
        test("embed", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_h6() throws Exception {
        test("embed", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_hr() throws Exception {
        test("embed", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_html() throws Exception {
        test("embed", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_iframe() throws Exception {
        test("embed", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_q() throws Exception {
        test("embed", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_img() throws Exception {
        test("embed", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_image() throws Exception {
        test("embed", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_ins() throws Exception {
        test("embed", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_isindex() throws Exception {
        test("embed", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_i() throws Exception {
        test("embed", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_kbd() throws Exception {
        test("embed", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_keygen() throws Exception {
        test("embed", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_label() throws Exception {
        test("embed", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_layer() throws Exception {
        test("embed", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_legend() throws Exception {
        test("embed", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_listing() throws Exception {
        test("embed", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_li() throws Exception {
        test("embed", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_link() throws Exception {
        test("embed", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_main() throws Exception {
        test("embed", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_map() throws Exception {
        test("embed", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_mark() throws Exception {
        test("embed", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_marquee() throws Exception {
        test("embed", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_menu() throws Exception {
        test("embed", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_menuitem() throws Exception {
        test("embed", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_meta() throws Exception {
        test("embed", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_meter() throws Exception {
        test("embed", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_multicol() throws Exception {
        test("embed", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_nav() throws Exception {
        test("embed", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_nextid() throws Exception {
        test("embed", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_nobr() throws Exception {
        test("embed", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_noembed() throws Exception {
        test("embed", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_noframes() throws Exception {
        test("embed", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_nolayer() throws Exception {
        test("embed", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_noscript() throws Exception {
        test("embed", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_object() throws Exception {
        test("embed", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_ol() throws Exception {
        test("embed", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_optgroup() throws Exception {
        test("embed", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_option() throws Exception {
        test("embed", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_output() throws Exception {
        test("embed", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_p() throws Exception {
        test("embed", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_param() throws Exception {
        test("embed", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_plaintext() throws Exception {
        test("embed", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_pre() throws Exception {
        test("embed", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_progress() throws Exception {
        test("embed", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_rp() throws Exception {
        test("embed", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_rt() throws Exception {
        test("embed", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_ruby() throws Exception {
        test("embed", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_s() throws Exception {
        test("embed", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_samp() throws Exception {
        test("embed", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _embed_script() throws Exception {
        test("embed", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_section() throws Exception {
        test("embed", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_select() throws Exception {
        test("embed", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_small() throws Exception {
        test("embed", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_source() throws Exception {
        test("embed", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_span() throws Exception {
        test("embed", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_strike() throws Exception {
        test("embed", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_strong() throws Exception {
        test("embed", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_style() throws Exception {
        test("embed", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_sub() throws Exception {
        test("embed", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_summary() throws Exception {
        test("embed", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_sup() throws Exception {
        test("embed", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_table() throws Exception {
        test("embed", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_col() throws Exception {
        test("embed", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_colgroup() throws Exception {
        test("embed", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_tbody() throws Exception {
        test("embed", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_td() throws Exception {
        test("embed", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_th() throws Exception {
        test("embed", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_tr() throws Exception {
        test("embed", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_textarea() throws Exception {
        test("embed", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_tfoot() throws Exception {
        test("embed", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_thead() throws Exception {
        test("embed", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_tt() throws Exception {
        test("embed", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_time() throws Exception {
        test("embed", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_title() throws Exception {
        test("embed", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_track() throws Exception {
        test("embed", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_u() throws Exception {
        test("embed", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_ul() throws Exception {
        test("embed", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_var() throws Exception {
        test("embed", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_video() throws Exception {
        test("embed", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_wbr() throws Exception {
        test("embed", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_xmp() throws Exception {
        test("embed", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _em_area() throws Exception {
        test("em", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_bgsound() throws Exception {
        test("em", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_base() throws Exception {
        test("em", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_basefont() throws Exception {
        test("em", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_br() throws Exception {
        test("em", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _em_command() throws Exception {
        test("em", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _em_embed() throws Exception {
        test("em", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_hr() throws Exception {
        test("em", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _em_img() throws Exception {
        test("em", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _em_image() throws Exception {
        test("em", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_keygen() throws Exception {
        test("em", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_link() throws Exception {
        test("em", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_meta() throws Exception {
        test("em", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _em_param() throws Exception {
        test("em", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _em_source() throws Exception {
        test("em", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _em_track() throws Exception {
        test("em", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _em_wbr() throws Exception {
        test("em", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_area() throws Exception {
        test("fieldset", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_bgsound() throws Exception {
        test("fieldset", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_base() throws Exception {
        test("fieldset", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_basefont() throws Exception {
        test("fieldset", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_br() throws Exception {
        test("fieldset", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _fieldset_command() throws Exception {
        test("fieldset", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _fieldset_embed() throws Exception {
        test("fieldset", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_hr() throws Exception {
        test("fieldset", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _fieldset_img() throws Exception {
        test("fieldset", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _fieldset_image() throws Exception {
        test("fieldset", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_keygen() throws Exception {
        test("fieldset", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_link() throws Exception {
        test("fieldset", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_meta() throws Exception {
        test("fieldset", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_param() throws Exception {
        test("fieldset", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_source() throws Exception {
        test("fieldset", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_track() throws Exception {
        test("fieldset", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _fieldset_wbr() throws Exception {
        test("fieldset", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_area() throws Exception {
        test("figcaption", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_bgsound() throws Exception {
        test("figcaption", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_base() throws Exception {
        test("figcaption", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_basefont() throws Exception {
        test("figcaption", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_br() throws Exception {
        test("figcaption", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _figcaption_command() throws Exception {
        test("figcaption", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_embed() throws Exception {
        test("figcaption", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_hr() throws Exception {
        test("figcaption", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_img() throws Exception {
        test("figcaption", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_image() throws Exception {
        test("figcaption", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_keygen() throws Exception {
        test("figcaption", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_link() throws Exception {
        test("figcaption", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_meta() throws Exception {
        test("figcaption", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_param() throws Exception {
        test("figcaption", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_source() throws Exception {
        test("figcaption", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_track() throws Exception {
        test("figcaption", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_wbr() throws Exception {
        test("figcaption", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_area() throws Exception {
        test("figure", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_bgsound() throws Exception {
        test("figure", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_base() throws Exception {
        test("figure", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_basefont() throws Exception {
        test("figure", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_br() throws Exception {
        test("figure", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _figure_command() throws Exception {
        test("figure", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_embed() throws Exception {
        test("figure", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_hr() throws Exception {
        test("figure", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_img() throws Exception {
        test("figure", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_image() throws Exception {
        test("figure", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_keygen() throws Exception {
        test("figure", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_link() throws Exception {
        test("figure", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_meta() throws Exception {
        test("figure", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_param() throws Exception {
        test("figure", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_source() throws Exception {
        test("figure", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_track() throws Exception {
        test("figure", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_wbr() throws Exception {
        test("figure", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_area() throws Exception {
        test("font", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_bgsound() throws Exception {
        test("font", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_base() throws Exception {
        test("font", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_basefont() throws Exception {
        test("font", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_br() throws Exception {
        test("font", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _font_command() throws Exception {
        test("font", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _font_embed() throws Exception {
        test("font", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_hr() throws Exception {
        test("font", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _font_img() throws Exception {
        test("font", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _font_image() throws Exception {
        test("font", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_keygen() throws Exception {
        test("font", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_link() throws Exception {
        test("font", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_meta() throws Exception {
        test("font", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_param() throws Exception {
        test("font", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_source() throws Exception {
        test("font", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_track() throws Exception {
        test("font", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _font_wbr() throws Exception {
        test("font", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_area() throws Exception {
        test("form", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_bgsound() throws Exception {
        test("form", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_base() throws Exception {
        test("form", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_basefont() throws Exception {
        test("form", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_br() throws Exception {
        test("form", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _form_command() throws Exception {
        test("form", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _form_embed() throws Exception {
        test("form", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_hr() throws Exception {
        test("form", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _form_img() throws Exception {
        test("form", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _form_image() throws Exception {
        test("form", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_keygen() throws Exception {
        test("form", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_link() throws Exception {
        test("form", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_meta() throws Exception {
        test("form", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_param() throws Exception {
        test("form", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_source() throws Exception {
        test("form", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_track() throws Exception {
        test("form", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _form_wbr() throws Exception {
        test("form", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_area() throws Exception {
        test("footer", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_bgsound() throws Exception {
        test("footer", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_base() throws Exception {
        test("footer", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_basefont() throws Exception {
        test("footer", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_br() throws Exception {
        test("footer", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _footer_command() throws Exception {
        test("footer", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_embed() throws Exception {
        test("footer", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_hr() throws Exception {
        test("footer", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_img() throws Exception {
        test("footer", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_image() throws Exception {
        test("footer", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_keygen() throws Exception {
        test("footer", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_link() throws Exception {
        test("footer", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_meta() throws Exception {
        test("footer", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_param() throws Exception {
        test("footer", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_source() throws Exception {
        test("footer", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_track() throws Exception {
        test("footer", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_wbr() throws Exception {
        test("footer", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_abbr() throws Exception {
        test("frame", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_acronym() throws Exception {
        test("frame", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_a() throws Exception {
        test("frame", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_address() throws Exception {
        test("frame", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_applet() throws Exception {
        test("frame", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_area() throws Exception {
        test("frame", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_article() throws Exception {
        test("frame", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_aside() throws Exception {
        test("frame", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_audio() throws Exception {
        test("frame", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_bgsound() throws Exception {
        test("frame", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_base() throws Exception {
        test("frame", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_basefont() throws Exception {
        test("frame", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_bdi() throws Exception {
        test("frame", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_bdo() throws Exception {
        test("frame", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_big() throws Exception {
        test("frame", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_blink() throws Exception {
        test("frame", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_blockquote() throws Exception {
        test("frame", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_body() throws Exception {
        test("frame", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_b() throws Exception {
        test("frame", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_br() throws Exception {
        test("frame", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_button() throws Exception {
        test("frame", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_canvas() throws Exception {
        test("frame", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_caption() throws Exception {
        test("frame", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_center() throws Exception {
        test("frame", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_cite() throws Exception {
        test("frame", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_code() throws Exception {
        test("frame", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_command() throws Exception {
        test("frame", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_datalist() throws Exception {
        test("frame", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dfn() throws Exception {
        test("frame", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dd() throws Exception {
        test("frame", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_del() throws Exception {
        test("frame", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_details() throws Exception {
        test("frame", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dialog() throws Exception {
        test("frame", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dir() throws Exception {
        test("frame", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_div() throws Exception {
        test("frame", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dl() throws Exception {
        test("frame", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_dt() throws Exception {
        test("frame", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_embed() throws Exception {
        test("frame", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_em() throws Exception {
        test("frame", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_fieldset() throws Exception {
        test("frame", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_figcaption() throws Exception {
        test("frame", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_figure() throws Exception {
        test("frame", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_font() throws Exception {
        test("frame", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_form() throws Exception {
        test("frame", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_footer() throws Exception {
        test("frame", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_frame() throws Exception {
        test("frame", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_frameset() throws Exception {
        test("frame", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_head() throws Exception {
        test("frame", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_header() throws Exception {
        test("frame", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h1() throws Exception {
        test("frame", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h2() throws Exception {
        test("frame", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h3() throws Exception {
        test("frame", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h4() throws Exception {
        test("frame", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h5() throws Exception {
        test("frame", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_h6() throws Exception {
        test("frame", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_hr() throws Exception {
        test("frame", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_html() throws Exception {
        test("frame", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_iframe() throws Exception {
        test("frame", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_q() throws Exception {
        test("frame", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_img() throws Exception {
        test("frame", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_image() throws Exception {
        test("frame", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_ins() throws Exception {
        test("frame", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_isindex() throws Exception {
        test("frame", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_i() throws Exception {
        test("frame", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_kbd() throws Exception {
        test("frame", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_keygen() throws Exception {
        test("frame", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_label() throws Exception {
        test("frame", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_layer() throws Exception {
        test("frame", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_legend() throws Exception {
        test("frame", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_listing() throws Exception {
        test("frame", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_li() throws Exception {
        test("frame", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_link() throws Exception {
        test("frame", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_main() throws Exception {
        test("frame", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_map() throws Exception {
        test("frame", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_mark() throws Exception {
        test("frame", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_marquee() throws Exception {
        test("frame", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_menu() throws Exception {
        test("frame", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_menuitem() throws Exception {
        test("frame", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_meta() throws Exception {
        test("frame", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_meter() throws Exception {
        test("frame", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_multicol() throws Exception {
        test("frame", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_nav() throws Exception {
        test("frame", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_nextid() throws Exception {
        test("frame", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_nobr() throws Exception {
        test("frame", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_noembed() throws Exception {
        test("frame", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_noframes() throws Exception {
        test("frame", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_nolayer() throws Exception {
        test("frame", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_noscript() throws Exception {
        test("frame", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_object() throws Exception {
        test("frame", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_ol() throws Exception {
        test("frame", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_optgroup() throws Exception {
        test("frame", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_option() throws Exception {
        test("frame", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_output() throws Exception {
        test("frame", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_p() throws Exception {
        test("frame", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_param() throws Exception {
        test("frame", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_plaintext() throws Exception {
        test("frame", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_pre() throws Exception {
        test("frame", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_progress() throws Exception {
        test("frame", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_rp() throws Exception {
        test("frame", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_rt() throws Exception {
        test("frame", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_ruby() throws Exception {
        test("frame", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_s() throws Exception {
        test("frame", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_samp() throws Exception {
        test("frame", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_script() throws Exception {
        test("frame", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_section() throws Exception {
        test("frame", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_select() throws Exception {
        test("frame", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_small() throws Exception {
        test("frame", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_source() throws Exception {
        test("frame", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_span() throws Exception {
        test("frame", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_strike() throws Exception {
        test("frame", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_strong() throws Exception {
        test("frame", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_style() throws Exception {
        test("frame", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_sub() throws Exception {
        test("frame", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_summary() throws Exception {
        test("frame", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_sup() throws Exception {
        test("frame", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_table() throws Exception {
        test("frame", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_col() throws Exception {
        test("frame", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_colgroup() throws Exception {
        test("frame", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_tbody() throws Exception {
        test("frame", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_td() throws Exception {
        test("frame", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_th() throws Exception {
        test("frame", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_tr() throws Exception {
        test("frame", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_textarea() throws Exception {
        test("frame", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_tfoot() throws Exception {
        test("frame", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_thead() throws Exception {
        test("frame", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_tt() throws Exception {
        test("frame", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_time() throws Exception {
        test("frame", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_title() throws Exception {
        test("frame", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_track() throws Exception {
        test("frame", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_u() throws Exception {
        test("frame", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_ul() throws Exception {
        test("frame", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_var() throws Exception {
        test("frame", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_video() throws Exception {
        test("frame", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_wbr() throws Exception {
        test("frame", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frame_xmp() throws Exception {
        test("frame", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_abbr() throws Exception {
        test("frameset", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_acronym() throws Exception {
        test("frameset", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_a() throws Exception {
        test("frameset", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_address() throws Exception {
        test("frameset", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_applet() throws Exception {
        test("frameset", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_area() throws Exception {
        test("frameset", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_article() throws Exception {
        test("frameset", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_aside() throws Exception {
        test("frameset", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_audio() throws Exception {
        test("frameset", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_bgsound() throws Exception {
        test("frameset", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_base() throws Exception {
        test("frameset", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_basefont() throws Exception {
        test("frameset", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_bdi() throws Exception {
        test("frameset", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_bdo() throws Exception {
        test("frameset", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_big() throws Exception {
        test("frameset", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_blink() throws Exception {
        test("frameset", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_blockquote() throws Exception {
        test("frameset", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_body() throws Exception {
        test("frameset", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_b() throws Exception {
        test("frameset", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_br() throws Exception {
        test("frameset", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_button() throws Exception {
        test("frameset", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_canvas() throws Exception {
        test("frameset", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_caption() throws Exception {
        test("frameset", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_center() throws Exception {
        test("frameset", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_cite() throws Exception {
        test("frameset", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_code() throws Exception {
        test("frameset", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_command() throws Exception {
        test("frameset", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_datalist() throws Exception {
        test("frameset", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dfn() throws Exception {
        test("frameset", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dd() throws Exception {
        test("frameset", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_del() throws Exception {
        test("frameset", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_details() throws Exception {
        test("frameset", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dialog() throws Exception {
        test("frameset", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dir() throws Exception {
        test("frameset", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_div() throws Exception {
        test("frameset", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dl() throws Exception {
        test("frameset", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_dt() throws Exception {
        test("frameset", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_embed() throws Exception {
        test("frameset", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_em() throws Exception {
        test("frameset", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_fieldset() throws Exception {
        test("frameset", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_figcaption() throws Exception {
        test("frameset", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_figure() throws Exception {
        test("frameset", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_font() throws Exception {
        test("frameset", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_form() throws Exception {
        test("frameset", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_footer() throws Exception {
        test("frameset", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_frame() throws Exception {
        test("frameset", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_frameset() throws Exception {
        test("frameset", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_head() throws Exception {
        test("frameset", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_header() throws Exception {
        test("frameset", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h1() throws Exception {
        test("frameset", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h2() throws Exception {
        test("frameset", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h3() throws Exception {
        test("frameset", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h4() throws Exception {
        test("frameset", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h5() throws Exception {
        test("frameset", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_h6() throws Exception {
        test("frameset", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_hr() throws Exception {
        test("frameset", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_html() throws Exception {
        test("frameset", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_iframe() throws Exception {
        test("frameset", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_q() throws Exception {
        test("frameset", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_img() throws Exception {
        test("frameset", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_image() throws Exception {
        test("frameset", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_ins() throws Exception {
        test("frameset", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_isindex() throws Exception {
        test("frameset", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_i() throws Exception {
        test("frameset", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_kbd() throws Exception {
        test("frameset", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_keygen() throws Exception {
        test("frameset", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_label() throws Exception {
        test("frameset", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_layer() throws Exception {
        test("frameset", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_legend() throws Exception {
        test("frameset", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_listing() throws Exception {
        test("frameset", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_li() throws Exception {
        test("frameset", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_link() throws Exception {
        test("frameset", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_main() throws Exception {
        test("frameset", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_map() throws Exception {
        test("frameset", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_mark() throws Exception {
        test("frameset", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_marquee() throws Exception {
        test("frameset", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_menu() throws Exception {
        test("frameset", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_menuitem() throws Exception {
        test("frameset", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_meta() throws Exception {
        test("frameset", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_meter() throws Exception {
        test("frameset", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_multicol() throws Exception {
        test("frameset", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_nav() throws Exception {
        test("frameset", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_nextid() throws Exception {
        test("frameset", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_nobr() throws Exception {
        test("frameset", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_noembed() throws Exception {
        test("frameset", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_noframes() throws Exception {
        test("frameset", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_nolayer() throws Exception {
        test("frameset", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_noscript() throws Exception {
        test("frameset", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_object() throws Exception {
        test("frameset", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_ol() throws Exception {
        test("frameset", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_optgroup() throws Exception {
        test("frameset", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_option() throws Exception {
        test("frameset", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_output() throws Exception {
        test("frameset", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_p() throws Exception {
        test("frameset", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_param() throws Exception {
        test("frameset", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_plaintext() throws Exception {
        test("frameset", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_pre() throws Exception {
        test("frameset", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_progress() throws Exception {
        test("frameset", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_rp() throws Exception {
        test("frameset", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_rt() throws Exception {
        test("frameset", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_ruby() throws Exception {
        test("frameset", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_s() throws Exception {
        test("frameset", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_samp() throws Exception {
        test("frameset", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_script() throws Exception {
        test("frameset", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_section() throws Exception {
        test("frameset", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_select() throws Exception {
        test("frameset", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_small() throws Exception {
        test("frameset", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_source() throws Exception {
        test("frameset", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_span() throws Exception {
        test("frameset", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_strike() throws Exception {
        test("frameset", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_strong() throws Exception {
        test("frameset", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_style() throws Exception {
        test("frameset", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_sub() throws Exception {
        test("frameset", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_summary() throws Exception {
        test("frameset", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_sup() throws Exception {
        test("frameset", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_table() throws Exception {
        test("frameset", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_col() throws Exception {
        test("frameset", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_colgroup() throws Exception {
        test("frameset", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_tbody() throws Exception {
        test("frameset", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_td() throws Exception {
        test("frameset", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_th() throws Exception {
        test("frameset", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_tr() throws Exception {
        test("frameset", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_textarea() throws Exception {
        test("frameset", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_tfoot() throws Exception {
        test("frameset", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_thead() throws Exception {
        test("frameset", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_tt() throws Exception {
        test("frameset", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_time() throws Exception {
        test("frameset", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_title() throws Exception {
        test("frameset", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_track() throws Exception {
        test("frameset", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_u() throws Exception {
        test("frameset", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_ul() throws Exception {
        test("frameset", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_var() throws Exception {
        test("frameset", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_video() throws Exception {
        test("frameset", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _frameset_wbr() throws Exception {
        test("frameset", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _frameset_xmp() throws Exception {
        test("frameset", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_abbr() throws Exception {
        test("head", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_acronym() throws Exception {
        test("head", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_a() throws Exception {
        test("head", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_address() throws Exception {
        test("head", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_applet() throws Exception {
        test("head", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_area() throws Exception {
        test("head", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_article() throws Exception {
        test("head", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_aside() throws Exception {
        test("head", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_audio() throws Exception {
        test("head", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_bgsound() throws Exception {
        test("head", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_base() throws Exception {
        test("head", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_basefont() throws Exception {
        test("head", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_bdi() throws Exception {
        test("head", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_bdo() throws Exception {
        test("head", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_big() throws Exception {
        test("head", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_blink() throws Exception {
        test("head", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_blockquote() throws Exception {
        test("head", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_body() throws Exception {
        test("head", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_b() throws Exception {
        test("head", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_br() throws Exception {
        test("head", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_button() throws Exception {
        test("head", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_canvas() throws Exception {
        test("head", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_caption() throws Exception {
        test("head", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_center() throws Exception {
        test("head", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_cite() throws Exception {
        test("head", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_code() throws Exception {
        test("head", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_command() throws Exception {
        test("head", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_datalist() throws Exception {
        test("head", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dfn() throws Exception {
        test("head", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dd() throws Exception {
        test("head", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_del() throws Exception {
        test("head", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_details() throws Exception {
        test("head", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dialog() throws Exception {
        test("head", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dir() throws Exception {
        test("head", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_div() throws Exception {
        test("head", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dl() throws Exception {
        test("head", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_dt() throws Exception {
        test("head", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_embed() throws Exception {
        test("head", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_em() throws Exception {
        test("head", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_fieldset() throws Exception {
        test("head", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_figcaption() throws Exception {
        test("head", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_figure() throws Exception {
        test("head", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_font() throws Exception {
        test("head", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_form() throws Exception {
        test("head", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_footer() throws Exception {
        test("head", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_frame() throws Exception {
        test("head", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_frameset() throws Exception {
        test("head", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_head() throws Exception {
        test("head", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_header() throws Exception {
        test("head", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h1() throws Exception {
        test("head", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h2() throws Exception {
        test("head", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h3() throws Exception {
        test("head", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h4() throws Exception {
        test("head", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h5() throws Exception {
        test("head", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_h6() throws Exception {
        test("head", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_hr() throws Exception {
        test("head", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_html() throws Exception {
        test("head", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_iframe() throws Exception {
        test("head", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_q() throws Exception {
        test("head", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_img() throws Exception {
        test("head", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_image() throws Exception {
        test("head", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_ins() throws Exception {
        test("head", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_isindex() throws Exception {
        test("head", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_i() throws Exception {
        test("head", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_kbd() throws Exception {
        test("head", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_keygen() throws Exception {
        test("head", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_label() throws Exception {
        test("head", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_layer() throws Exception {
        test("head", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_legend() throws Exception {
        test("head", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_listing() throws Exception {
        test("head", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_li() throws Exception {
        test("head", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_link() throws Exception {
        test("head", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_main() throws Exception {
        test("head", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_map() throws Exception {
        test("head", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_mark() throws Exception {
        test("head", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_marquee() throws Exception {
        test("head", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_menu() throws Exception {
        test("head", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_menuitem() throws Exception {
        test("head", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_meta() throws Exception {
        test("head", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_meter() throws Exception {
        test("head", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_multicol() throws Exception {
        test("head", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_nav() throws Exception {
        test("head", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_nextid() throws Exception {
        test("head", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_nobr() throws Exception {
        test("head", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_noembed() throws Exception {
        test("head", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_noframes() throws Exception {
        test("head", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_nolayer() throws Exception {
        test("head", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_noscript() throws Exception {
        test("head", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_object() throws Exception {
        test("head", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_ol() throws Exception {
        test("head", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_optgroup() throws Exception {
        test("head", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_option() throws Exception {
        test("head", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_output() throws Exception {
        test("head", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_p() throws Exception {
        test("head", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_param() throws Exception {
        test("head", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_plaintext() throws Exception {
        test("head", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_pre() throws Exception {
        test("head", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_progress() throws Exception {
        test("head", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_rp() throws Exception {
        test("head", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_rt() throws Exception {
        test("head", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_ruby() throws Exception {
        test("head", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_s() throws Exception {
        test("head", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_samp() throws Exception {
        test("head", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _head_script() throws Exception {
        test("head", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_section() throws Exception {
        test("head", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_select() throws Exception {
        test("head", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_small() throws Exception {
        test("head", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_source() throws Exception {
        test("head", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_span() throws Exception {
        test("head", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_strike() throws Exception {
        test("head", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_strong() throws Exception {
        test("head", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_style() throws Exception {
        test("head", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_sub() throws Exception {
        test("head", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_summary() throws Exception {
        test("head", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_sup() throws Exception {
        test("head", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_table() throws Exception {
        test("head", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_col() throws Exception {
        test("head", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_colgroup() throws Exception {
        test("head", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_tbody() throws Exception {
        test("head", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_td() throws Exception {
        test("head", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_th() throws Exception {
        test("head", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_tr() throws Exception {
        test("head", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_textarea() throws Exception {
        test("head", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_tfoot() throws Exception {
        test("head", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_thead() throws Exception {
        test("head", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_tt() throws Exception {
        test("head", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_time() throws Exception {
        test("head", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_title() throws Exception {
        test("head", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_track() throws Exception {
        test("head", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_u() throws Exception {
        test("head", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_ul() throws Exception {
        test("head", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_var() throws Exception {
        test("head", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_video() throws Exception {
        test("head", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_wbr() throws Exception {
        test("head", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_xmp() throws Exception {
        test("head", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _header_area() throws Exception {
        test("header", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_bgsound() throws Exception {
        test("header", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_base() throws Exception {
        test("header", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_basefont() throws Exception {
        test("header", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_br() throws Exception {
        test("header", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _header_command() throws Exception {
        test("header", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_embed() throws Exception {
        test("header", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_hr() throws Exception {
        test("header", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_img() throws Exception {
        test("header", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _header_image() throws Exception {
        test("header", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_keygen() throws Exception {
        test("header", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_link() throws Exception {
        test("header", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_meta() throws Exception {
        test("header", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _header_param() throws Exception {
        test("header", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _header_source() throws Exception {
        test("header", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _header_track() throws Exception {
        test("header", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_wbr() throws Exception {
        test("header", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_area() throws Exception {
        test("h1", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_bgsound() throws Exception {
        test("h1", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_base() throws Exception {
        test("h1", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_basefont() throws Exception {
        test("h1", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_br() throws Exception {
        test("h1", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h1_command() throws Exception {
        test("h1", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h1_embed() throws Exception {
        test("h1", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h1() throws Exception {
        test("h1", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h2() throws Exception {
        test("h1", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h3() throws Exception {
        test("h1", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h4() throws Exception {
        test("h1", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h5() throws Exception {
        test("h1", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h1_h6() throws Exception {
        test("h1", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_hr() throws Exception {
        test("h1", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h1_img() throws Exception {
        test("h1", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h1_image() throws Exception {
        test("h1", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_keygen() throws Exception {
        test("h1", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_link() throws Exception {
        test("h1", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_meta() throws Exception {
        test("h1", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_param() throws Exception {
        test("h1", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_source() throws Exception {
        test("h1", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_track() throws Exception {
        test("h1", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h1_wbr() throws Exception {
        test("h1", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_area() throws Exception {
        test("h2", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_bgsound() throws Exception {
        test("h2", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_base() throws Exception {
        test("h2", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_basefont() throws Exception {
        test("h2", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_br() throws Exception {
        test("h2", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h2_command() throws Exception {
        test("h2", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h2_embed() throws Exception {
        test("h2", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h1() throws Exception {
        test("h2", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h2() throws Exception {
        test("h2", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h3() throws Exception {
        test("h2", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h4() throws Exception {
        test("h2", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h5() throws Exception {
        test("h2", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h2_h6() throws Exception {
        test("h2", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_hr() throws Exception {
        test("h2", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h2_img() throws Exception {
        test("h2", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h2_image() throws Exception {
        test("h2", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_keygen() throws Exception {
        test("h2", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_link() throws Exception {
        test("h2", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_meta() throws Exception {
        test("h2", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_param() throws Exception {
        test("h2", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_source() throws Exception {
        test("h2", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_track() throws Exception {
        test("h2", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h2_wbr() throws Exception {
        test("h2", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_area() throws Exception {
        test("h3", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_bgsound() throws Exception {
        test("h3", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_base() throws Exception {
        test("h3", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_basefont() throws Exception {
        test("h3", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_br() throws Exception {
        test("h3", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h3_command() throws Exception {
        test("h3", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h3_embed() throws Exception {
        test("h3", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h1() throws Exception {
        test("h3", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h2() throws Exception {
        test("h3", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h3() throws Exception {
        test("h3", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h4() throws Exception {
        test("h3", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h5() throws Exception {
        test("h3", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h3_h6() throws Exception {
        test("h3", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_hr() throws Exception {
        test("h3", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h3_img() throws Exception {
        test("h3", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h3_image() throws Exception {
        test("h3", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_keygen() throws Exception {
        test("h3", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_link() throws Exception {
        test("h3", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_meta() throws Exception {
        test("h3", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_param() throws Exception {
        test("h3", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_source() throws Exception {
        test("h3", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_track() throws Exception {
        test("h3", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h3_wbr() throws Exception {
        test("h3", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_area() throws Exception {
        test("h4", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_bgsound() throws Exception {
        test("h4", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_base() throws Exception {
        test("h4", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_basefont() throws Exception {
        test("h4", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_br() throws Exception {
        test("h4", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h4_command() throws Exception {
        test("h4", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h4_embed() throws Exception {
        test("h4", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h1() throws Exception {
        test("h4", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h2() throws Exception {
        test("h4", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h3() throws Exception {
        test("h4", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h4() throws Exception {
        test("h4", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h5() throws Exception {
        test("h4", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h4_h6() throws Exception {
        test("h4", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_hr() throws Exception {
        test("h4", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h4_img() throws Exception {
        test("h4", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h4_image() throws Exception {
        test("h4", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_keygen() throws Exception {
        test("h4", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_link() throws Exception {
        test("h4", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_meta() throws Exception {
        test("h4", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_param() throws Exception {
        test("h4", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_source() throws Exception {
        test("h4", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_track() throws Exception {
        test("h4", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h4_wbr() throws Exception {
        test("h4", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_area() throws Exception {
        test("h5", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_bgsound() throws Exception {
        test("h5", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_base() throws Exception {
        test("h5", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_basefont() throws Exception {
        test("h5", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_br() throws Exception {
        test("h5", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h5_command() throws Exception {
        test("h5", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h5_embed() throws Exception {
        test("h5", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h1() throws Exception {
        test("h5", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h2() throws Exception {
        test("h5", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h3() throws Exception {
        test("h5", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h4() throws Exception {
        test("h5", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h5() throws Exception {
        test("h5", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h5_h6() throws Exception {
        test("h5", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_hr() throws Exception {
        test("h5", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h5_img() throws Exception {
        test("h5", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h5_image() throws Exception {
        test("h5", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_keygen() throws Exception {
        test("h5", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_link() throws Exception {
        test("h5", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_meta() throws Exception {
        test("h5", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_param() throws Exception {
        test("h5", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_source() throws Exception {
        test("h5", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_track() throws Exception {
        test("h5", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h5_wbr() throws Exception {
        test("h5", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_area() throws Exception {
        test("h6", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_bgsound() throws Exception {
        test("h6", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_base() throws Exception {
        test("h6", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_basefont() throws Exception {
        test("h6", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_br() throws Exception {
        test("h6", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _h6_command() throws Exception {
        test("h6", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h6_embed() throws Exception {
        test("h6", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h1() throws Exception {
        test("h6", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h2() throws Exception {
        test("h6", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h3() throws Exception {
        test("h6", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h4() throws Exception {
        test("h6", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h5() throws Exception {
        test("h6", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE8 })
    public void _h6_h6() throws Exception {
        test("h6", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_hr() throws Exception {
        test("h6", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _h6_img() throws Exception {
        test("h6", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _h6_image() throws Exception {
        test("h6", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_keygen() throws Exception {
        test("h6", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_link() throws Exception {
        test("h6", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_meta() throws Exception {
        test("h6", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_param() throws Exception {
        test("h6", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_source() throws Exception {
        test("h6", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_track() throws Exception {
        test("h6", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _h6_wbr() throws Exception {
        test("h6", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_abbr() throws Exception {
        test("hr", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_acronym() throws Exception {
        test("hr", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_a() throws Exception {
        test("hr", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_address() throws Exception {
        test("hr", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_applet() throws Exception {
        test("hr", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_area() throws Exception {
        test("hr", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_article() throws Exception {
        test("hr", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_aside() throws Exception {
        test("hr", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_audio() throws Exception {
        test("hr", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_bgsound() throws Exception {
        test("hr", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_base() throws Exception {
        test("hr", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_basefont() throws Exception {
        test("hr", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_bdi() throws Exception {
        test("hr", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_bdo() throws Exception {
        test("hr", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_big() throws Exception {
        test("hr", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_blink() throws Exception {
        test("hr", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_blockquote() throws Exception {
        test("hr", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_body() throws Exception {
        test("hr", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_b() throws Exception {
        test("hr", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_br() throws Exception {
        test("hr", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_button() throws Exception {
        test("hr", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_canvas() throws Exception {
        test("hr", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_caption() throws Exception {
        test("hr", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_center() throws Exception {
        test("hr", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_cite() throws Exception {
        test("hr", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_code() throws Exception {
        test("hr", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_command() throws Exception {
        test("hr", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_datalist() throws Exception {
        test("hr", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dfn() throws Exception {
        test("hr", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dd() throws Exception {
        test("hr", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_del() throws Exception {
        test("hr", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_details() throws Exception {
        test("hr", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dialog() throws Exception {
        test("hr", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dir() throws Exception {
        test("hr", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_div() throws Exception {
        test("hr", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dl() throws Exception {
        test("hr", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_dt() throws Exception {
        test("hr", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_embed() throws Exception {
        test("hr", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_em() throws Exception {
        test("hr", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_fieldset() throws Exception {
        test("hr", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_figcaption() throws Exception {
        test("hr", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_figure() throws Exception {
        test("hr", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_font() throws Exception {
        test("hr", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_form() throws Exception {
        test("hr", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_footer() throws Exception {
        test("hr", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_frame() throws Exception {
        test("hr", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_frameset() throws Exception {
        test("hr", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_head() throws Exception {
        test("hr", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_header() throws Exception {
        test("hr", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h1() throws Exception {
        test("hr", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h2() throws Exception {
        test("hr", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h3() throws Exception {
        test("hr", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h4() throws Exception {
        test("hr", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h5() throws Exception {
        test("hr", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_h6() throws Exception {
        test("hr", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_hr() throws Exception {
        test("hr", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_html() throws Exception {
        test("hr", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_iframe() throws Exception {
        test("hr", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_q() throws Exception {
        test("hr", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_img() throws Exception {
        test("hr", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_image() throws Exception {
        test("hr", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_ins() throws Exception {
        test("hr", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_isindex() throws Exception {
        test("hr", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_i() throws Exception {
        test("hr", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_kbd() throws Exception {
        test("hr", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_keygen() throws Exception {
        test("hr", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_label() throws Exception {
        test("hr", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_layer() throws Exception {
        test("hr", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_legend() throws Exception {
        test("hr", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_listing() throws Exception {
        test("hr", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_li() throws Exception {
        test("hr", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_link() throws Exception {
        test("hr", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_main() throws Exception {
        test("hr", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_map() throws Exception {
        test("hr", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_mark() throws Exception {
        test("hr", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_marquee() throws Exception {
        test("hr", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_menu() throws Exception {
        test("hr", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_menuitem() throws Exception {
        test("hr", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_meta() throws Exception {
        test("hr", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_meter() throws Exception {
        test("hr", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_multicol() throws Exception {
        test("hr", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_nav() throws Exception {
        test("hr", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_nextid() throws Exception {
        test("hr", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_nobr() throws Exception {
        test("hr", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_noembed() throws Exception {
        test("hr", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_noframes() throws Exception {
        test("hr", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_nolayer() throws Exception {
        test("hr", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_noscript() throws Exception {
        test("hr", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_object() throws Exception {
        test("hr", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_ol() throws Exception {
        test("hr", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_optgroup() throws Exception {
        test("hr", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_option() throws Exception {
        test("hr", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_output() throws Exception {
        test("hr", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_p() throws Exception {
        test("hr", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_param() throws Exception {
        test("hr", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_plaintext() throws Exception {
        test("hr", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_pre() throws Exception {
        test("hr", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_progress() throws Exception {
        test("hr", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_rp() throws Exception {
        test("hr", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_rt() throws Exception {
        test("hr", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_ruby() throws Exception {
        test("hr", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_s() throws Exception {
        test("hr", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_samp() throws Exception {
        test("hr", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _hr_script() throws Exception {
        test("hr", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_section() throws Exception {
        test("hr", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_select() throws Exception {
        test("hr", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_small() throws Exception {
        test("hr", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_source() throws Exception {
        test("hr", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_span() throws Exception {
        test("hr", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_strike() throws Exception {
        test("hr", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_strong() throws Exception {
        test("hr", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_style() throws Exception {
        test("hr", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_sub() throws Exception {
        test("hr", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_summary() throws Exception {
        test("hr", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_sup() throws Exception {
        test("hr", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_table() throws Exception {
        test("hr", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_col() throws Exception {
        test("hr", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_colgroup() throws Exception {
        test("hr", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_tbody() throws Exception {
        test("hr", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_td() throws Exception {
        test("hr", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_th() throws Exception {
        test("hr", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_tr() throws Exception {
        test("hr", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_textarea() throws Exception {
        test("hr", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_tfoot() throws Exception {
        test("hr", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_thead() throws Exception {
        test("hr", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_tt() throws Exception {
        test("hr", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_time() throws Exception {
        test("hr", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_title() throws Exception {
        test("hr", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_track() throws Exception {
        test("hr", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_u() throws Exception {
        test("hr", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_ul() throws Exception {
        test("hr", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_var() throws Exception {
        test("hr", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_video() throws Exception {
        test("hr", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_wbr() throws Exception {
        test("hr", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_xmp() throws Exception {
        test("hr", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_abbr() throws Exception {
        test("html", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_acronym() throws Exception {
        test("html", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_a() throws Exception {
        test("html", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_address() throws Exception {
        test("html", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_applet() throws Exception {
        test("html", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_area() throws Exception {
        test("html", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_article() throws Exception {
        test("html", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_aside() throws Exception {
        test("html", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_audio() throws Exception {
        test("html", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_bgsound() throws Exception {
        test("html", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_base() throws Exception {
        test("html", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_basefont() throws Exception {
        test("html", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_bdi() throws Exception {
        test("html", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_bdo() throws Exception {
        test("html", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_big() throws Exception {
        test("html", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_blink() throws Exception {
        test("html", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_blockquote() throws Exception {
        test("html", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_body() throws Exception {
        test("html", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_b() throws Exception {
        test("html", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_br() throws Exception {
        test("html", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_button() throws Exception {
        test("html", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_canvas() throws Exception {
        test("html", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_caption() throws Exception {
        test("html", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_center() throws Exception {
        test("html", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_cite() throws Exception {
        test("html", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_code() throws Exception {
        test("html", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_command() throws Exception {
        test("html", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_datalist() throws Exception {
        test("html", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dfn() throws Exception {
        test("html", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dd() throws Exception {
        test("html", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_del() throws Exception {
        test("html", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_details() throws Exception {
        test("html", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dialog() throws Exception {
        test("html", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dir() throws Exception {
        test("html", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_div() throws Exception {
        test("html", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dl() throws Exception {
        test("html", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_dt() throws Exception {
        test("html", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_embed() throws Exception {
        test("html", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_em() throws Exception {
        test("html", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_fieldset() throws Exception {
        test("html", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_figcaption() throws Exception {
        test("html", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_figure() throws Exception {
        test("html", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_font() throws Exception {
        test("html", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_form() throws Exception {
        test("html", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_footer() throws Exception {
        test("html", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_frame() throws Exception {
        test("html", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_frameset() throws Exception {
        test("html", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_head() throws Exception {
        test("html", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_header() throws Exception {
        test("html", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h1() throws Exception {
        test("html", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h2() throws Exception {
        test("html", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h3() throws Exception {
        test("html", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h4() throws Exception {
        test("html", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h5() throws Exception {
        test("html", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_h6() throws Exception {
        test("html", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_hr() throws Exception {
        test("html", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_html() throws Exception {
        test("html", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_iframe() throws Exception {
        test("html", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_q() throws Exception {
        test("html", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_img() throws Exception {
        test("html", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_image() throws Exception {
        test("html", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_ins() throws Exception {
        test("html", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_isindex() throws Exception {
        test("html", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_i() throws Exception {
        test("html", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_kbd() throws Exception {
        test("html", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_keygen() throws Exception {
        test("html", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_label() throws Exception {
        test("html", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_layer() throws Exception {
        test("html", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_legend() throws Exception {
        test("html", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_listing() throws Exception {
        test("html", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_li() throws Exception {
        test("html", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_link() throws Exception {
        test("html", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_main() throws Exception {
        test("html", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_map() throws Exception {
        test("html", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_mark() throws Exception {
        test("html", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_marquee() throws Exception {
        test("html", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_menu() throws Exception {
        test("html", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_menuitem() throws Exception {
        test("html", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_meta() throws Exception {
        test("html", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_meter() throws Exception {
        test("html", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_multicol() throws Exception {
        test("html", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_nav() throws Exception {
        test("html", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_nextid() throws Exception {
        test("html", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_nobr() throws Exception {
        test("html", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_noembed() throws Exception {
        test("html", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_noframes() throws Exception {
        test("html", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_nolayer() throws Exception {
        test("html", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_noscript() throws Exception {
        test("html", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_object() throws Exception {
        test("html", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_ol() throws Exception {
        test("html", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_optgroup() throws Exception {
        test("html", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_option() throws Exception {
        test("html", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_output() throws Exception {
        test("html", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_p() throws Exception {
        test("html", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_param() throws Exception {
        test("html", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_plaintext() throws Exception {
        test("html", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_pre() throws Exception {
        test("html", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_progress() throws Exception {
        test("html", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_rp() throws Exception {
        test("html", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_rt() throws Exception {
        test("html", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_ruby() throws Exception {
        test("html", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_s() throws Exception {
        test("html", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_samp() throws Exception {
        test("html", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented
    public void _html_script() throws Exception {
        test("html", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_section() throws Exception {
        test("html", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_select() throws Exception {
        test("html", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_small() throws Exception {
        test("html", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_source() throws Exception {
        test("html", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_span() throws Exception {
        test("html", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_strike() throws Exception {
        test("html", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_strong() throws Exception {
        test("html", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_style() throws Exception {
        test("html", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_sub() throws Exception {
        test("html", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_summary() throws Exception {
        test("html", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_sup() throws Exception {
        test("html", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_table() throws Exception {
        test("html", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_col() throws Exception {
        test("html", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_colgroup() throws Exception {
        test("html", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_tbody() throws Exception {
        test("html", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_td() throws Exception {
        test("html", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_th() throws Exception {
        test("html", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_tr() throws Exception {
        test("html", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_textarea() throws Exception {
        test("html", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_tfoot() throws Exception {
        test("html", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_thead() throws Exception {
        test("html", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_tt() throws Exception {
        test("html", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_time() throws Exception {
        test("html", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_title() throws Exception {
        test("html", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_track() throws Exception {
        test("html", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_u() throws Exception {
        test("html", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_ul() throws Exception {
        test("html", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_var() throws Exception {
        test("html", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_video() throws Exception {
        test("html", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_wbr() throws Exception {
        test("html", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _html_xmp() throws Exception {
        test("html", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _q_area() throws Exception {
        test("q", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_bgsound() throws Exception {
        test("q", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_base() throws Exception {
        test("q", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_basefont() throws Exception {
        test("q", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_br() throws Exception {
        test("q", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _q_command() throws Exception {
        test("q", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _q_embed() throws Exception {
        test("q", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_hr() throws Exception {
        test("q", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _q_img() throws Exception {
        test("q", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _q_image() throws Exception {
        test("q", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_keygen() throws Exception {
        test("q", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_link() throws Exception {
        test("q", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_meta() throws Exception {
        test("q", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _q_param() throws Exception {
        test("q", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _q_source() throws Exception {
        test("q", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _q_track() throws Exception {
        test("q", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _q_wbr() throws Exception {
        test("q", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_abbr() throws Exception {
        test("img", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_acronym() throws Exception {
        test("img", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_a() throws Exception {
        test("img", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_address() throws Exception {
        test("img", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_applet() throws Exception {
        test("img", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_area() throws Exception {
        test("img", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_article() throws Exception {
        test("img", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_aside() throws Exception {
        test("img", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_audio() throws Exception {
        test("img", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_bgsound() throws Exception {
        test("img", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_base() throws Exception {
        test("img", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_basefont() throws Exception {
        test("img", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_bdi() throws Exception {
        test("img", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_bdo() throws Exception {
        test("img", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_big() throws Exception {
        test("img", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_blink() throws Exception {
        test("img", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_blockquote() throws Exception {
        test("img", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_body() throws Exception {
        test("img", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_b() throws Exception {
        test("img", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_br() throws Exception {
        test("img", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_button() throws Exception {
        test("img", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_canvas() throws Exception {
        test("img", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_caption() throws Exception {
        test("img", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_center() throws Exception {
        test("img", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_cite() throws Exception {
        test("img", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_code() throws Exception {
        test("img", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_command() throws Exception {
        test("img", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_datalist() throws Exception {
        test("img", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dfn() throws Exception {
        test("img", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dd() throws Exception {
        test("img", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_del() throws Exception {
        test("img", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_details() throws Exception {
        test("img", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dialog() throws Exception {
        test("img", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dir() throws Exception {
        test("img", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_div() throws Exception {
        test("img", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dl() throws Exception {
        test("img", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_dt() throws Exception {
        test("img", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_embed() throws Exception {
        test("img", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_em() throws Exception {
        test("img", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_fieldset() throws Exception {
        test("img", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_figcaption() throws Exception {
        test("img", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_figure() throws Exception {
        test("img", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_font() throws Exception {
        test("img", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_form() throws Exception {
        test("img", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_footer() throws Exception {
        test("img", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_frame() throws Exception {
        test("img", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_frameset() throws Exception {
        test("img", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_head() throws Exception {
        test("img", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_header() throws Exception {
        test("img", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h1() throws Exception {
        test("img", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h2() throws Exception {
        test("img", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h3() throws Exception {
        test("img", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h4() throws Exception {
        test("img", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h5() throws Exception {
        test("img", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_h6() throws Exception {
        test("img", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_hr() throws Exception {
        test("img", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_html() throws Exception {
        test("img", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_iframe() throws Exception {
        test("img", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_q() throws Exception {
        test("img", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_img() throws Exception {
        test("img", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_image() throws Exception {
        test("img", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_ins() throws Exception {
        test("img", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_isindex() throws Exception {
        test("img", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_i() throws Exception {
        test("img", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_kbd() throws Exception {
        test("img", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_keygen() throws Exception {
        test("img", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_label() throws Exception {
        test("img", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_layer() throws Exception {
        test("img", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_legend() throws Exception {
        test("img", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_listing() throws Exception {
        test("img", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_li() throws Exception {
        test("img", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_link() throws Exception {
        test("img", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_main() throws Exception {
        test("img", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_map() throws Exception {
        test("img", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_mark() throws Exception {
        test("img", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_marquee() throws Exception {
        test("img", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_menu() throws Exception {
        test("img", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_menuitem() throws Exception {
        test("img", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_meta() throws Exception {
        test("img", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_meter() throws Exception {
        test("img", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_multicol() throws Exception {
        test("img", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_nav() throws Exception {
        test("img", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_nextid() throws Exception {
        test("img", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_nobr() throws Exception {
        test("img", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_noembed() throws Exception {
        test("img", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_noframes() throws Exception {
        test("img", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_nolayer() throws Exception {
        test("img", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_noscript() throws Exception {
        test("img", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_object() throws Exception {
        test("img", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_ol() throws Exception {
        test("img", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_optgroup() throws Exception {
        test("img", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_option() throws Exception {
        test("img", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_output() throws Exception {
        test("img", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_p() throws Exception {
        test("img", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_param() throws Exception {
        test("img", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_plaintext() throws Exception {
        test("img", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_pre() throws Exception {
        test("img", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_progress() throws Exception {
        test("img", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_rp() throws Exception {
        test("img", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_rt() throws Exception {
        test("img", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_ruby() throws Exception {
        test("img", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_s() throws Exception {
        test("img", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_samp() throws Exception {
        test("img", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _img_script() throws Exception {
        test("img", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_section() throws Exception {
        test("img", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_select() throws Exception {
        test("img", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_small() throws Exception {
        test("img", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_source() throws Exception {
        test("img", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_span() throws Exception {
        test("img", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_strike() throws Exception {
        test("img", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_strong() throws Exception {
        test("img", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_style() throws Exception {
        test("img", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_sub() throws Exception {
        test("img", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_summary() throws Exception {
        test("img", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_sup() throws Exception {
        test("img", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_table() throws Exception {
        test("img", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_col() throws Exception {
        test("img", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_colgroup() throws Exception {
        test("img", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_tbody() throws Exception {
        test("img", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_td() throws Exception {
        test("img", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_th() throws Exception {
        test("img", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_tr() throws Exception {
        test("img", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_textarea() throws Exception {
        test("img", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_tfoot() throws Exception {
        test("img", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_thead() throws Exception {
        test("img", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_tt() throws Exception {
        test("img", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_time() throws Exception {
        test("img", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_title() throws Exception {
        test("img", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_track() throws Exception {
        test("img", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_u() throws Exception {
        test("img", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_ul() throws Exception {
        test("img", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_var() throws Exception {
        test("img", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_video() throws Exception {
        test("img", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_wbr() throws Exception {
        test("img", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_xmp() throws Exception {
        test("img", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_abbr() throws Exception {
        test("image", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_acronym() throws Exception {
        test("image", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_a() throws Exception {
        test("image", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_address() throws Exception {
        test("image", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_applet() throws Exception {
        test("image", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_area() throws Exception {
        test("image", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_article() throws Exception {
        test("image", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_aside() throws Exception {
        test("image", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_audio() throws Exception {
        test("image", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_bgsound() throws Exception {
        test("image", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_base() throws Exception {
        test("image", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_basefont() throws Exception {
        test("image", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_bdi() throws Exception {
        test("image", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_bdo() throws Exception {
        test("image", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_big() throws Exception {
        test("image", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_blink() throws Exception {
        test("image", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_blockquote() throws Exception {
        test("image", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_body() throws Exception {
        test("image", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_b() throws Exception {
        test("image", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_br() throws Exception {
        test("image", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_button() throws Exception {
        test("image", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_canvas() throws Exception {
        test("image", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_caption() throws Exception {
        test("image", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_center() throws Exception {
        test("image", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_cite() throws Exception {
        test("image", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_code() throws Exception {
        test("image", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_command() throws Exception {
        test("image", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_datalist() throws Exception {
        test("image", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dfn() throws Exception {
        test("image", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dd() throws Exception {
        test("image", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_del() throws Exception {
        test("image", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_details() throws Exception {
        test("image", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dialog() throws Exception {
        test("image", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dir() throws Exception {
        test("image", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_div() throws Exception {
        test("image", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dl() throws Exception {
        test("image", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_dt() throws Exception {
        test("image", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_embed() throws Exception {
        test("image", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_em() throws Exception {
        test("image", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_fieldset() throws Exception {
        test("image", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_figcaption() throws Exception {
        test("image", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_figure() throws Exception {
        test("image", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_font() throws Exception {
        test("image", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_form() throws Exception {
        test("image", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_footer() throws Exception {
        test("image", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_frame() throws Exception {
        test("image", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_frameset() throws Exception {
        test("image", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_head() throws Exception {
        test("image", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_header() throws Exception {
        test("image", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h1() throws Exception {
        test("image", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h2() throws Exception {
        test("image", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h3() throws Exception {
        test("image", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h4() throws Exception {
        test("image", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h5() throws Exception {
        test("image", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_h6() throws Exception {
        test("image", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_hr() throws Exception {
        test("image", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_html() throws Exception {
        test("image", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_iframe() throws Exception {
        test("image", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_q() throws Exception {
        test("image", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_img() throws Exception {
        test("image", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_image() throws Exception {
        test("image", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_ins() throws Exception {
        test("image", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_isindex() throws Exception {
        test("image", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_i() throws Exception {
        test("image", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_kbd() throws Exception {
        test("image", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_keygen() throws Exception {
        test("image", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_label() throws Exception {
        test("image", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_layer() throws Exception {
        test("image", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_legend() throws Exception {
        test("image", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_listing() throws Exception {
        test("image", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_li() throws Exception {
        test("image", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_link() throws Exception {
        test("image", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_main() throws Exception {
        test("image", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_map() throws Exception {
        test("image", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_mark() throws Exception {
        test("image", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_marquee() throws Exception {
        test("image", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_menu() throws Exception {
        test("image", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_menuitem() throws Exception {
        test("image", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_meta() throws Exception {
        test("image", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_meter() throws Exception {
        test("image", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_multicol() throws Exception {
        test("image", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_nav() throws Exception {
        test("image", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_nextid() throws Exception {
        test("image", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_nobr() throws Exception {
        test("image", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_noembed() throws Exception {
        test("image", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_noframes() throws Exception {
        test("image", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_nolayer() throws Exception {
        test("image", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_noscript() throws Exception {
        test("image", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_object() throws Exception {
        test("image", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_ol() throws Exception {
        test("image", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_optgroup() throws Exception {
        test("image", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_option() throws Exception {
        test("image", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_output() throws Exception {
        test("image", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_p() throws Exception {
        test("image", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_param() throws Exception {
        test("image", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_plaintext() throws Exception {
        test("image", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_pre() throws Exception {
        test("image", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_progress() throws Exception {
        test("image", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_rp() throws Exception {
        test("image", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_rt() throws Exception {
        test("image", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_ruby() throws Exception {
        test("image", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_s() throws Exception {
        test("image", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_samp() throws Exception {
        test("image", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_script() throws Exception {
        test("image", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_section() throws Exception {
        test("image", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_select() throws Exception {
        test("image", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_small() throws Exception {
        test("image", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_source() throws Exception {
        test("image", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_span() throws Exception {
        test("image", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_strike() throws Exception {
        test("image", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_strong() throws Exception {
        test("image", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_style() throws Exception {
        test("image", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_sub() throws Exception {
        test("image", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_summary() throws Exception {
        test("image", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_sup() throws Exception {
        test("image", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_table() throws Exception {
        test("image", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_col() throws Exception {
        test("image", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_colgroup() throws Exception {
        test("image", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_tbody() throws Exception {
        test("image", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_td() throws Exception {
        test("image", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_th() throws Exception {
        test("image", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_tr() throws Exception {
        test("image", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_textarea() throws Exception {
        test("image", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_tfoot() throws Exception {
        test("image", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _image_thead() throws Exception {
        test("image", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_tt() throws Exception {
        test("image", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_time() throws Exception {
        test("image", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _image_title() throws Exception {
        test("image", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_track() throws Exception {
        test("image", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_u() throws Exception {
        test("image", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_ul() throws Exception {
        test("image", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_var() throws Exception {
        test("image", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_video() throws Exception {
        test("image", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_wbr() throws Exception {
        test("image", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_xmp() throws Exception {
        test("image", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ins_area() throws Exception {
        test("ins", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_bgsound() throws Exception {
        test("ins", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_base() throws Exception {
        test("ins", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_basefont() throws Exception {
        test("ins", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_br() throws Exception {
        test("ins", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _ins_command() throws Exception {
        test("ins", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ins_embed() throws Exception {
        test("ins", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_hr() throws Exception {
        test("ins", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ins_img() throws Exception {
        test("ins", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _ins_image() throws Exception {
        test("ins", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_keygen() throws Exception {
        test("ins", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_link() throws Exception {
        test("ins", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_meta() throws Exception {
        test("ins", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _ins_param() throws Exception {
        test("ins", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ins_source() throws Exception {
        test("ins", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ins_track() throws Exception {
        test("ins", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ins_wbr() throws Exception {
        test("ins", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_area() throws Exception {
        test("isindex", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_bgsound() throws Exception {
        test("isindex", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_base() throws Exception {
        test("isindex", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE, FF })
    public void _isindex_basefont() throws Exception {
        test("isindex", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_br() throws Exception {
        test("isindex", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_command() throws Exception {
        test("isindex", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_embed() throws Exception {
        test("isindex", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_hr() throws Exception {
        test("isindex", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_img() throws Exception {
        test("isindex", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_image() throws Exception {
        test("isindex", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ IE, FF })
    public void _isindex_keygen() throws Exception {
        test("isindex", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_link() throws Exception {
        test("isindex", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_meta() throws Exception {
        test("isindex", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_param() throws Exception {
        test("isindex", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_source() throws Exception {
        test("isindex", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_track() throws Exception {
        test("isindex", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_wbr() throws Exception {
        test("isindex", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _i_area() throws Exception {
        test("i", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_bgsound() throws Exception {
        test("i", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_base() throws Exception {
        test("i", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_basefont() throws Exception {
        test("i", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_br() throws Exception {
        test("i", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _i_command() throws Exception {
        test("i", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _i_embed() throws Exception {
        test("i", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_hr() throws Exception {
        test("i", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _i_img() throws Exception {
        test("i", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _i_image() throws Exception {
        test("i", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_keygen() throws Exception {
        test("i", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_link() throws Exception {
        test("i", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_meta() throws Exception {
        test("i", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _i_param() throws Exception {
        test("i", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _i_source() throws Exception {
        test("i", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _i_track() throws Exception {
        test("i", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _i_wbr() throws Exception {
        test("i", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _kbd_area() throws Exception {
        test("kbd", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_bgsound() throws Exception {
        test("kbd", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_base() throws Exception {
        test("kbd", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_basefont() throws Exception {
        test("kbd", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_br() throws Exception {
        test("kbd", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _kbd_command() throws Exception {
        test("kbd", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _kbd_embed() throws Exception {
        test("kbd", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_hr() throws Exception {
        test("kbd", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _kbd_img() throws Exception {
        test("kbd", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _kbd_image() throws Exception {
        test("kbd", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_keygen() throws Exception {
        test("kbd", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_link() throws Exception {
        test("kbd", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_meta() throws Exception {
        test("kbd", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _kbd_param() throws Exception {
        test("kbd", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _kbd_source() throws Exception {
        test("kbd", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _kbd_track() throws Exception {
        test("kbd", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _kbd_wbr() throws Exception {
        test("kbd", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_abbr() throws Exception {
        test("keygen", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_acronym() throws Exception {
        test("keygen", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_a() throws Exception {
        test("keygen", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_address() throws Exception {
        test("keygen", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_applet() throws Exception {
        test("keygen", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_area() throws Exception {
        test("keygen", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_article() throws Exception {
        test("keygen", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_aside() throws Exception {
        test("keygen", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_audio() throws Exception {
        test("keygen", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_bgsound() throws Exception {
        test("keygen", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_base() throws Exception {
        test("keygen", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_basefont() throws Exception {
        test("keygen", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_bdi() throws Exception {
        test("keygen", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_bdo() throws Exception {
        test("keygen", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_big() throws Exception {
        test("keygen", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_blink() throws Exception {
        test("keygen", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_blockquote() throws Exception {
        test("keygen", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_body() throws Exception {
        test("keygen", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_b() throws Exception {
        test("keygen", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_br() throws Exception {
        test("keygen", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_button() throws Exception {
        test("keygen", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_canvas() throws Exception {
        test("keygen", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_caption() throws Exception {
        test("keygen", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_center() throws Exception {
        test("keygen", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_cite() throws Exception {
        test("keygen", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_code() throws Exception {
        test("keygen", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_command() throws Exception {
        test("keygen", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_datalist() throws Exception {
        test("keygen", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dfn() throws Exception {
        test("keygen", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dd() throws Exception {
        test("keygen", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_del() throws Exception {
        test("keygen", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_details() throws Exception {
        test("keygen", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dialog() throws Exception {
        test("keygen", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dir() throws Exception {
        test("keygen", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_div() throws Exception {
        test("keygen", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dl() throws Exception {
        test("keygen", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_dt() throws Exception {
        test("keygen", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_embed() throws Exception {
        test("keygen", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_em() throws Exception {
        test("keygen", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_fieldset() throws Exception {
        test("keygen", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_figcaption() throws Exception {
        test("keygen", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_figure() throws Exception {
        test("keygen", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_font() throws Exception {
        test("keygen", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_form() throws Exception {
        test("keygen", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_footer() throws Exception {
        test("keygen", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_frame() throws Exception {
        test("keygen", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_frameset() throws Exception {
        test("keygen", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_head() throws Exception {
        test("keygen", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_header() throws Exception {
        test("keygen", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h1() throws Exception {
        test("keygen", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h2() throws Exception {
        test("keygen", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h3() throws Exception {
        test("keygen", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h4() throws Exception {
        test("keygen", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h5() throws Exception {
        test("keygen", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_h6() throws Exception {
        test("keygen", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_hr() throws Exception {
        test("keygen", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_html() throws Exception {
        test("keygen", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_iframe() throws Exception {
        test("keygen", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_q() throws Exception {
        test("keygen", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_img() throws Exception {
        test("keygen", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_image() throws Exception {
        test("keygen", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_ins() throws Exception {
        test("keygen", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_isindex() throws Exception {
        test("keygen", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_i() throws Exception {
        test("keygen", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_kbd() throws Exception {
        test("keygen", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_keygen() throws Exception {
        test("keygen", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_label() throws Exception {
        test("keygen", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_layer() throws Exception {
        test("keygen", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_legend() throws Exception {
        test("keygen", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_listing() throws Exception {
        test("keygen", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_li() throws Exception {
        test("keygen", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_link() throws Exception {
        test("keygen", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_main() throws Exception {
        test("keygen", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_map() throws Exception {
        test("keygen", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_mark() throws Exception {
        test("keygen", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_marquee() throws Exception {
        test("keygen", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_menu() throws Exception {
        test("keygen", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_menuitem() throws Exception {
        test("keygen", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_meta() throws Exception {
        test("keygen", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_meter() throws Exception {
        test("keygen", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_multicol() throws Exception {
        test("keygen", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_nav() throws Exception {
        test("keygen", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_nextid() throws Exception {
        test("keygen", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_nobr() throws Exception {
        test("keygen", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_noembed() throws Exception {
        test("keygen", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_noframes() throws Exception {
        test("keygen", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_nolayer() throws Exception {
        test("keygen", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_noscript() throws Exception {
        test("keygen", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_object() throws Exception {
        test("keygen", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_ol() throws Exception {
        test("keygen", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_optgroup() throws Exception {
        test("keygen", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_option() throws Exception {
        test("keygen", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_output() throws Exception {
        test("keygen", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_p() throws Exception {
        test("keygen", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_param() throws Exception {
        test("keygen", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_plaintext() throws Exception {
        test("keygen", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_pre() throws Exception {
        test("keygen", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_progress() throws Exception {
        test("keygen", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_rp() throws Exception {
        test("keygen", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_rt() throws Exception {
        test("keygen", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_ruby() throws Exception {
        test("keygen", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_s() throws Exception {
        test("keygen", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_samp() throws Exception {
        test("keygen", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented
    public void _keygen_script() throws Exception {
        test("keygen", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_section() throws Exception {
        test("keygen", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_select() throws Exception {
        test("keygen", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_small() throws Exception {
        test("keygen", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_source() throws Exception {
        test("keygen", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_span() throws Exception {
        test("keygen", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_strike() throws Exception {
        test("keygen", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_strong() throws Exception {
        test("keygen", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_style() throws Exception {
        test("keygen", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_sub() throws Exception {
        test("keygen", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_summary() throws Exception {
        test("keygen", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_sup() throws Exception {
        test("keygen", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_table() throws Exception {
        test("keygen", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_col() throws Exception {
        test("keygen", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_colgroup() throws Exception {
        test("keygen", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_tbody() throws Exception {
        test("keygen", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_td() throws Exception {
        test("keygen", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_th() throws Exception {
        test("keygen", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_tr() throws Exception {
        test("keygen", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_textarea() throws Exception {
        test("keygen", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_tfoot() throws Exception {
        test("keygen", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_thead() throws Exception {
        test("keygen", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_tt() throws Exception {
        test("keygen", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_time() throws Exception {
        test("keygen", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_title() throws Exception {
        test("keygen", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_track() throws Exception {
        test("keygen", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_u() throws Exception {
        test("keygen", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_ul() throws Exception {
        test("keygen", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_var() throws Exception {
        test("keygen", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_video() throws Exception {
        test("keygen", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_wbr() throws Exception {
        test("keygen", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE = "0",
            FF = "2")
    @NotYetImplemented(FF)
    public void _keygen_xmp() throws Exception {
        test("keygen", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _label_area() throws Exception {
        test("label", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_bgsound() throws Exception {
        test("label", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_base() throws Exception {
        test("label", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_basefont() throws Exception {
        test("label", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_br() throws Exception {
        test("label", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _label_command() throws Exception {
        test("label", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _label_embed() throws Exception {
        test("label", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_hr() throws Exception {
        test("label", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _label_img() throws Exception {
        test("label", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _label_image() throws Exception {
        test("label", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_keygen() throws Exception {
        test("label", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_link() throws Exception {
        test("label", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_meta() throws Exception {
        test("label", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _label_param() throws Exception {
        test("label", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _label_source() throws Exception {
        test("label", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _label_track() throws Exception {
        test("label", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _label_wbr() throws Exception {
        test("label", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_area() throws Exception {
        test("layer", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_bgsound() throws Exception {
        test("layer", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_base() throws Exception {
        test("layer", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_basefont() throws Exception {
        test("layer", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_br() throws Exception {
        test("layer", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _layer_command() throws Exception {
        test("layer", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_embed() throws Exception {
        test("layer", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_hr() throws Exception {
        test("layer", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_img() throws Exception {
        test("layer", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_image() throws Exception {
        test("layer", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_keygen() throws Exception {
        test("layer", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_link() throws Exception {
        test("layer", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_meta() throws Exception {
        test("layer", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_param() throws Exception {
        test("layer", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_source() throws Exception {
        test("layer", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_track() throws Exception {
        test("layer", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_wbr() throws Exception {
        test("layer", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_area() throws Exception {
        test("legend", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_bgsound() throws Exception {
        test("legend", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_base() throws Exception {
        test("legend", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_basefont() throws Exception {
        test("legend", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_br() throws Exception {
        test("legend", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _legend_command() throws Exception {
        test("legend", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_embed() throws Exception {
        test("legend", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_hr() throws Exception {
        test("legend", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_img() throws Exception {
        test("legend", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_image() throws Exception {
        test("legend", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_keygen() throws Exception {
        test("legend", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_link() throws Exception {
        test("legend", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_meta() throws Exception {
        test("legend", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF31, CHROME, IE, FF38 })
    public void _legend_param() throws Exception {
        test("legend", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_source() throws Exception {
        test("legend", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_track() throws Exception {
        test("legend", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_wbr() throws Exception {
        test("legend", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _listing_area() throws Exception {
        test("listing", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_bgsound() throws Exception {
        test("listing", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_base() throws Exception {
        test("listing", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _listing_basefont() throws Exception {
        test("listing", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_br() throws Exception {
        test("listing", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "2",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _listing_command() throws Exception {
        test("listing", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_embed() throws Exception {
        test("listing", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_hr() throws Exception {
        test("listing", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_img() throws Exception {
        test("listing", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _listing_image() throws Exception {
        test("listing", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_keygen() throws Exception {
        test("listing", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_link() throws Exception {
        test("listing", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_meta() throws Exception {
        test("listing", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _listing_param() throws Exception {
        test("listing", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _listing_source() throws Exception {
        test("listing", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _listing_track() throws Exception {
        test("listing", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _listing_wbr() throws Exception {
        test("listing", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_area() throws Exception {
        test("li", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_bgsound() throws Exception {
        test("li", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_base() throws Exception {
        test("li", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_basefont() throws Exception {
        test("li", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_br() throws Exception {
        test("li", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _li_command() throws Exception {
        test("li", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _li_embed() throws Exception {
        test("li", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_hr() throws Exception {
        test("li", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _li_img() throws Exception {
        test("li", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _li_image() throws Exception {
        test("li", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_keygen() throws Exception {
        test("li", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _li_li() throws Exception {
        test("li", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_link() throws Exception {
        test("li", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_meta() throws Exception {
        test("li", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_param() throws Exception {
        test("li", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_source() throws Exception {
        test("li", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_track() throws Exception {
        test("li", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _li_wbr() throws Exception {
        test("li", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_abbr() throws Exception {
        test("link", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_acronym() throws Exception {
        test("link", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_a() throws Exception {
        test("link", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_address() throws Exception {
        test("link", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_applet() throws Exception {
        test("link", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_area() throws Exception {
        test("link", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_article() throws Exception {
        test("link", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_aside() throws Exception {
        test("link", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_audio() throws Exception {
        test("link", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_bgsound() throws Exception {
        test("link", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_base() throws Exception {
        test("link", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_basefont() throws Exception {
        test("link", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_bdi() throws Exception {
        test("link", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_bdo() throws Exception {
        test("link", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_big() throws Exception {
        test("link", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_blink() throws Exception {
        test("link", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_blockquote() throws Exception {
        test("link", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_body() throws Exception {
        test("link", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_b() throws Exception {
        test("link", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_br() throws Exception {
        test("link", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_button() throws Exception {
        test("link", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_canvas() throws Exception {
        test("link", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_caption() throws Exception {
        test("link", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_center() throws Exception {
        test("link", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_cite() throws Exception {
        test("link", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_code() throws Exception {
        test("link", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_command() throws Exception {
        test("link", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_datalist() throws Exception {
        test("link", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dfn() throws Exception {
        test("link", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dd() throws Exception {
        test("link", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_del() throws Exception {
        test("link", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_details() throws Exception {
        test("link", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dialog() throws Exception {
        test("link", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dir() throws Exception {
        test("link", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_div() throws Exception {
        test("link", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dl() throws Exception {
        test("link", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_dt() throws Exception {
        test("link", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_embed() throws Exception {
        test("link", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_em() throws Exception {
        test("link", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_fieldset() throws Exception {
        test("link", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_figcaption() throws Exception {
        test("link", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_figure() throws Exception {
        test("link", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_font() throws Exception {
        test("link", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_form() throws Exception {
        test("link", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_footer() throws Exception {
        test("link", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_frame() throws Exception {
        test("link", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_frameset() throws Exception {
        test("link", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_head() throws Exception {
        test("link", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_header() throws Exception {
        test("link", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h1() throws Exception {
        test("link", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h2() throws Exception {
        test("link", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h3() throws Exception {
        test("link", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h4() throws Exception {
        test("link", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h5() throws Exception {
        test("link", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_h6() throws Exception {
        test("link", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_hr() throws Exception {
        test("link", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_html() throws Exception {
        test("link", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_iframe() throws Exception {
        test("link", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_q() throws Exception {
        test("link", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_img() throws Exception {
        test("link", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_image() throws Exception {
        test("link", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_ins() throws Exception {
        test("link", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_isindex() throws Exception {
        test("link", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_i() throws Exception {
        test("link", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_kbd() throws Exception {
        test("link", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_keygen() throws Exception {
        test("link", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_label() throws Exception {
        test("link", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_layer() throws Exception {
        test("link", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_legend() throws Exception {
        test("link", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_listing() throws Exception {
        test("link", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_li() throws Exception {
        test("link", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_link() throws Exception {
        test("link", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_main() throws Exception {
        test("link", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_map() throws Exception {
        test("link", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_mark() throws Exception {
        test("link", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_marquee() throws Exception {
        test("link", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_menu() throws Exception {
        test("link", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_menuitem() throws Exception {
        test("link", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_meta() throws Exception {
        test("link", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_meter() throws Exception {
        test("link", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_multicol() throws Exception {
        test("link", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_nav() throws Exception {
        test("link", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_nextid() throws Exception {
        test("link", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_nobr() throws Exception {
        test("link", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_noembed() throws Exception {
        test("link", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_noframes() throws Exception {
        test("link", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_nolayer() throws Exception {
        test("link", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_noscript() throws Exception {
        test("link", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_object() throws Exception {
        test("link", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_ol() throws Exception {
        test("link", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_optgroup() throws Exception {
        test("link", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_option() throws Exception {
        test("link", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_output() throws Exception {
        test("link", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_p() throws Exception {
        test("link", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_param() throws Exception {
        test("link", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_plaintext() throws Exception {
        test("link", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_pre() throws Exception {
        test("link", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_progress() throws Exception {
        test("link", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_rp() throws Exception {
        test("link", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_rt() throws Exception {
        test("link", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_ruby() throws Exception {
        test("link", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_s() throws Exception {
        test("link", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_samp() throws Exception {
        test("link", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _link_script() throws Exception {
        test("link", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_section() throws Exception {
        test("link", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_select() throws Exception {
        test("link", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_small() throws Exception {
        test("link", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_source() throws Exception {
        test("link", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_span() throws Exception {
        test("link", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_strike() throws Exception {
        test("link", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_strong() throws Exception {
        test("link", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_style() throws Exception {
        test("link", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_sub() throws Exception {
        test("link", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_summary() throws Exception {
        test("link", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_sup() throws Exception {
        test("link", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_table() throws Exception {
        test("link", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_col() throws Exception {
        test("link", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_colgroup() throws Exception {
        test("link", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_tbody() throws Exception {
        test("link", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_td() throws Exception {
        test("link", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_th() throws Exception {
        test("link", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_tr() throws Exception {
        test("link", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_textarea() throws Exception {
        test("link", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_tfoot() throws Exception {
        test("link", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_thead() throws Exception {
        test("link", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_tt() throws Exception {
        test("link", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_time() throws Exception {
        test("link", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_title() throws Exception {
        test("link", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_track() throws Exception {
        test("link", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_u() throws Exception {
        test("link", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_ul() throws Exception {
        test("link", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_var() throws Exception {
        test("link", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_video() throws Exception {
        test("link", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_wbr() throws Exception {
        test("link", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_xmp() throws Exception {
        test("link", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _main_area() throws Exception {
        test("main", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_bgsound() throws Exception {
        test("main", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_base() throws Exception {
        test("main", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_basefont() throws Exception {
        test("main", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_br() throws Exception {
        test("main", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _main_command() throws Exception {
        test("main", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_embed() throws Exception {
        test("main", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_hr() throws Exception {
        test("main", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_img() throws Exception {
        test("main", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _main_image() throws Exception {
        test("main", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_keygen() throws Exception {
        test("main", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_link() throws Exception {
        test("main", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_meta() throws Exception {
        test("main", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _main_param() throws Exception {
        test("main", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _main_source() throws Exception {
        test("main", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _main_track() throws Exception {
        test("main", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_wbr() throws Exception {
        test("main", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_area() throws Exception {
        test("map", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_bgsound() throws Exception {
        test("map", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_base() throws Exception {
        test("map", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_basefont() throws Exception {
        test("map", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_br() throws Exception {
        test("map", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _map_command() throws Exception {
        test("map", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _map_embed() throws Exception {
        test("map", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_hr() throws Exception {
        test("map", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _map_img() throws Exception {
        test("map", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _map_image() throws Exception {
        test("map", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_keygen() throws Exception {
        test("map", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_link() throws Exception {
        test("map", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_meta() throws Exception {
        test("map", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _map_param() throws Exception {
        test("map", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _map_source() throws Exception {
        test("map", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _map_track() throws Exception {
        test("map", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _map_wbr() throws Exception {
        test("map", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_area() throws Exception {
        test("mark", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_bgsound() throws Exception {
        test("mark", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_base() throws Exception {
        test("mark", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_basefont() throws Exception {
        test("mark", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_br() throws Exception {
        test("mark", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _mark_command() throws Exception {
        test("mark", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_embed() throws Exception {
        test("mark", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_hr() throws Exception {
        test("mark", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_img() throws Exception {
        test("mark", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_image() throws Exception {
        test("mark", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_keygen() throws Exception {
        test("mark", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_link() throws Exception {
        test("mark", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_meta() throws Exception {
        test("mark", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_param() throws Exception {
        test("mark", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_source() throws Exception {
        test("mark", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_track() throws Exception {
        test("mark", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_wbr() throws Exception {
        test("mark", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_area() throws Exception {
        test("marquee", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_bgsound() throws Exception {
        test("marquee", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_base() throws Exception {
        test("marquee", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_basefont() throws Exception {
        test("marquee", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_br() throws Exception {
        test("marquee", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _marquee_command() throws Exception {
        test("marquee", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_embed() throws Exception {
        test("marquee", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_hr() throws Exception {
        test("marquee", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_img() throws Exception {
        test("marquee", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_image() throws Exception {
        test("marquee", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_keygen() throws Exception {
        test("marquee", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_link() throws Exception {
        test("marquee", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_meta() throws Exception {
        test("marquee", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_param() throws Exception {
        test("marquee", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_source() throws Exception {
        test("marquee", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_track() throws Exception {
        test("marquee", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _marquee_wbr() throws Exception {
        test("marquee", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_area() throws Exception {
        test("menu", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_bgsound() throws Exception {
        test("menu", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_base() throws Exception {
        test("menu", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_basefont() throws Exception {
        test("menu", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_br() throws Exception {
        test("menu", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _menu_command() throws Exception {
        test("menu", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _menu_embed() throws Exception {
        test("menu", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_hr() throws Exception {
        test("menu", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _menu_img() throws Exception {
        test("menu", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _menu_image() throws Exception {
        test("menu", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_keygen() throws Exception {
        test("menu", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_link() throws Exception {
        test("menu", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_meta() throws Exception {
        test("menu", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_param() throws Exception {
        test("menu", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_source() throws Exception {
        test("menu", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_track() throws Exception {
        test("menu", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _menu_wbr() throws Exception {
        test("menu", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_area() throws Exception {
        test("menuitem", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_bgsound() throws Exception {
        test("menuitem", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_base() throws Exception {
        test("menuitem", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_basefont() throws Exception {
        test("menuitem", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_br() throws Exception {
        test("menuitem", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _menuitem_command() throws Exception {
        test("menuitem", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_embed() throws Exception {
        test("menuitem", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_hr() throws Exception {
        test("menuitem", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_img() throws Exception {
        test("menuitem", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_image() throws Exception {
        test("menuitem", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_keygen() throws Exception {
        test("menuitem", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_link() throws Exception {
        test("menuitem", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_meta() throws Exception {
        test("menuitem", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_param() throws Exception {
        test("menuitem", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_source() throws Exception {
        test("menuitem", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_track() throws Exception {
        test("menuitem", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_wbr() throws Exception {
        test("menuitem", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_abbr() throws Exception {
        test("meta", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_acronym() throws Exception {
        test("meta", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_a() throws Exception {
        test("meta", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_address() throws Exception {
        test("meta", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_applet() throws Exception {
        test("meta", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_area() throws Exception {
        test("meta", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_article() throws Exception {
        test("meta", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_aside() throws Exception {
        test("meta", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_audio() throws Exception {
        test("meta", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_bgsound() throws Exception {
        test("meta", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_base() throws Exception {
        test("meta", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_basefont() throws Exception {
        test("meta", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_bdi() throws Exception {
        test("meta", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_bdo() throws Exception {
        test("meta", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_big() throws Exception {
        test("meta", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_blink() throws Exception {
        test("meta", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_blockquote() throws Exception {
        test("meta", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_body() throws Exception {
        test("meta", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_b() throws Exception {
        test("meta", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_br() throws Exception {
        test("meta", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_button() throws Exception {
        test("meta", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_canvas() throws Exception {
        test("meta", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_caption() throws Exception {
        test("meta", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_center() throws Exception {
        test("meta", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_cite() throws Exception {
        test("meta", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_code() throws Exception {
        test("meta", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_command() throws Exception {
        test("meta", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_datalist() throws Exception {
        test("meta", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dfn() throws Exception {
        test("meta", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dd() throws Exception {
        test("meta", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_del() throws Exception {
        test("meta", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_details() throws Exception {
        test("meta", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dialog() throws Exception {
        test("meta", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dir() throws Exception {
        test("meta", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_div() throws Exception {
        test("meta", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dl() throws Exception {
        test("meta", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_dt() throws Exception {
        test("meta", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_embed() throws Exception {
        test("meta", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_em() throws Exception {
        test("meta", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_fieldset() throws Exception {
        test("meta", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_figcaption() throws Exception {
        test("meta", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_figure() throws Exception {
        test("meta", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_font() throws Exception {
        test("meta", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_form() throws Exception {
        test("meta", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_footer() throws Exception {
        test("meta", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_frame() throws Exception {
        test("meta", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_frameset() throws Exception {
        test("meta", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_head() throws Exception {
        test("meta", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_header() throws Exception {
        test("meta", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h1() throws Exception {
        test("meta", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h2() throws Exception {
        test("meta", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h3() throws Exception {
        test("meta", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h4() throws Exception {
        test("meta", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h5() throws Exception {
        test("meta", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_h6() throws Exception {
        test("meta", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_hr() throws Exception {
        test("meta", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_html() throws Exception {
        test("meta", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_iframe() throws Exception {
        test("meta", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_q() throws Exception {
        test("meta", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_img() throws Exception {
        test("meta", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_image() throws Exception {
        test("meta", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_ins() throws Exception {
        test("meta", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_isindex() throws Exception {
        test("meta", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_i() throws Exception {
        test("meta", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_kbd() throws Exception {
        test("meta", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_keygen() throws Exception {
        test("meta", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_label() throws Exception {
        test("meta", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_layer() throws Exception {
        test("meta", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_legend() throws Exception {
        test("meta", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_listing() throws Exception {
        test("meta", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_li() throws Exception {
        test("meta", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_link() throws Exception {
        test("meta", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_main() throws Exception {
        test("meta", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_map() throws Exception {
        test("meta", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_mark() throws Exception {
        test("meta", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_marquee() throws Exception {
        test("meta", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_menu() throws Exception {
        test("meta", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_menuitem() throws Exception {
        test("meta", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_meta() throws Exception {
        test("meta", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_meter() throws Exception {
        test("meta", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_multicol() throws Exception {
        test("meta", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_nav() throws Exception {
        test("meta", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_nextid() throws Exception {
        test("meta", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_nobr() throws Exception {
        test("meta", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_noembed() throws Exception {
        test("meta", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_noframes() throws Exception {
        test("meta", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_nolayer() throws Exception {
        test("meta", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_noscript() throws Exception {
        test("meta", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_object() throws Exception {
        test("meta", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_ol() throws Exception {
        test("meta", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_optgroup() throws Exception {
        test("meta", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_option() throws Exception {
        test("meta", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_output() throws Exception {
        test("meta", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_p() throws Exception {
        test("meta", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_param() throws Exception {
        test("meta", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_plaintext() throws Exception {
        test("meta", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_pre() throws Exception {
        test("meta", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_progress() throws Exception {
        test("meta", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_rp() throws Exception {
        test("meta", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_rt() throws Exception {
        test("meta", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_ruby() throws Exception {
        test("meta", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_s() throws Exception {
        test("meta", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_samp() throws Exception {
        test("meta", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _meta_script() throws Exception {
        test("meta", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_section() throws Exception {
        test("meta", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_select() throws Exception {
        test("meta", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_small() throws Exception {
        test("meta", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_source() throws Exception {
        test("meta", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_span() throws Exception {
        test("meta", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_strike() throws Exception {
        test("meta", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_strong() throws Exception {
        test("meta", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_style() throws Exception {
        test("meta", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_sub() throws Exception {
        test("meta", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_summary() throws Exception {
        test("meta", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_sup() throws Exception {
        test("meta", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_table() throws Exception {
        test("meta", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_col() throws Exception {
        test("meta", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_colgroup() throws Exception {
        test("meta", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_tbody() throws Exception {
        test("meta", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_td() throws Exception {
        test("meta", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_th() throws Exception {
        test("meta", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_tr() throws Exception {
        test("meta", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_textarea() throws Exception {
        test("meta", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_tfoot() throws Exception {
        test("meta", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_thead() throws Exception {
        test("meta", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_tt() throws Exception {
        test("meta", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_time() throws Exception {
        test("meta", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_title() throws Exception {
        test("meta", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_track() throws Exception {
        test("meta", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_u() throws Exception {
        test("meta", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_ul() throws Exception {
        test("meta", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_var() throws Exception {
        test("meta", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_video() throws Exception {
        test("meta", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_wbr() throws Exception {
        test("meta", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_xmp() throws Exception {
        test("meta", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_area() throws Exception {
        test("meter", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_bgsound() throws Exception {
        test("meter", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_base() throws Exception {
        test("meter", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_basefont() throws Exception {
        test("meter", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_br() throws Exception {
        test("meter", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _meter_command() throws Exception {
        test("meter", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_embed() throws Exception {
        test("meter", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_hr() throws Exception {
        test("meter", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_img() throws Exception {
        test("meter", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_image() throws Exception {
        test("meter", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_keygen() throws Exception {
        test("meter", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_link() throws Exception {
        test("meter", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_meta() throws Exception {
        test("meter", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_param() throws Exception {
        test("meter", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_source() throws Exception {
        test("meter", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_track() throws Exception {
        test("meter", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_wbr() throws Exception {
        test("meter", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_area() throws Exception {
        test("multicol", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_bgsound() throws Exception {
        test("multicol", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_base() throws Exception {
        test("multicol", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_basefont() throws Exception {
        test("multicol", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_br() throws Exception {
        test("multicol", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _multicol_command() throws Exception {
        test("multicol", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_embed() throws Exception {
        test("multicol", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_hr() throws Exception {
        test("multicol", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_img() throws Exception {
        test("multicol", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_image() throws Exception {
        test("multicol", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_keygen() throws Exception {
        test("multicol", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_link() throws Exception {
        test("multicol", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_meta() throws Exception {
        test("multicol", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_param() throws Exception {
        test("multicol", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_source() throws Exception {
        test("multicol", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_track() throws Exception {
        test("multicol", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_wbr() throws Exception {
        test("multicol", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_area() throws Exception {
        test("nav", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_bgsound() throws Exception {
        test("nav", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_base() throws Exception {
        test("nav", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_basefont() throws Exception {
        test("nav", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_br() throws Exception {
        test("nav", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _nav_command() throws Exception {
        test("nav", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_embed() throws Exception {
        test("nav", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_hr() throws Exception {
        test("nav", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_img() throws Exception {
        test("nav", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_image() throws Exception {
        test("nav", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_keygen() throws Exception {
        test("nav", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_link() throws Exception {
        test("nav", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_meta() throws Exception {
        test("nav", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_param() throws Exception {
        test("nav", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_source() throws Exception {
        test("nav", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_track() throws Exception {
        test("nav", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_wbr() throws Exception {
        test("nav", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_area() throws Exception {
        test("nextid", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_bgsound() throws Exception {
        test("nextid", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_base() throws Exception {
        test("nextid", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_basefont() throws Exception {
        test("nextid", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_br() throws Exception {
        test("nextid", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_command() throws Exception {
        test("nextid", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_embed() throws Exception {
        test("nextid", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_hr() throws Exception {
        test("nextid", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_img() throws Exception {
        test("nextid", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_image() throws Exception {
        test("nextid", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_keygen() throws Exception {
        test("nextid", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_link() throws Exception {
        test("nextid", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_meta() throws Exception {
        test("nextid", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_param() throws Exception {
        test("nextid", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_source() throws Exception {
        test("nextid", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_track() throws Exception {
        test("nextid", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_wbr() throws Exception {
        test("nextid", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nobr_area() throws Exception {
        test("nobr", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_bgsound() throws Exception {
        test("nobr", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_base() throws Exception {
        test("nobr", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_basefont() throws Exception {
        test("nobr", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_br() throws Exception {
        test("nobr", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _nobr_command() throws Exception {
        test("nobr", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _nobr_embed() throws Exception {
        test("nobr", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_hr() throws Exception {
        test("nobr", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _nobr_img() throws Exception {
        test("nobr", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _nobr_image() throws Exception {
        test("nobr", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_keygen() throws Exception {
        test("nobr", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_link() throws Exception {
        test("nobr", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_meta() throws Exception {
        test("nobr", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _nobr_nobr() throws Exception {
        test("nobr", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _nobr_param() throws Exception {
        test("nobr", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nobr_source() throws Exception {
        test("nobr", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nobr_track() throws Exception {
        test("nobr", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _nobr_wbr() throws Exception {
        test("nobr", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_area() throws Exception {
        test("nolayer", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_bgsound() throws Exception {
        test("nolayer", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_base() throws Exception {
        test("nolayer", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_basefont() throws Exception {
        test("nolayer", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_br() throws Exception {
        test("nolayer", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _nolayer_command() throws Exception {
        test("nolayer", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_embed() throws Exception {
        test("nolayer", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_hr() throws Exception {
        test("nolayer", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_img() throws Exception {
        test("nolayer", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_image() throws Exception {
        test("nolayer", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_keygen() throws Exception {
        test("nolayer", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_link() throws Exception {
        test("nolayer", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_meta() throws Exception {
        test("nolayer", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_param() throws Exception {
        test("nolayer", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_source() throws Exception {
        test("nolayer", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_track() throws Exception {
        test("nolayer", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_wbr() throws Exception {
        test("nolayer", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented
    public void _object_area() throws Exception {
        test("object", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_bgsound() throws Exception {
        test("object", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_base() throws Exception {
        test("object", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_basefont() throws Exception {
        test("object", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_br() throws Exception {
        test("object", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "null",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _object_command() throws Exception {
        test("object", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_embed() throws Exception {
        test("object", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_hr() throws Exception {
        test("object", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_img() throws Exception {
        test("object", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented
    public void _object_image() throws Exception {
        test("object", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_keygen() throws Exception {
        test("object", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_link() throws Exception {
        test("object", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_meta() throws Exception {
        test("object", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_param() throws Exception {
        test("object", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented
    public void _object_source() throws Exception {
        test("object", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented
    public void _object_track() throws Exception {
        test("object", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_wbr() throws Exception {
        test("object", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_area() throws Exception {
        test("ol", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_bgsound() throws Exception {
        test("ol", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_base() throws Exception {
        test("ol", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_basefont() throws Exception {
        test("ol", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_br() throws Exception {
        test("ol", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE11 })
    public void _ol_command() throws Exception {
        test("ol", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ol_embed() throws Exception {
        test("ol", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_hr() throws Exception {
        test("ol", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ol_img() throws Exception {
        test("ol", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _ol_image() throws Exception {
        test("ol", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_keygen() throws Exception {
        test("ol", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_link() throws Exception {
        test("ol", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_meta() throws Exception {
        test("ol", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_param() throws Exception {
        test("ol", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_source() throws Exception {
        test("ol", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_track() throws Exception {
        test("ol", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ol_wbr() throws Exception {
        test("ol", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_area() throws Exception {
        test("optgroup", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_bgsound() throws Exception {
        test("optgroup", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_base() throws Exception {
        test("optgroup", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_basefont() throws Exception {
        test("optgroup", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_br() throws Exception {
        test("optgroup", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented
    public void _optgroup_command() throws Exception {
        test("optgroup", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_embed() throws Exception {
        test("optgroup", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_hr() throws Exception {
        test("optgroup", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_img() throws Exception {
        test("optgroup", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_image() throws Exception {
        test("optgroup", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_keygen() throws Exception {
        test("optgroup", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_link() throws Exception {
        test("optgroup", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_meta() throws Exception {
        test("optgroup", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_param() throws Exception {
        test("optgroup", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_source() throws Exception {
        test("optgroup", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_track() throws Exception {
        test("optgroup", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_wbr() throws Exception {
        test("optgroup", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_area() throws Exception {
        test("option", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_bgsound() throws Exception {
        test("option", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_base() throws Exception {
        test("option", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_basefont() throws Exception {
        test("option", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_br() throws Exception {
        test("option", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented
    public void _option_command() throws Exception {
        test("option", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_embed() throws Exception {
        test("option", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_hr() throws Exception {
        test("option", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_img() throws Exception {
        test("option", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_image() throws Exception {
        test("option", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_keygen() throws Exception {
        test("option", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_link() throws Exception {
        test("option", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_meta() throws Exception {
        test("option", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _option_optgroup() throws Exception {
        test("option", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _option_option() throws Exception {
        test("option", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_param() throws Exception {
        test("option", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_source() throws Exception {
        test("option", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_track() throws Exception {
        test("option", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_wbr() throws Exception {
        test("option", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _output_area() throws Exception {
        test("output", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_bgsound() throws Exception {
        test("output", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_base() throws Exception {
        test("output", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_basefont() throws Exception {
        test("output", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_br() throws Exception {
        test("output", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1",
            FF38 = "1")
    @NotYetImplemented({ CHROME, IE })
    public void _output_command() throws Exception {
        test("output", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_embed() throws Exception {
        test("output", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_hr() throws Exception {
        test("output", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_img() throws Exception {
        test("output", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _output_image() throws Exception {
        test("output", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_keygen() throws Exception {
        test("output", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_link() throws Exception {
        test("output", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_meta() throws Exception {
        test("output", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _output_param() throws Exception {
        test("output", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _output_source() throws Exception {
        test("output", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _output_track() throws Exception {
        test("output", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_wbr() throws Exception {
        test("output", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_address() throws Exception {
        test("p", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_area() throws Exception {
        test("p", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_article() throws Exception {
        test("p", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_aside() throws Exception {
        test("p", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_bgsound() throws Exception {
        test("p", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_base() throws Exception {
        test("p", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_basefont() throws Exception {
        test("p", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_blockquote() throws Exception {
        test("p", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_br() throws Exception {
        test("p", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_center() throws Exception {
        test("p", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _p_command() throws Exception {
        test("p", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_dd() throws Exception {
        test("p", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_details() throws Exception {
        test("p", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_dir() throws Exception {
        test("p", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_div() throws Exception {
        test("p", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_dl() throws Exception {
        test("p", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_dt() throws Exception {
        test("p", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _p_embed() throws Exception {
        test("p", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_fieldset() throws Exception {
        test("p", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_figcaption() throws Exception {
        test("p", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_figure() throws Exception {
        test("p", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _p_form() throws Exception {
        test("p", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_footer() throws Exception {
        test("p", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_header() throws Exception {
        test("p", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h1() throws Exception {
        test("p", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h2() throws Exception {
        test("p", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h3() throws Exception {
        test("p", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h4() throws Exception {
        test("p", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h5() throws Exception {
        test("p", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_h6() throws Exception {
        test("p", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_hr() throws Exception {
        test("p", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _p_img() throws Exception {
        test("p", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _p_image() throws Exception {
        test("p", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_keygen() throws Exception {
        test("p", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_listing() throws Exception {
        test("p", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_li() throws Exception {
        test("p", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_link() throws Exception {
        test("p", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "1",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF31, CHROME, FF38 })
    public void _p_main() throws Exception {
        test("p", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_menu() throws Exception {
        test("p", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_meta() throws Exception {
        test("p", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_nav() throws Exception {
        test("p", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_ol() throws Exception {
        test("p", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_p() throws Exception {
        test("p", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_param() throws Exception {
        test("p", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _p_plaintext() throws Exception {
        test("p", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_pre() throws Exception {
        test("p", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_section() throws Exception {
        test("p", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_source() throws Exception {
        test("p", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_summary() throws Exception {
        test("p", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_track() throws Exception {
        test("p", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_ul() throws Exception {
        test("p", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _p_wbr() throws Exception {
        test("p", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _p_xmp() throws Exception {
        test("p", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_abbr() throws Exception {
        test("param", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_acronym() throws Exception {
        test("param", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_a() throws Exception {
        test("param", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_address() throws Exception {
        test("param", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_applet() throws Exception {
        test("param", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_area() throws Exception {
        test("param", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_article() throws Exception {
        test("param", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_aside() throws Exception {
        test("param", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_audio() throws Exception {
        test("param", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_bgsound() throws Exception {
        test("param", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_base() throws Exception {
        test("param", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_basefont() throws Exception {
        test("param", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_bdi() throws Exception {
        test("param", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_bdo() throws Exception {
        test("param", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_big() throws Exception {
        test("param", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_blink() throws Exception {
        test("param", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_blockquote() throws Exception {
        test("param", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_body() throws Exception {
        test("param", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_b() throws Exception {
        test("param", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_br() throws Exception {
        test("param", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_button() throws Exception {
        test("param", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_canvas() throws Exception {
        test("param", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_caption() throws Exception {
        test("param", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_center() throws Exception {
        test("param", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_cite() throws Exception {
        test("param", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_code() throws Exception {
        test("param", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_command() throws Exception {
        test("param", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_datalist() throws Exception {
        test("param", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dfn() throws Exception {
        test("param", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dd() throws Exception {
        test("param", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_del() throws Exception {
        test("param", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_details() throws Exception {
        test("param", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dialog() throws Exception {
        test("param", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dir() throws Exception {
        test("param", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_div() throws Exception {
        test("param", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dl() throws Exception {
        test("param", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_dt() throws Exception {
        test("param", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_embed() throws Exception {
        test("param", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_em() throws Exception {
        test("param", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_fieldset() throws Exception {
        test("param", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_figcaption() throws Exception {
        test("param", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_figure() throws Exception {
        test("param", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_font() throws Exception {
        test("param", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_form() throws Exception {
        test("param", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_footer() throws Exception {
        test("param", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_frame() throws Exception {
        test("param", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_frameset() throws Exception {
        test("param", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_head() throws Exception {
        test("param", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_header() throws Exception {
        test("param", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h1() throws Exception {
        test("param", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h2() throws Exception {
        test("param", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h3() throws Exception {
        test("param", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h4() throws Exception {
        test("param", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h5() throws Exception {
        test("param", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_h6() throws Exception {
        test("param", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_hr() throws Exception {
        test("param", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_html() throws Exception {
        test("param", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_iframe() throws Exception {
        test("param", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_q() throws Exception {
        test("param", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_img() throws Exception {
        test("param", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_image() throws Exception {
        test("param", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_ins() throws Exception {
        test("param", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_isindex() throws Exception {
        test("param", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_i() throws Exception {
        test("param", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_kbd() throws Exception {
        test("param", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_keygen() throws Exception {
        test("param", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_label() throws Exception {
        test("param", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_layer() throws Exception {
        test("param", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_legend() throws Exception {
        test("param", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_listing() throws Exception {
        test("param", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_li() throws Exception {
        test("param", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_link() throws Exception {
        test("param", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_main() throws Exception {
        test("param", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_map() throws Exception {
        test("param", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_mark() throws Exception {
        test("param", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_marquee() throws Exception {
        test("param", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_menu() throws Exception {
        test("param", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_menuitem() throws Exception {
        test("param", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_meta() throws Exception {
        test("param", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_meter() throws Exception {
        test("param", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_multicol() throws Exception {
        test("param", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_nav() throws Exception {
        test("param", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_nextid() throws Exception {
        test("param", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_nobr() throws Exception {
        test("param", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_noembed() throws Exception {
        test("param", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_noframes() throws Exception {
        test("param", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_nolayer() throws Exception {
        test("param", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_noscript() throws Exception {
        test("param", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_object() throws Exception {
        test("param", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_ol() throws Exception {
        test("param", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_optgroup() throws Exception {
        test("param", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_option() throws Exception {
        test("param", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_output() throws Exception {
        test("param", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_p() throws Exception {
        test("param", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_param() throws Exception {
        test("param", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_plaintext() throws Exception {
        test("param", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_pre() throws Exception {
        test("param", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_progress() throws Exception {
        test("param", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_rp() throws Exception {
        test("param", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_rt() throws Exception {
        test("param", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_ruby() throws Exception {
        test("param", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_s() throws Exception {
        test("param", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_samp() throws Exception {
        test("param", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _param_script() throws Exception {
        test("param", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_section() throws Exception {
        test("param", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_select() throws Exception {
        test("param", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_small() throws Exception {
        test("param", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_source() throws Exception {
        test("param", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_span() throws Exception {
        test("param", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_strike() throws Exception {
        test("param", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_strong() throws Exception {
        test("param", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_style() throws Exception {
        test("param", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_sub() throws Exception {
        test("param", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_summary() throws Exception {
        test("param", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_sup() throws Exception {
        test("param", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_table() throws Exception {
        test("param", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_col() throws Exception {
        test("param", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_colgroup() throws Exception {
        test("param", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_tbody() throws Exception {
        test("param", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_td() throws Exception {
        test("param", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_th() throws Exception {
        test("param", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_tr() throws Exception {
        test("param", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_textarea() throws Exception {
        test("param", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_tfoot() throws Exception {
        test("param", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_thead() throws Exception {
        test("param", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_tt() throws Exception {
        test("param", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_time() throws Exception {
        test("param", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_title() throws Exception {
        test("param", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_track() throws Exception {
        test("param", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_u() throws Exception {
        test("param", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_ul() throws Exception {
        test("param", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_var() throws Exception {
        test("param", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_video() throws Exception {
        test("param", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_wbr() throws Exception {
        test("param", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_xmp() throws Exception {
        test("param", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _pre_area() throws Exception {
        test("pre", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_bgsound() throws Exception {
        test("pre", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_base() throws Exception {
        test("pre", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _pre_basefont() throws Exception {
        test("pre", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_br() throws Exception {
        test("pre", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "2",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _pre_command() throws Exception {
        test("pre", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_embed() throws Exception {
        test("pre", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_hr() throws Exception {
        test("pre", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_img() throws Exception {
        test("pre", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _pre_image() throws Exception {
        test("pre", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_keygen() throws Exception {
        test("pre", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_link() throws Exception {
        test("pre", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_meta() throws Exception {
        test("pre", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _pre_param() throws Exception {
        test("pre", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _pre_source() throws Exception {
        test("pre", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _pre_track() throws Exception {
        test("pre", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _pre_wbr() throws Exception {
        test("pre", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_area() throws Exception {
        test("progress", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_bgsound() throws Exception {
        test("progress", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_base() throws Exception {
        test("progress", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_basefont() throws Exception {
        test("progress", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_br() throws Exception {
        test("progress", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _progress_command() throws Exception {
        test("progress", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_embed() throws Exception {
        test("progress", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_hr() throws Exception {
        test("progress", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_img() throws Exception {
        test("progress", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_image() throws Exception {
        test("progress", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_keygen() throws Exception {
        test("progress", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_link() throws Exception {
        test("progress", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_meta() throws Exception {
        test("progress", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_param() throws Exception {
        test("progress", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_source() throws Exception {
        test("progress", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_track() throws Exception {
        test("progress", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_wbr() throws Exception {
        test("progress", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_area() throws Exception {
        test("rp", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_bgsound() throws Exception {
        test("rp", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_base() throws Exception {
        test("rp", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_basefont() throws Exception {
        test("rp", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_br() throws Exception {
        test("rp", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _rp_command() throws Exception {
        test("rp", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_embed() throws Exception {
        test("rp", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_hr() throws Exception {
        test("rp", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_img() throws Exception {
        test("rp", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_image() throws Exception {
        test("rp", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_keygen() throws Exception {
        test("rp", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_link() throws Exception {
        test("rp", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_meta() throws Exception {
        test("rp", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF31, CHROME, IE, FF38 })
    public void _rp_param() throws Exception {
        test("rp", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_source() throws Exception {
        test("rp", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_track() throws Exception {
        test("rp", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_wbr() throws Exception {
        test("rp", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_area() throws Exception {
        test("rt", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_bgsound() throws Exception {
        test("rt", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_base() throws Exception {
        test("rt", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_basefont() throws Exception {
        test("rt", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_br() throws Exception {
        test("rt", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _rt_command() throws Exception {
        test("rt", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_embed() throws Exception {
        test("rt", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_hr() throws Exception {
        test("rt", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_img() throws Exception {
        test("rt", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_image() throws Exception {
        test("rt", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_keygen() throws Exception {
        test("rt", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_link() throws Exception {
        test("rt", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_meta() throws Exception {
        test("rt", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ FF31, CHROME, IE, FF38 })
    public void _rt_param() throws Exception {
        test("rt", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_source() throws Exception {
        test("rt", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_track() throws Exception {
        test("rt", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_wbr() throws Exception {
        test("rt", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_area() throws Exception {
        test("ruby", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_bgsound() throws Exception {
        test("ruby", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_base() throws Exception {
        test("ruby", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_basefont() throws Exception {
        test("ruby", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_br() throws Exception {
        test("ruby", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _ruby_command() throws Exception {
        test("ruby", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ruby_embed() throws Exception {
        test("ruby", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_hr() throws Exception {
        test("ruby", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ruby_img() throws Exception {
        test("ruby", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _ruby_image() throws Exception {
        test("ruby", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_keygen() throws Exception {
        test("ruby", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_link() throws Exception {
        test("ruby", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_meta() throws Exception {
        test("ruby", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_param() throws Exception {
        test("ruby", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_source() throws Exception {
        test("ruby", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_track() throws Exception {
        test("ruby", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ruby_wbr() throws Exception {
        test("ruby", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_area() throws Exception {
        test("s", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_bgsound() throws Exception {
        test("s", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_base() throws Exception {
        test("s", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_basefont() throws Exception {
        test("s", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_br() throws Exception {
        test("s", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _s_command() throws Exception {
        test("s", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _s_embed() throws Exception {
        test("s", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_hr() throws Exception {
        test("s", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _s_img() throws Exception {
        test("s", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _s_image() throws Exception {
        test("s", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_keygen() throws Exception {
        test("s", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_link() throws Exception {
        test("s", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_meta() throws Exception {
        test("s", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_param() throws Exception {
        test("s", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_source() throws Exception {
        test("s", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_track() throws Exception {
        test("s", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _s_wbr() throws Exception {
        test("s", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _samp_area() throws Exception {
        test("samp", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_bgsound() throws Exception {
        test("samp", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_base() throws Exception {
        test("samp", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_basefont() throws Exception {
        test("samp", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_br() throws Exception {
        test("samp", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _samp_command() throws Exception {
        test("samp", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _samp_embed() throws Exception {
        test("samp", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_hr() throws Exception {
        test("samp", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _samp_img() throws Exception {
        test("samp", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _samp_image() throws Exception {
        test("samp", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_keygen() throws Exception {
        test("samp", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_link() throws Exception {
        test("samp", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_meta() throws Exception {
        test("samp", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _samp_param() throws Exception {
        test("samp", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _samp_source() throws Exception {
        test("samp", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _samp_track() throws Exception {
        test("samp", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _samp_wbr() throws Exception {
        test("samp", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _section_area() throws Exception {
        test("section", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_bgsound() throws Exception {
        test("section", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_base() throws Exception {
        test("section", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_basefont() throws Exception {
        test("section", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_br() throws Exception {
        test("section", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _section_command() throws Exception {
        test("section", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_embed() throws Exception {
        test("section", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_hr() throws Exception {
        test("section", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_img() throws Exception {
        test("section", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _section_image() throws Exception {
        test("section", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_keygen() throws Exception {
        test("section", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_link() throws Exception {
        test("section", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_meta() throws Exception {
        test("section", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _section_param() throws Exception {
        test("section", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _section_source() throws Exception {
        test("section", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _section_track() throws Exception {
        test("section", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_wbr() throws Exception {
        test("section", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _select_keygen() throws Exception {
        test("select", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _select_select() throws Exception {
        test("select", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _select_textarea() throws Exception {
        test("select", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _small_area() throws Exception {
        test("small", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_bgsound() throws Exception {
        test("small", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_base() throws Exception {
        test("small", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_basefont() throws Exception {
        test("small", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_br() throws Exception {
        test("small", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _small_command() throws Exception {
        test("small", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _small_embed() throws Exception {
        test("small", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_hr() throws Exception {
        test("small", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _small_img() throws Exception {
        test("small", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _small_image() throws Exception {
        test("small", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_keygen() throws Exception {
        test("small", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_link() throws Exception {
        test("small", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_meta() throws Exception {
        test("small", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _small_param() throws Exception {
        test("small", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _small_source() throws Exception {
        test("small", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _small_track() throws Exception {
        test("small", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _small_wbr() throws Exception {
        test("small", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_abbr() throws Exception {
        test("source", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_acronym() throws Exception {
        test("source", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_a() throws Exception {
        test("source", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_address() throws Exception {
        test("source", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_applet() throws Exception {
        test("source", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_area() throws Exception {
        test("source", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_article() throws Exception {
        test("source", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_aside() throws Exception {
        test("source", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_audio() throws Exception {
        test("source", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_bgsound() throws Exception {
        test("source", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_base() throws Exception {
        test("source", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_basefont() throws Exception {
        test("source", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_bdi() throws Exception {
        test("source", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_bdo() throws Exception {
        test("source", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_big() throws Exception {
        test("source", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_blink() throws Exception {
        test("source", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_blockquote() throws Exception {
        test("source", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_body() throws Exception {
        test("source", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_b() throws Exception {
        test("source", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_br() throws Exception {
        test("source", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_button() throws Exception {
        test("source", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_canvas() throws Exception {
        test("source", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_caption() throws Exception {
        test("source", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_center() throws Exception {
        test("source", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_cite() throws Exception {
        test("source", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_code() throws Exception {
        test("source", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_command() throws Exception {
        test("source", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_datalist() throws Exception {
        test("source", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dfn() throws Exception {
        test("source", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dd() throws Exception {
        test("source", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_del() throws Exception {
        test("source", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_details() throws Exception {
        test("source", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dialog() throws Exception {
        test("source", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dir() throws Exception {
        test("source", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_div() throws Exception {
        test("source", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dl() throws Exception {
        test("source", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_dt() throws Exception {
        test("source", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_embed() throws Exception {
        test("source", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_em() throws Exception {
        test("source", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_fieldset() throws Exception {
        test("source", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_figcaption() throws Exception {
        test("source", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_figure() throws Exception {
        test("source", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_font() throws Exception {
        test("source", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_form() throws Exception {
        test("source", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_footer() throws Exception {
        test("source", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_frame() throws Exception {
        test("source", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_frameset() throws Exception {
        test("source", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_head() throws Exception {
        test("source", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_header() throws Exception {
        test("source", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h1() throws Exception {
        test("source", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h2() throws Exception {
        test("source", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h3() throws Exception {
        test("source", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h4() throws Exception {
        test("source", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h5() throws Exception {
        test("source", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_h6() throws Exception {
        test("source", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_hr() throws Exception {
        test("source", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_html() throws Exception {
        test("source", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_iframe() throws Exception {
        test("source", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_q() throws Exception {
        test("source", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_img() throws Exception {
        test("source", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_image() throws Exception {
        test("source", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_ins() throws Exception {
        test("source", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_isindex() throws Exception {
        test("source", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_i() throws Exception {
        test("source", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_kbd() throws Exception {
        test("source", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_keygen() throws Exception {
        test("source", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_label() throws Exception {
        test("source", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_layer() throws Exception {
        test("source", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_legend() throws Exception {
        test("source", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_listing() throws Exception {
        test("source", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_li() throws Exception {
        test("source", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_link() throws Exception {
        test("source", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_main() throws Exception {
        test("source", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_map() throws Exception {
        test("source", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_mark() throws Exception {
        test("source", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_marquee() throws Exception {
        test("source", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_menu() throws Exception {
        test("source", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_menuitem() throws Exception {
        test("source", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_meta() throws Exception {
        test("source", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_meter() throws Exception {
        test("source", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_multicol() throws Exception {
        test("source", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_nav() throws Exception {
        test("source", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_nextid() throws Exception {
        test("source", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_nobr() throws Exception {
        test("source", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_noembed() throws Exception {
        test("source", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_noframes() throws Exception {
        test("source", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_nolayer() throws Exception {
        test("source", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_noscript() throws Exception {
        test("source", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_object() throws Exception {
        test("source", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_ol() throws Exception {
        test("source", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_optgroup() throws Exception {
        test("source", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_option() throws Exception {
        test("source", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_output() throws Exception {
        test("source", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_p() throws Exception {
        test("source", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_param() throws Exception {
        test("source", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_plaintext() throws Exception {
        test("source", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_pre() throws Exception {
        test("source", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_progress() throws Exception {
        test("source", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_rp() throws Exception {
        test("source", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_rt() throws Exception {
        test("source", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_ruby() throws Exception {
        test("source", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_s() throws Exception {
        test("source", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_samp() throws Exception {
        test("source", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_script() throws Exception {
        test("source", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_section() throws Exception {
        test("source", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_select() throws Exception {
        test("source", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_small() throws Exception {
        test("source", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_source() throws Exception {
        test("source", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_span() throws Exception {
        test("source", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_strike() throws Exception {
        test("source", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_strong() throws Exception {
        test("source", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_style() throws Exception {
        test("source", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_sub() throws Exception {
        test("source", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_summary() throws Exception {
        test("source", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_sup() throws Exception {
        test("source", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_table() throws Exception {
        test("source", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_col() throws Exception {
        test("source", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_colgroup() throws Exception {
        test("source", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_tbody() throws Exception {
        test("source", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_td() throws Exception {
        test("source", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_th() throws Exception {
        test("source", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_tr() throws Exception {
        test("source", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_textarea() throws Exception {
        test("source", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_tfoot() throws Exception {
        test("source", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _source_thead() throws Exception {
        test("source", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_tt() throws Exception {
        test("source", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_time() throws Exception {
        test("source", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _source_title() throws Exception {
        test("source", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_track() throws Exception {
        test("source", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_u() throws Exception {
        test("source", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_ul() throws Exception {
        test("source", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_var() throws Exception {
        test("source", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_video() throws Exception {
        test("source", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_wbr() throws Exception {
        test("source", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_xmp() throws Exception {
        test("source", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_area() throws Exception {
        test("span", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_bgsound() throws Exception {
        test("span", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_base() throws Exception {
        test("span", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_basefont() throws Exception {
        test("span", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_br() throws Exception {
        test("span", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _span_command() throws Exception {
        test("span", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _span_embed() throws Exception {
        test("span", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_hr() throws Exception {
        test("span", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _span_img() throws Exception {
        test("span", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _span_image() throws Exception {
        test("span", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_keygen() throws Exception {
        test("span", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_link() throws Exception {
        test("span", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_meta() throws Exception {
        test("span", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_param() throws Exception {
        test("span", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_source() throws Exception {
        test("span", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_track() throws Exception {
        test("span", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _span_wbr() throws Exception {
        test("span", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strike_area() throws Exception {
        test("strike", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_bgsound() throws Exception {
        test("strike", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_base() throws Exception {
        test("strike", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_basefont() throws Exception {
        test("strike", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_br() throws Exception {
        test("strike", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _strike_command() throws Exception {
        test("strike", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _strike_embed() throws Exception {
        test("strike", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_hr() throws Exception {
        test("strike", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _strike_img() throws Exception {
        test("strike", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _strike_image() throws Exception {
        test("strike", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_keygen() throws Exception {
        test("strike", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_link() throws Exception {
        test("strike", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_meta() throws Exception {
        test("strike", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _strike_param() throws Exception {
        test("strike", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strike_source() throws Exception {
        test("strike", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strike_track() throws Exception {
        test("strike", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strike_wbr() throws Exception {
        test("strike", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strong_area() throws Exception {
        test("strong", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_bgsound() throws Exception {
        test("strong", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_base() throws Exception {
        test("strong", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_basefont() throws Exception {
        test("strong", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_br() throws Exception {
        test("strong", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _strong_command() throws Exception {
        test("strong", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _strong_embed() throws Exception {
        test("strong", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_hr() throws Exception {
        test("strong", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _strong_img() throws Exception {
        test("strong", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _strong_image() throws Exception {
        test("strong", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_keygen() throws Exception {
        test("strong", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_link() throws Exception {
        test("strong", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_meta() throws Exception {
        test("strong", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _strong_param() throws Exception {
        test("strong", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strong_source() throws Exception {
        test("strong", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strong_track() throws Exception {
        test("strong", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _strong_wbr() throws Exception {
        test("strong", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sub_area() throws Exception {
        test("sub", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_bgsound() throws Exception {
        test("sub", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_base() throws Exception {
        test("sub", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_basefont() throws Exception {
        test("sub", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_br() throws Exception {
        test("sub", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _sub_command() throws Exception {
        test("sub", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _sub_embed() throws Exception {
        test("sub", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_hr() throws Exception {
        test("sub", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _sub_img() throws Exception {
        test("sub", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _sub_image() throws Exception {
        test("sub", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_keygen() throws Exception {
        test("sub", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_link() throws Exception {
        test("sub", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_meta() throws Exception {
        test("sub", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _sub_param() throws Exception {
        test("sub", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sub_source() throws Exception {
        test("sub", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sub_track() throws Exception {
        test("sub", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sub_wbr() throws Exception {
        test("sub", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_area() throws Exception {
        test("summary", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_bgsound() throws Exception {
        test("summary", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_base() throws Exception {
        test("summary", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_basefont() throws Exception {
        test("summary", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_br() throws Exception {
        test("summary", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _summary_command() throws Exception {
        test("summary", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_embed() throws Exception {
        test("summary", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_hr() throws Exception {
        test("summary", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_img() throws Exception {
        test("summary", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_image() throws Exception {
        test("summary", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_keygen() throws Exception {
        test("summary", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_link() throws Exception {
        test("summary", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_meta() throws Exception {
        test("summary", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_param() throws Exception {
        test("summary", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_source() throws Exception {
        test("summary", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_track() throws Exception {
        test("summary", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_wbr() throws Exception {
        test("summary", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sup_area() throws Exception {
        test("sup", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_bgsound() throws Exception {
        test("sup", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_base() throws Exception {
        test("sup", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_basefont() throws Exception {
        test("sup", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_br() throws Exception {
        test("sup", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _sup_command() throws Exception {
        test("sup", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _sup_embed() throws Exception {
        test("sup", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_hr() throws Exception {
        test("sup", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _sup_img() throws Exception {
        test("sup", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _sup_image() throws Exception {
        test("sup", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_keygen() throws Exception {
        test("sup", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_link() throws Exception {
        test("sup", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_meta() throws Exception {
        test("sup", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _sup_param() throws Exception {
        test("sup", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sup_source() throws Exception {
        test("sup", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sup_track() throws Exception {
        test("sup", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _sup_wbr() throws Exception {
        test("sup", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_abbr() throws Exception {
        test("table", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_acronym() throws Exception {
        test("table", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_a() throws Exception {
        test("table", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_address() throws Exception {
        test("table", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_applet() throws Exception {
        test("table", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_article() throws Exception {
        test("table", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_aside() throws Exception {
        test("table", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_audio() throws Exception {
        test("table", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_bdi() throws Exception {
        test("table", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_bdo() throws Exception {
        test("table", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_big() throws Exception {
        test("table", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_blink() throws Exception {
        test("table", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_blockquote() throws Exception {
        test("table", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_b() throws Exception {
        test("table", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented
    public void _table_button() throws Exception {
        test("table", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_canvas() throws Exception {
        test("table", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_center() throws Exception {
        test("table", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_cite() throws Exception {
        test("table", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_code() throws Exception {
        test("table", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_datalist() throws Exception {
        test("table", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dfn() throws Exception {
        test("table", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dd() throws Exception {
        test("table", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_del() throws Exception {
        test("table", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_details() throws Exception {
        test("table", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dialog() throws Exception {
        test("table", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dir() throws Exception {
        test("table", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_div() throws Exception {
        test("table", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dl() throws Exception {
        test("table", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_dt() throws Exception {
        test("table", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_em() throws Exception {
        test("table", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_fieldset() throws Exception {
        test("table", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_figcaption() throws Exception {
        test("table", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_figure() throws Exception {
        test("table", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_font() throws Exception {
        test("table", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _table_form() throws Exception {
        test("table", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_footer() throws Exception {
        test("table", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_header() throws Exception {
        test("table", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h1() throws Exception {
        test("table", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h2() throws Exception {
        test("table", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h3() throws Exception {
        test("table", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h4() throws Exception {
        test("table", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h5() throws Exception {
        test("table", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_h6() throws Exception {
        test("table", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_iframe() throws Exception {
        test("table", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_q() throws Exception {
        test("table", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_ins() throws Exception {
        test("table", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "1",
            IE8 = "2",
            FF31 = "1")
    @NotYetImplemented({ FF31, IE8, FF38 })
    public void _table_isindex() throws Exception {
        test("table", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_i() throws Exception {
        test("table", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_kbd() throws Exception {
        test("table", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_label() throws Exception {
        test("table", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_layer() throws Exception {
        test("table", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_legend() throws Exception {
        test("table", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_listing() throws Exception {
        test("table", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_li() throws Exception {
        test("table", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_main() throws Exception {
        test("table", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_map() throws Exception {
        test("table", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_mark() throws Exception {
        test("table", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_marquee() throws Exception {
        test("table", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_menu() throws Exception {
        test("table", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_menuitem() throws Exception {
        test("table", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_meter() throws Exception {
        test("table", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_multicol() throws Exception {
        test("table", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_nav() throws Exception {
        test("table", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented
    public void _table_nextid() throws Exception {
        test("table", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_nobr() throws Exception {
        test("table", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_noembed() throws Exception {
        test("table", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_noframes() throws Exception {
        test("table", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_nolayer() throws Exception {
        test("table", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_noscript() throws Exception {
        test("table", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_object() throws Exception {
        test("table", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_ol() throws Exception {
        test("table", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented
    public void _table_optgroup() throws Exception {
        test("table", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented
    public void _table_option() throws Exception {
        test("table", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_output() throws Exception {
        test("table", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_p() throws Exception {
        test("table", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_plaintext() throws Exception {
        test("table", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_pre() throws Exception {
        test("table", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_progress() throws Exception {
        test("table", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_rp() throws Exception {
        test("table", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_rt() throws Exception {
        test("table", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_ruby() throws Exception {
        test("table", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_s() throws Exception {
        test("table", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_samp() throws Exception {
        test("table", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_section() throws Exception {
        test("table", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented
    public void _table_select() throws Exception {
        test("table", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_small() throws Exception {
        test("table", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_span() throws Exception {
        test("table", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_strike() throws Exception {
        test("table", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_strong() throws Exception {
        test("table", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_sub() throws Exception {
        test("table", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_summary() throws Exception {
        test("table", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_sup() throws Exception {
        test("table", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "1",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_table() throws Exception {
        test("table", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented
    public void _table_textarea() throws Exception {
        test("table", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_tt() throws Exception {
        test("table", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_time() throws Exception {
        test("table", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_title() throws Exception {
        test("table", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_u() throws Exception {
        test("table", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_ul() throws Exception {
        test("table", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_var() throws Exception {
        test("table", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_video() throws Exception {
        test("table", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "0",
            IE11 = "0",
            IE8 = "2",
            FF31 = "0")
    @NotYetImplemented({ IE8, FF38 })
    public void _table_xmp() throws Exception {
        test("table", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_abbr() throws Exception {
        test("col", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_acronym() throws Exception {
        test("col", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_a() throws Exception {
        test("col", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_address() throws Exception {
        test("col", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_applet() throws Exception {
        test("col", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_area() throws Exception {
        test("col", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_article() throws Exception {
        test("col", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_aside() throws Exception {
        test("col", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_audio() throws Exception {
        test("col", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_bgsound() throws Exception {
        test("col", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_base() throws Exception {
        test("col", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_basefont() throws Exception {
        test("col", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_bdi() throws Exception {
        test("col", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_bdo() throws Exception {
        test("col", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_big() throws Exception {
        test("col", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_blink() throws Exception {
        test("col", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_blockquote() throws Exception {
        test("col", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_body() throws Exception {
        test("col", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_b() throws Exception {
        test("col", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_br() throws Exception {
        test("col", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_button() throws Exception {
        test("col", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_canvas() throws Exception {
        test("col", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_caption() throws Exception {
        test("col", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_center() throws Exception {
        test("col", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_cite() throws Exception {
        test("col", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_code() throws Exception {
        test("col", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_command() throws Exception {
        test("col", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_datalist() throws Exception {
        test("col", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dfn() throws Exception {
        test("col", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dd() throws Exception {
        test("col", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_del() throws Exception {
        test("col", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_details() throws Exception {
        test("col", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dialog() throws Exception {
        test("col", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dir() throws Exception {
        test("col", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_div() throws Exception {
        test("col", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dl() throws Exception {
        test("col", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_dt() throws Exception {
        test("col", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_embed() throws Exception {
        test("col", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_em() throws Exception {
        test("col", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_fieldset() throws Exception {
        test("col", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_figcaption() throws Exception {
        test("col", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_figure() throws Exception {
        test("col", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_font() throws Exception {
        test("col", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_form() throws Exception {
        test("col", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_footer() throws Exception {
        test("col", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_frame() throws Exception {
        test("col", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_frameset() throws Exception {
        test("col", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_head() throws Exception {
        test("col", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_header() throws Exception {
        test("col", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h1() throws Exception {
        test("col", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h2() throws Exception {
        test("col", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h3() throws Exception {
        test("col", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h4() throws Exception {
        test("col", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h5() throws Exception {
        test("col", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_h6() throws Exception {
        test("col", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_hr() throws Exception {
        test("col", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_html() throws Exception {
        test("col", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_iframe() throws Exception {
        test("col", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_q() throws Exception {
        test("col", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_img() throws Exception {
        test("col", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_image() throws Exception {
        test("col", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_ins() throws Exception {
        test("col", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_isindex() throws Exception {
        test("col", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_i() throws Exception {
        test("col", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_kbd() throws Exception {
        test("col", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_keygen() throws Exception {
        test("col", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_label() throws Exception {
        test("col", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_layer() throws Exception {
        test("col", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_legend() throws Exception {
        test("col", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_listing() throws Exception {
        test("col", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_li() throws Exception {
        test("col", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_link() throws Exception {
        test("col", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_main() throws Exception {
        test("col", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_map() throws Exception {
        test("col", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_mark() throws Exception {
        test("col", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_marquee() throws Exception {
        test("col", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_menu() throws Exception {
        test("col", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_menuitem() throws Exception {
        test("col", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_meta() throws Exception {
        test("col", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_meter() throws Exception {
        test("col", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_multicol() throws Exception {
        test("col", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_nav() throws Exception {
        test("col", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_nextid() throws Exception {
        test("col", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_nobr() throws Exception {
        test("col", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_noembed() throws Exception {
        test("col", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_noframes() throws Exception {
        test("col", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_nolayer() throws Exception {
        test("col", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_noscript() throws Exception {
        test("col", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_object() throws Exception {
        test("col", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_ol() throws Exception {
        test("col", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_optgroup() throws Exception {
        test("col", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_option() throws Exception {
        test("col", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_output() throws Exception {
        test("col", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_p() throws Exception {
        test("col", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_param() throws Exception {
        test("col", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_plaintext() throws Exception {
        test("col", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_pre() throws Exception {
        test("col", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_progress() throws Exception {
        test("col", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_rp() throws Exception {
        test("col", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_rt() throws Exception {
        test("col", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_ruby() throws Exception {
        test("col", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_s() throws Exception {
        test("col", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_samp() throws Exception {
        test("col", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _col_script() throws Exception {
        test("col", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_section() throws Exception {
        test("col", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_select() throws Exception {
        test("col", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_small() throws Exception {
        test("col", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_source() throws Exception {
        test("col", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_span() throws Exception {
        test("col", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_strike() throws Exception {
        test("col", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_strong() throws Exception {
        test("col", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_style() throws Exception {
        test("col", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_sub() throws Exception {
        test("col", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_summary() throws Exception {
        test("col", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_sup() throws Exception {
        test("col", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_table() throws Exception {
        test("col", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_col() throws Exception {
        test("col", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_colgroup() throws Exception {
        test("col", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_tbody() throws Exception {
        test("col", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_td() throws Exception {
        test("col", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_th() throws Exception {
        test("col", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_tr() throws Exception {
        test("col", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_textarea() throws Exception {
        test("col", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_tfoot() throws Exception {
        test("col", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_thead() throws Exception {
        test("col", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_tt() throws Exception {
        test("col", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_time() throws Exception {
        test("col", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_title() throws Exception {
        test("col", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_track() throws Exception {
        test("col", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_u() throws Exception {
        test("col", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_ul() throws Exception {
        test("col", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_var() throws Exception {
        test("col", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_video() throws Exception {
        test("col", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_wbr() throws Exception {
        test("col", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_xmp() throws Exception {
        test("col", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_abbr() throws Exception {
        test("colgroup", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_acronym() throws Exception {
        test("colgroup", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_a() throws Exception {
        test("colgroup", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_address() throws Exception {
        test("colgroup", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_applet() throws Exception {
        test("colgroup", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_area() throws Exception {
        test("colgroup", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_article() throws Exception {
        test("colgroup", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_aside() throws Exception {
        test("colgroup", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_audio() throws Exception {
        test("colgroup", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_bgsound() throws Exception {
        test("colgroup", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_base() throws Exception {
        test("colgroup", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_basefont() throws Exception {
        test("colgroup", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_bdi() throws Exception {
        test("colgroup", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_bdo() throws Exception {
        test("colgroup", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_big() throws Exception {
        test("colgroup", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_blink() throws Exception {
        test("colgroup", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_blockquote() throws Exception {
        test("colgroup", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_body() throws Exception {
        test("colgroup", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_b() throws Exception {
        test("colgroup", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_br() throws Exception {
        test("colgroup", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_button() throws Exception {
        test("colgroup", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_canvas() throws Exception {
        test("colgroup", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_caption() throws Exception {
        test("colgroup", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_center() throws Exception {
        test("colgroup", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_cite() throws Exception {
        test("colgroup", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_code() throws Exception {
        test("colgroup", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_command() throws Exception {
        test("colgroup", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_datalist() throws Exception {
        test("colgroup", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dfn() throws Exception {
        test("colgroup", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dd() throws Exception {
        test("colgroup", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_del() throws Exception {
        test("colgroup", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_details() throws Exception {
        test("colgroup", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dialog() throws Exception {
        test("colgroup", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dir() throws Exception {
        test("colgroup", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_div() throws Exception {
        test("colgroup", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dl() throws Exception {
        test("colgroup", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_dt() throws Exception {
        test("colgroup", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_embed() throws Exception {
        test("colgroup", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_em() throws Exception {
        test("colgroup", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_fieldset() throws Exception {
        test("colgroup", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_figcaption() throws Exception {
        test("colgroup", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_figure() throws Exception {
        test("colgroup", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_font() throws Exception {
        test("colgroup", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_form() throws Exception {
        test("colgroup", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_footer() throws Exception {
        test("colgroup", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_frame() throws Exception {
        test("colgroup", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_frameset() throws Exception {
        test("colgroup", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_head() throws Exception {
        test("colgroup", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_header() throws Exception {
        test("colgroup", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h1() throws Exception {
        test("colgroup", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h2() throws Exception {
        test("colgroup", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h3() throws Exception {
        test("colgroup", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h4() throws Exception {
        test("colgroup", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h5() throws Exception {
        test("colgroup", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_h6() throws Exception {
        test("colgroup", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_hr() throws Exception {
        test("colgroup", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_html() throws Exception {
        test("colgroup", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_iframe() throws Exception {
        test("colgroup", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_q() throws Exception {
        test("colgroup", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_img() throws Exception {
        test("colgroup", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_image() throws Exception {
        test("colgroup", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_ins() throws Exception {
        test("colgroup", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_isindex() throws Exception {
        test("colgroup", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_i() throws Exception {
        test("colgroup", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_kbd() throws Exception {
        test("colgroup", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_keygen() throws Exception {
        test("colgroup", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_label() throws Exception {
        test("colgroup", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_layer() throws Exception {
        test("colgroup", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_legend() throws Exception {
        test("colgroup", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_listing() throws Exception {
        test("colgroup", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_li() throws Exception {
        test("colgroup", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_link() throws Exception {
        test("colgroup", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_main() throws Exception {
        test("colgroup", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_map() throws Exception {
        test("colgroup", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_mark() throws Exception {
        test("colgroup", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_marquee() throws Exception {
        test("colgroup", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_menu() throws Exception {
        test("colgroup", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_menuitem() throws Exception {
        test("colgroup", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_meta() throws Exception {
        test("colgroup", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_meter() throws Exception {
        test("colgroup", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_multicol() throws Exception {
        test("colgroup", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_nav() throws Exception {
        test("colgroup", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_nextid() throws Exception {
        test("colgroup", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_nobr() throws Exception {
        test("colgroup", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_noembed() throws Exception {
        test("colgroup", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_noframes() throws Exception {
        test("colgroup", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_nolayer() throws Exception {
        test("colgroup", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_noscript() throws Exception {
        test("colgroup", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_object() throws Exception {
        test("colgroup", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_ol() throws Exception {
        test("colgroup", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_optgroup() throws Exception {
        test("colgroup", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_option() throws Exception {
        test("colgroup", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_output() throws Exception {
        test("colgroup", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_p() throws Exception {
        test("colgroup", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_param() throws Exception {
        test("colgroup", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_plaintext() throws Exception {
        test("colgroup", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_pre() throws Exception {
        test("colgroup", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_progress() throws Exception {
        test("colgroup", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_rp() throws Exception {
        test("colgroup", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_rt() throws Exception {
        test("colgroup", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_ruby() throws Exception {
        test("colgroup", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_s() throws Exception {
        test("colgroup", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_samp() throws Exception {
        test("colgroup", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _colgroup_script() throws Exception {
        test("colgroup", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_section() throws Exception {
        test("colgroup", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_select() throws Exception {
        test("colgroup", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_small() throws Exception {
        test("colgroup", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_source() throws Exception {
        test("colgroup", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_span() throws Exception {
        test("colgroup", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_strike() throws Exception {
        test("colgroup", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_strong() throws Exception {
        test("colgroup", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_style() throws Exception {
        test("colgroup", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_sub() throws Exception {
        test("colgroup", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_summary() throws Exception {
        test("colgroup", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_sup() throws Exception {
        test("colgroup", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_table() throws Exception {
        test("colgroup", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_col() throws Exception {
        test("colgroup", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_colgroup() throws Exception {
        test("colgroup", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_tbody() throws Exception {
        test("colgroup", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_td() throws Exception {
        test("colgroup", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_th() throws Exception {
        test("colgroup", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_tr() throws Exception {
        test("colgroup", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_textarea() throws Exception {
        test("colgroup", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_tfoot() throws Exception {
        test("colgroup", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_thead() throws Exception {
        test("colgroup", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_tt() throws Exception {
        test("colgroup", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_time() throws Exception {
        test("colgroup", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_title() throws Exception {
        test("colgroup", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_track() throws Exception {
        test("colgroup", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_u() throws Exception {
        test("colgroup", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_ul() throws Exception {
        test("colgroup", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_var() throws Exception {
        test("colgroup", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_video() throws Exception {
        test("colgroup", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_wbr() throws Exception {
        test("colgroup", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_xmp() throws Exception {
        test("colgroup", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_abbr() throws Exception {
        test("tbody", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_acronym() throws Exception {
        test("tbody", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_a() throws Exception {
        test("tbody", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_address() throws Exception {
        test("tbody", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_applet() throws Exception {
        test("tbody", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_area() throws Exception {
        test("tbody", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_article() throws Exception {
        test("tbody", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_aside() throws Exception {
        test("tbody", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_audio() throws Exception {
        test("tbody", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_bgsound() throws Exception {
        test("tbody", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_base() throws Exception {
        test("tbody", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_basefont() throws Exception {
        test("tbody", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_bdi() throws Exception {
        test("tbody", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_bdo() throws Exception {
        test("tbody", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_big() throws Exception {
        test("tbody", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_blink() throws Exception {
        test("tbody", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_blockquote() throws Exception {
        test("tbody", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_body() throws Exception {
        test("tbody", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_b() throws Exception {
        test("tbody", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_br() throws Exception {
        test("tbody", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_button() throws Exception {
        test("tbody", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_canvas() throws Exception {
        test("tbody", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_caption() throws Exception {
        test("tbody", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_center() throws Exception {
        test("tbody", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_cite() throws Exception {
        test("tbody", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_code() throws Exception {
        test("tbody", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_command() throws Exception {
        test("tbody", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_datalist() throws Exception {
        test("tbody", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dfn() throws Exception {
        test("tbody", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dd() throws Exception {
        test("tbody", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_del() throws Exception {
        test("tbody", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_details() throws Exception {
        test("tbody", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dialog() throws Exception {
        test("tbody", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dir() throws Exception {
        test("tbody", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_div() throws Exception {
        test("tbody", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dl() throws Exception {
        test("tbody", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_dt() throws Exception {
        test("tbody", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_embed() throws Exception {
        test("tbody", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_em() throws Exception {
        test("tbody", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_fieldset() throws Exception {
        test("tbody", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_figcaption() throws Exception {
        test("tbody", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_figure() throws Exception {
        test("tbody", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_font() throws Exception {
        test("tbody", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_form() throws Exception {
        test("tbody", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_footer() throws Exception {
        test("tbody", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_frame() throws Exception {
        test("tbody", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_frameset() throws Exception {
        test("tbody", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_head() throws Exception {
        test("tbody", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_header() throws Exception {
        test("tbody", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h1() throws Exception {
        test("tbody", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h2() throws Exception {
        test("tbody", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h3() throws Exception {
        test("tbody", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h4() throws Exception {
        test("tbody", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h5() throws Exception {
        test("tbody", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_h6() throws Exception {
        test("tbody", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_hr() throws Exception {
        test("tbody", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_html() throws Exception {
        test("tbody", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_iframe() throws Exception {
        test("tbody", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_q() throws Exception {
        test("tbody", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_img() throws Exception {
        test("tbody", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_image() throws Exception {
        test("tbody", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_ins() throws Exception {
        test("tbody", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_isindex() throws Exception {
        test("tbody", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_i() throws Exception {
        test("tbody", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_kbd() throws Exception {
        test("tbody", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_keygen() throws Exception {
        test("tbody", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_label() throws Exception {
        test("tbody", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_layer() throws Exception {
        test("tbody", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_legend() throws Exception {
        test("tbody", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_listing() throws Exception {
        test("tbody", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_li() throws Exception {
        test("tbody", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_link() throws Exception {
        test("tbody", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_main() throws Exception {
        test("tbody", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_map() throws Exception {
        test("tbody", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_mark() throws Exception {
        test("tbody", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_marquee() throws Exception {
        test("tbody", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_menu() throws Exception {
        test("tbody", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_menuitem() throws Exception {
        test("tbody", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_meta() throws Exception {
        test("tbody", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_meter() throws Exception {
        test("tbody", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_multicol() throws Exception {
        test("tbody", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_nav() throws Exception {
        test("tbody", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_nextid() throws Exception {
        test("tbody", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_nobr() throws Exception {
        test("tbody", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_noembed() throws Exception {
        test("tbody", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_noframes() throws Exception {
        test("tbody", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_nolayer() throws Exception {
        test("tbody", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_noscript() throws Exception {
        test("tbody", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_object() throws Exception {
        test("tbody", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_ol() throws Exception {
        test("tbody", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_optgroup() throws Exception {
        test("tbody", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_option() throws Exception {
        test("tbody", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_output() throws Exception {
        test("tbody", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_p() throws Exception {
        test("tbody", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_param() throws Exception {
        test("tbody", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_plaintext() throws Exception {
        test("tbody", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_pre() throws Exception {
        test("tbody", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_progress() throws Exception {
        test("tbody", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_rp() throws Exception {
        test("tbody", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_rt() throws Exception {
        test("tbody", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_ruby() throws Exception {
        test("tbody", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_s() throws Exception {
        test("tbody", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_samp() throws Exception {
        test("tbody", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _tbody_script() throws Exception {
        test("tbody", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_section() throws Exception {
        test("tbody", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_select() throws Exception {
        test("tbody", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_small() throws Exception {
        test("tbody", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_source() throws Exception {
        test("tbody", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_span() throws Exception {
        test("tbody", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_strike() throws Exception {
        test("tbody", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_strong() throws Exception {
        test("tbody", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_style() throws Exception {
        test("tbody", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_sub() throws Exception {
        test("tbody", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_summary() throws Exception {
        test("tbody", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_sup() throws Exception {
        test("tbody", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_table() throws Exception {
        test("tbody", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_col() throws Exception {
        test("tbody", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_colgroup() throws Exception {
        test("tbody", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_tbody() throws Exception {
        test("tbody", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_td() throws Exception {
        test("tbody", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_th() throws Exception {
        test("tbody", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_tr() throws Exception {
        test("tbody", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_textarea() throws Exception {
        test("tbody", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_tfoot() throws Exception {
        test("tbody", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_thead() throws Exception {
        test("tbody", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_tt() throws Exception {
        test("tbody", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_time() throws Exception {
        test("tbody", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_title() throws Exception {
        test("tbody", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_track() throws Exception {
        test("tbody", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_u() throws Exception {
        test("tbody", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_ul() throws Exception {
        test("tbody", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_var() throws Exception {
        test("tbody", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_video() throws Exception {
        test("tbody", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_wbr() throws Exception {
        test("tbody", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_xmp() throws Exception {
        test("tbody", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_abbr() throws Exception {
        test("td", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_acronym() throws Exception {
        test("td", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_a() throws Exception {
        test("td", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_address() throws Exception {
        test("td", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_applet() throws Exception {
        test("td", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_area() throws Exception {
        test("td", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_article() throws Exception {
        test("td", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_aside() throws Exception {
        test("td", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_audio() throws Exception {
        test("td", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_bgsound() throws Exception {
        test("td", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_base() throws Exception {
        test("td", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_basefont() throws Exception {
        test("td", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_bdi() throws Exception {
        test("td", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_bdo() throws Exception {
        test("td", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_big() throws Exception {
        test("td", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_blink() throws Exception {
        test("td", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_blockquote() throws Exception {
        test("td", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_body() throws Exception {
        test("td", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_b() throws Exception {
        test("td", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_br() throws Exception {
        test("td", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_button() throws Exception {
        test("td", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_canvas() throws Exception {
        test("td", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_caption() throws Exception {
        test("td", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_center() throws Exception {
        test("td", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_cite() throws Exception {
        test("td", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_code() throws Exception {
        test("td", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_command() throws Exception {
        test("td", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_datalist() throws Exception {
        test("td", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dfn() throws Exception {
        test("td", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dd() throws Exception {
        test("td", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_del() throws Exception {
        test("td", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_details() throws Exception {
        test("td", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dialog() throws Exception {
        test("td", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dir() throws Exception {
        test("td", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_div() throws Exception {
        test("td", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dl() throws Exception {
        test("td", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_dt() throws Exception {
        test("td", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_embed() throws Exception {
        test("td", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_em() throws Exception {
        test("td", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_fieldset() throws Exception {
        test("td", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_figcaption() throws Exception {
        test("td", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_figure() throws Exception {
        test("td", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_font() throws Exception {
        test("td", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_form() throws Exception {
        test("td", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_footer() throws Exception {
        test("td", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_frame() throws Exception {
        test("td", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_frameset() throws Exception {
        test("td", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_head() throws Exception {
        test("td", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_header() throws Exception {
        test("td", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h1() throws Exception {
        test("td", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h2() throws Exception {
        test("td", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h3() throws Exception {
        test("td", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h4() throws Exception {
        test("td", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h5() throws Exception {
        test("td", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_h6() throws Exception {
        test("td", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_hr() throws Exception {
        test("td", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_html() throws Exception {
        test("td", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_iframe() throws Exception {
        test("td", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_q() throws Exception {
        test("td", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_img() throws Exception {
        test("td", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_image() throws Exception {
        test("td", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_ins() throws Exception {
        test("td", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_isindex() throws Exception {
        test("td", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_i() throws Exception {
        test("td", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_kbd() throws Exception {
        test("td", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_keygen() throws Exception {
        test("td", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_label() throws Exception {
        test("td", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_layer() throws Exception {
        test("td", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_legend() throws Exception {
        test("td", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_listing() throws Exception {
        test("td", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_li() throws Exception {
        test("td", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_link() throws Exception {
        test("td", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_main() throws Exception {
        test("td", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_map() throws Exception {
        test("td", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_mark() throws Exception {
        test("td", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_marquee() throws Exception {
        test("td", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_menu() throws Exception {
        test("td", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_menuitem() throws Exception {
        test("td", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_meta() throws Exception {
        test("td", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_meter() throws Exception {
        test("td", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_multicol() throws Exception {
        test("td", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_nav() throws Exception {
        test("td", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_nextid() throws Exception {
        test("td", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_nobr() throws Exception {
        test("td", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_noembed() throws Exception {
        test("td", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_noframes() throws Exception {
        test("td", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_nolayer() throws Exception {
        test("td", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_noscript() throws Exception {
        test("td", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_object() throws Exception {
        test("td", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_ol() throws Exception {
        test("td", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_optgroup() throws Exception {
        test("td", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_option() throws Exception {
        test("td", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_output() throws Exception {
        test("td", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_p() throws Exception {
        test("td", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_param() throws Exception {
        test("td", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_plaintext() throws Exception {
        test("td", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_pre() throws Exception {
        test("td", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_progress() throws Exception {
        test("td", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_rp() throws Exception {
        test("td", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_rt() throws Exception {
        test("td", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_ruby() throws Exception {
        test("td", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_s() throws Exception {
        test("td", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_samp() throws Exception {
        test("td", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _td_script() throws Exception {
        test("td", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_section() throws Exception {
        test("td", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_select() throws Exception {
        test("td", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_small() throws Exception {
        test("td", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_source() throws Exception {
        test("td", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_span() throws Exception {
        test("td", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_strike() throws Exception {
        test("td", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_strong() throws Exception {
        test("td", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_style() throws Exception {
        test("td", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_sub() throws Exception {
        test("td", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_summary() throws Exception {
        test("td", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_sup() throws Exception {
        test("td", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_table() throws Exception {
        test("td", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_col() throws Exception {
        test("td", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_colgroup() throws Exception {
        test("td", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_tbody() throws Exception {
        test("td", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_td() throws Exception {
        test("td", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_th() throws Exception {
        test("td", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_tr() throws Exception {
        test("td", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_textarea() throws Exception {
        test("td", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_tfoot() throws Exception {
        test("td", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_thead() throws Exception {
        test("td", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_tt() throws Exception {
        test("td", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_time() throws Exception {
        test("td", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_title() throws Exception {
        test("td", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_track() throws Exception {
        test("td", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_u() throws Exception {
        test("td", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_ul() throws Exception {
        test("td", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_var() throws Exception {
        test("td", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_video() throws Exception {
        test("td", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_wbr() throws Exception {
        test("td", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_xmp() throws Exception {
        test("td", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_abbr() throws Exception {
        test("th", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_acronym() throws Exception {
        test("th", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_a() throws Exception {
        test("th", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_address() throws Exception {
        test("th", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_applet() throws Exception {
        test("th", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_area() throws Exception {
        test("th", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_article() throws Exception {
        test("th", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_aside() throws Exception {
        test("th", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_audio() throws Exception {
        test("th", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_bgsound() throws Exception {
        test("th", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_base() throws Exception {
        test("th", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_basefont() throws Exception {
        test("th", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_bdi() throws Exception {
        test("th", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_bdo() throws Exception {
        test("th", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_big() throws Exception {
        test("th", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_blink() throws Exception {
        test("th", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_blockquote() throws Exception {
        test("th", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_body() throws Exception {
        test("th", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_b() throws Exception {
        test("th", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_br() throws Exception {
        test("th", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_button() throws Exception {
        test("th", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_canvas() throws Exception {
        test("th", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_caption() throws Exception {
        test("th", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_center() throws Exception {
        test("th", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_cite() throws Exception {
        test("th", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_code() throws Exception {
        test("th", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_command() throws Exception {
        test("th", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_datalist() throws Exception {
        test("th", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dfn() throws Exception {
        test("th", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dd() throws Exception {
        test("th", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_del() throws Exception {
        test("th", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_details() throws Exception {
        test("th", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dialog() throws Exception {
        test("th", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dir() throws Exception {
        test("th", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_div() throws Exception {
        test("th", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dl() throws Exception {
        test("th", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_dt() throws Exception {
        test("th", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_embed() throws Exception {
        test("th", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_em() throws Exception {
        test("th", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_fieldset() throws Exception {
        test("th", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_figcaption() throws Exception {
        test("th", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_figure() throws Exception {
        test("th", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_font() throws Exception {
        test("th", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_form() throws Exception {
        test("th", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_footer() throws Exception {
        test("th", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_frame() throws Exception {
        test("th", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_frameset() throws Exception {
        test("th", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_head() throws Exception {
        test("th", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_header() throws Exception {
        test("th", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h1() throws Exception {
        test("th", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h2() throws Exception {
        test("th", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h3() throws Exception {
        test("th", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h4() throws Exception {
        test("th", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h5() throws Exception {
        test("th", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_h6() throws Exception {
        test("th", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_hr() throws Exception {
        test("th", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_html() throws Exception {
        test("th", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_iframe() throws Exception {
        test("th", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_q() throws Exception {
        test("th", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_img() throws Exception {
        test("th", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_image() throws Exception {
        test("th", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_ins() throws Exception {
        test("th", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_isindex() throws Exception {
        test("th", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_i() throws Exception {
        test("th", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_kbd() throws Exception {
        test("th", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_keygen() throws Exception {
        test("th", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_label() throws Exception {
        test("th", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_layer() throws Exception {
        test("th", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_legend() throws Exception {
        test("th", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_listing() throws Exception {
        test("th", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_li() throws Exception {
        test("th", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_link() throws Exception {
        test("th", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_main() throws Exception {
        test("th", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_map() throws Exception {
        test("th", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_mark() throws Exception {
        test("th", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_marquee() throws Exception {
        test("th", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_menu() throws Exception {
        test("th", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_menuitem() throws Exception {
        test("th", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_meta() throws Exception {
        test("th", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_meter() throws Exception {
        test("th", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_multicol() throws Exception {
        test("th", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_nav() throws Exception {
        test("th", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_nextid() throws Exception {
        test("th", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_nobr() throws Exception {
        test("th", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_noembed() throws Exception {
        test("th", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_noframes() throws Exception {
        test("th", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_nolayer() throws Exception {
        test("th", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_noscript() throws Exception {
        test("th", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_object() throws Exception {
        test("th", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_ol() throws Exception {
        test("th", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_optgroup() throws Exception {
        test("th", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_option() throws Exception {
        test("th", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_output() throws Exception {
        test("th", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_p() throws Exception {
        test("th", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_param() throws Exception {
        test("th", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_plaintext() throws Exception {
        test("th", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_pre() throws Exception {
        test("th", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_progress() throws Exception {
        test("th", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_rp() throws Exception {
        test("th", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_rt() throws Exception {
        test("th", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_ruby() throws Exception {
        test("th", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_s() throws Exception {
        test("th", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_samp() throws Exception {
        test("th", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _th_script() throws Exception {
        test("th", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_section() throws Exception {
        test("th", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_select() throws Exception {
        test("th", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_small() throws Exception {
        test("th", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_source() throws Exception {
        test("th", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_span() throws Exception {
        test("th", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_strike() throws Exception {
        test("th", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_strong() throws Exception {
        test("th", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_style() throws Exception {
        test("th", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_sub() throws Exception {
        test("th", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_summary() throws Exception {
        test("th", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_sup() throws Exception {
        test("th", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_table() throws Exception {
        test("th", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_col() throws Exception {
        test("th", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_colgroup() throws Exception {
        test("th", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_tbody() throws Exception {
        test("th", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_td() throws Exception {
        test("th", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_th() throws Exception {
        test("th", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_tr() throws Exception {
        test("th", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_textarea() throws Exception {
        test("th", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_tfoot() throws Exception {
        test("th", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_thead() throws Exception {
        test("th", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_tt() throws Exception {
        test("th", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_time() throws Exception {
        test("th", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_title() throws Exception {
        test("th", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_track() throws Exception {
        test("th", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_u() throws Exception {
        test("th", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_ul() throws Exception {
        test("th", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_var() throws Exception {
        test("th", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_video() throws Exception {
        test("th", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_wbr() throws Exception {
        test("th", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_xmp() throws Exception {
        test("th", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_abbr() throws Exception {
        test("tr", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_acronym() throws Exception {
        test("tr", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_a() throws Exception {
        test("tr", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_address() throws Exception {
        test("tr", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_applet() throws Exception {
        test("tr", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_area() throws Exception {
        test("tr", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_article() throws Exception {
        test("tr", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_aside() throws Exception {
        test("tr", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_audio() throws Exception {
        test("tr", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_bgsound() throws Exception {
        test("tr", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_base() throws Exception {
        test("tr", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_basefont() throws Exception {
        test("tr", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_bdi() throws Exception {
        test("tr", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_bdo() throws Exception {
        test("tr", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_big() throws Exception {
        test("tr", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_blink() throws Exception {
        test("tr", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_blockquote() throws Exception {
        test("tr", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_body() throws Exception {
        test("tr", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_b() throws Exception {
        test("tr", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_br() throws Exception {
        test("tr", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_button() throws Exception {
        test("tr", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_canvas() throws Exception {
        test("tr", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_caption() throws Exception {
        test("tr", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_center() throws Exception {
        test("tr", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_cite() throws Exception {
        test("tr", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_code() throws Exception {
        test("tr", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_command() throws Exception {
        test("tr", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_datalist() throws Exception {
        test("tr", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dfn() throws Exception {
        test("tr", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dd() throws Exception {
        test("tr", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_del() throws Exception {
        test("tr", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_details() throws Exception {
        test("tr", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dialog() throws Exception {
        test("tr", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dir() throws Exception {
        test("tr", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_div() throws Exception {
        test("tr", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dl() throws Exception {
        test("tr", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_dt() throws Exception {
        test("tr", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_embed() throws Exception {
        test("tr", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_em() throws Exception {
        test("tr", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_fieldset() throws Exception {
        test("tr", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_figcaption() throws Exception {
        test("tr", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_figure() throws Exception {
        test("tr", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_font() throws Exception {
        test("tr", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_form() throws Exception {
        test("tr", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_footer() throws Exception {
        test("tr", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_frame() throws Exception {
        test("tr", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_frameset() throws Exception {
        test("tr", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_head() throws Exception {
        test("tr", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_header() throws Exception {
        test("tr", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h1() throws Exception {
        test("tr", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h2() throws Exception {
        test("tr", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h3() throws Exception {
        test("tr", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h4() throws Exception {
        test("tr", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h5() throws Exception {
        test("tr", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_h6() throws Exception {
        test("tr", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_hr() throws Exception {
        test("tr", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_html() throws Exception {
        test("tr", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_iframe() throws Exception {
        test("tr", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_q() throws Exception {
        test("tr", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_img() throws Exception {
        test("tr", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_image() throws Exception {
        test("tr", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_ins() throws Exception {
        test("tr", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_isindex() throws Exception {
        test("tr", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_i() throws Exception {
        test("tr", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_kbd() throws Exception {
        test("tr", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_keygen() throws Exception {
        test("tr", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_label() throws Exception {
        test("tr", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_layer() throws Exception {
        test("tr", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_legend() throws Exception {
        test("tr", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_listing() throws Exception {
        test("tr", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_li() throws Exception {
        test("tr", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_link() throws Exception {
        test("tr", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_main() throws Exception {
        test("tr", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_map() throws Exception {
        test("tr", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_mark() throws Exception {
        test("tr", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_marquee() throws Exception {
        test("tr", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_menu() throws Exception {
        test("tr", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_menuitem() throws Exception {
        test("tr", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_meta() throws Exception {
        test("tr", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_meter() throws Exception {
        test("tr", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_multicol() throws Exception {
        test("tr", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_nav() throws Exception {
        test("tr", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_nextid() throws Exception {
        test("tr", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_nobr() throws Exception {
        test("tr", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_noembed() throws Exception {
        test("tr", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_noframes() throws Exception {
        test("tr", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_nolayer() throws Exception {
        test("tr", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_noscript() throws Exception {
        test("tr", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_object() throws Exception {
        test("tr", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_ol() throws Exception {
        test("tr", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_optgroup() throws Exception {
        test("tr", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_option() throws Exception {
        test("tr", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_output() throws Exception {
        test("tr", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_p() throws Exception {
        test("tr", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_param() throws Exception {
        test("tr", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_plaintext() throws Exception {
        test("tr", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_pre() throws Exception {
        test("tr", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_progress() throws Exception {
        test("tr", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_rp() throws Exception {
        test("tr", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_rt() throws Exception {
        test("tr", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_ruby() throws Exception {
        test("tr", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_s() throws Exception {
        test("tr", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_samp() throws Exception {
        test("tr", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _tr_script() throws Exception {
        test("tr", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_section() throws Exception {
        test("tr", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_select() throws Exception {
        test("tr", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_small() throws Exception {
        test("tr", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_source() throws Exception {
        test("tr", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_span() throws Exception {
        test("tr", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_strike() throws Exception {
        test("tr", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_strong() throws Exception {
        test("tr", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_style() throws Exception {
        test("tr", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_sub() throws Exception {
        test("tr", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_summary() throws Exception {
        test("tr", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_sup() throws Exception {
        test("tr", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_table() throws Exception {
        test("tr", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_col() throws Exception {
        test("tr", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_colgroup() throws Exception {
        test("tr", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_tbody() throws Exception {
        test("tr", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_td() throws Exception {
        test("tr", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_th() throws Exception {
        test("tr", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_tr() throws Exception {
        test("tr", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_textarea() throws Exception {
        test("tr", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_tfoot() throws Exception {
        test("tr", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_thead() throws Exception {
        test("tr", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_tt() throws Exception {
        test("tr", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_time() throws Exception {
        test("tr", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_title() throws Exception {
        test("tr", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_track() throws Exception {
        test("tr", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_u() throws Exception {
        test("tr", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_ul() throws Exception {
        test("tr", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_var() throws Exception {
        test("tr", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_video() throws Exception {
        test("tr", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_wbr() throws Exception {
        test("tr", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_xmp() throws Exception {
        test("tr", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_abbr() throws Exception {
        test("tfoot", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_acronym() throws Exception {
        test("tfoot", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_a() throws Exception {
        test("tfoot", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_address() throws Exception {
        test("tfoot", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_applet() throws Exception {
        test("tfoot", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_area() throws Exception {
        test("tfoot", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_article() throws Exception {
        test("tfoot", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_aside() throws Exception {
        test("tfoot", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_audio() throws Exception {
        test("tfoot", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_bgsound() throws Exception {
        test("tfoot", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_base() throws Exception {
        test("tfoot", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_basefont() throws Exception {
        test("tfoot", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_bdi() throws Exception {
        test("tfoot", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_bdo() throws Exception {
        test("tfoot", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_big() throws Exception {
        test("tfoot", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_blink() throws Exception {
        test("tfoot", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_blockquote() throws Exception {
        test("tfoot", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_body() throws Exception {
        test("tfoot", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_b() throws Exception {
        test("tfoot", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_br() throws Exception {
        test("tfoot", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_button() throws Exception {
        test("tfoot", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_canvas() throws Exception {
        test("tfoot", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_caption() throws Exception {
        test("tfoot", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_center() throws Exception {
        test("tfoot", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_cite() throws Exception {
        test("tfoot", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_code() throws Exception {
        test("tfoot", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_command() throws Exception {
        test("tfoot", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_datalist() throws Exception {
        test("tfoot", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dfn() throws Exception {
        test("tfoot", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dd() throws Exception {
        test("tfoot", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_del() throws Exception {
        test("tfoot", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_details() throws Exception {
        test("tfoot", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dialog() throws Exception {
        test("tfoot", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dir() throws Exception {
        test("tfoot", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_div() throws Exception {
        test("tfoot", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dl() throws Exception {
        test("tfoot", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_dt() throws Exception {
        test("tfoot", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_embed() throws Exception {
        test("tfoot", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_em() throws Exception {
        test("tfoot", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_fieldset() throws Exception {
        test("tfoot", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_figcaption() throws Exception {
        test("tfoot", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_figure() throws Exception {
        test("tfoot", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_font() throws Exception {
        test("tfoot", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_form() throws Exception {
        test("tfoot", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_footer() throws Exception {
        test("tfoot", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_frame() throws Exception {
        test("tfoot", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_frameset() throws Exception {
        test("tfoot", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_head() throws Exception {
        test("tfoot", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_header() throws Exception {
        test("tfoot", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h1() throws Exception {
        test("tfoot", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h2() throws Exception {
        test("tfoot", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h3() throws Exception {
        test("tfoot", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h4() throws Exception {
        test("tfoot", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h5() throws Exception {
        test("tfoot", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_h6() throws Exception {
        test("tfoot", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_hr() throws Exception {
        test("tfoot", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_html() throws Exception {
        test("tfoot", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_iframe() throws Exception {
        test("tfoot", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_q() throws Exception {
        test("tfoot", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_img() throws Exception {
        test("tfoot", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_image() throws Exception {
        test("tfoot", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_ins() throws Exception {
        test("tfoot", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_isindex() throws Exception {
        test("tfoot", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_i() throws Exception {
        test("tfoot", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_kbd() throws Exception {
        test("tfoot", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_keygen() throws Exception {
        test("tfoot", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_label() throws Exception {
        test("tfoot", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_layer() throws Exception {
        test("tfoot", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_legend() throws Exception {
        test("tfoot", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_listing() throws Exception {
        test("tfoot", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_li() throws Exception {
        test("tfoot", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_link() throws Exception {
        test("tfoot", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_main() throws Exception {
        test("tfoot", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_map() throws Exception {
        test("tfoot", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_mark() throws Exception {
        test("tfoot", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_marquee() throws Exception {
        test("tfoot", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_menu() throws Exception {
        test("tfoot", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_menuitem() throws Exception {
        test("tfoot", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_meta() throws Exception {
        test("tfoot", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_meter() throws Exception {
        test("tfoot", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_multicol() throws Exception {
        test("tfoot", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_nav() throws Exception {
        test("tfoot", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_nextid() throws Exception {
        test("tfoot", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_nobr() throws Exception {
        test("tfoot", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_noembed() throws Exception {
        test("tfoot", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_noframes() throws Exception {
        test("tfoot", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_nolayer() throws Exception {
        test("tfoot", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_noscript() throws Exception {
        test("tfoot", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_object() throws Exception {
        test("tfoot", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_ol() throws Exception {
        test("tfoot", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_optgroup() throws Exception {
        test("tfoot", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_option() throws Exception {
        test("tfoot", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_output() throws Exception {
        test("tfoot", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_p() throws Exception {
        test("tfoot", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_param() throws Exception {
        test("tfoot", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_plaintext() throws Exception {
        test("tfoot", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_pre() throws Exception {
        test("tfoot", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_progress() throws Exception {
        test("tfoot", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_rp() throws Exception {
        test("tfoot", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_rt() throws Exception {
        test("tfoot", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_ruby() throws Exception {
        test("tfoot", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_s() throws Exception {
        test("tfoot", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_samp() throws Exception {
        test("tfoot", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _tfoot_script() throws Exception {
        test("tfoot", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_section() throws Exception {
        test("tfoot", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_select() throws Exception {
        test("tfoot", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_small() throws Exception {
        test("tfoot", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_source() throws Exception {
        test("tfoot", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_span() throws Exception {
        test("tfoot", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_strike() throws Exception {
        test("tfoot", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_strong() throws Exception {
        test("tfoot", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_style() throws Exception {
        test("tfoot", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_sub() throws Exception {
        test("tfoot", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_summary() throws Exception {
        test("tfoot", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_sup() throws Exception {
        test("tfoot", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_table() throws Exception {
        test("tfoot", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_col() throws Exception {
        test("tfoot", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_colgroup() throws Exception {
        test("tfoot", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_tbody() throws Exception {
        test("tfoot", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_td() throws Exception {
        test("tfoot", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_th() throws Exception {
        test("tfoot", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_tr() throws Exception {
        test("tfoot", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_textarea() throws Exception {
        test("tfoot", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_tfoot() throws Exception {
        test("tfoot", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_thead() throws Exception {
        test("tfoot", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_tt() throws Exception {
        test("tfoot", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_time() throws Exception {
        test("tfoot", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_title() throws Exception {
        test("tfoot", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_track() throws Exception {
        test("tfoot", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_u() throws Exception {
        test("tfoot", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_ul() throws Exception {
        test("tfoot", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_var() throws Exception {
        test("tfoot", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_video() throws Exception {
        test("tfoot", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_wbr() throws Exception {
        test("tfoot", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_xmp() throws Exception {
        test("tfoot", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_abbr() throws Exception {
        test("thead", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_acronym() throws Exception {
        test("thead", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_a() throws Exception {
        test("thead", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_address() throws Exception {
        test("thead", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_applet() throws Exception {
        test("thead", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_area() throws Exception {
        test("thead", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_article() throws Exception {
        test("thead", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_aside() throws Exception {
        test("thead", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_audio() throws Exception {
        test("thead", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_bgsound() throws Exception {
        test("thead", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_base() throws Exception {
        test("thead", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_basefont() throws Exception {
        test("thead", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_bdi() throws Exception {
        test("thead", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_bdo() throws Exception {
        test("thead", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_big() throws Exception {
        test("thead", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_blink() throws Exception {
        test("thead", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_blockquote() throws Exception {
        test("thead", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_body() throws Exception {
        test("thead", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_b() throws Exception {
        test("thead", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_br() throws Exception {
        test("thead", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_button() throws Exception {
        test("thead", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_canvas() throws Exception {
        test("thead", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_caption() throws Exception {
        test("thead", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_center() throws Exception {
        test("thead", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_cite() throws Exception {
        test("thead", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_code() throws Exception {
        test("thead", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_command() throws Exception {
        test("thead", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_datalist() throws Exception {
        test("thead", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dfn() throws Exception {
        test("thead", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dd() throws Exception {
        test("thead", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_del() throws Exception {
        test("thead", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_details() throws Exception {
        test("thead", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dialog() throws Exception {
        test("thead", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dir() throws Exception {
        test("thead", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_div() throws Exception {
        test("thead", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dl() throws Exception {
        test("thead", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_dt() throws Exception {
        test("thead", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_embed() throws Exception {
        test("thead", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_em() throws Exception {
        test("thead", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_fieldset() throws Exception {
        test("thead", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_figcaption() throws Exception {
        test("thead", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_figure() throws Exception {
        test("thead", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_font() throws Exception {
        test("thead", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_form() throws Exception {
        test("thead", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_footer() throws Exception {
        test("thead", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_frame() throws Exception {
        test("thead", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_frameset() throws Exception {
        test("thead", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_head() throws Exception {
        test("thead", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_header() throws Exception {
        test("thead", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h1() throws Exception {
        test("thead", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h2() throws Exception {
        test("thead", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h3() throws Exception {
        test("thead", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h4() throws Exception {
        test("thead", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h5() throws Exception {
        test("thead", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_h6() throws Exception {
        test("thead", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_hr() throws Exception {
        test("thead", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_html() throws Exception {
        test("thead", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_iframe() throws Exception {
        test("thead", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_q() throws Exception {
        test("thead", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_img() throws Exception {
        test("thead", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_image() throws Exception {
        test("thead", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_ins() throws Exception {
        test("thead", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_isindex() throws Exception {
        test("thead", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_i() throws Exception {
        test("thead", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_kbd() throws Exception {
        test("thead", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_keygen() throws Exception {
        test("thead", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_label() throws Exception {
        test("thead", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_layer() throws Exception {
        test("thead", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_legend() throws Exception {
        test("thead", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_listing() throws Exception {
        test("thead", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_li() throws Exception {
        test("thead", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_link() throws Exception {
        test("thead", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_main() throws Exception {
        test("thead", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_map() throws Exception {
        test("thead", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_mark() throws Exception {
        test("thead", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_marquee() throws Exception {
        test("thead", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_menu() throws Exception {
        test("thead", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_menuitem() throws Exception {
        test("thead", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_meta() throws Exception {
        test("thead", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_meter() throws Exception {
        test("thead", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_multicol() throws Exception {
        test("thead", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_nav() throws Exception {
        test("thead", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_nextid() throws Exception {
        test("thead", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_nobr() throws Exception {
        test("thead", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_noembed() throws Exception {
        test("thead", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_noframes() throws Exception {
        test("thead", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_nolayer() throws Exception {
        test("thead", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_noscript() throws Exception {
        test("thead", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_object() throws Exception {
        test("thead", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_ol() throws Exception {
        test("thead", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_optgroup() throws Exception {
        test("thead", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_option() throws Exception {
        test("thead", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_output() throws Exception {
        test("thead", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_p() throws Exception {
        test("thead", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_param() throws Exception {
        test("thead", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_plaintext() throws Exception {
        test("thead", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_pre() throws Exception {
        test("thead", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_progress() throws Exception {
        test("thead", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_rp() throws Exception {
        test("thead", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_rt() throws Exception {
        test("thead", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_ruby() throws Exception {
        test("thead", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_s() throws Exception {
        test("thead", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_samp() throws Exception {
        test("thead", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented
    public void _thead_script() throws Exception {
        test("thead", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_section() throws Exception {
        test("thead", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_select() throws Exception {
        test("thead", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_small() throws Exception {
        test("thead", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_source() throws Exception {
        test("thead", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_span() throws Exception {
        test("thead", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_strike() throws Exception {
        test("thead", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_strong() throws Exception {
        test("thead", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_style() throws Exception {
        test("thead", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_sub() throws Exception {
        test("thead", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_summary() throws Exception {
        test("thead", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_sup() throws Exception {
        test("thead", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_table() throws Exception {
        test("thead", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_col() throws Exception {
        test("thead", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_colgroup() throws Exception {
        test("thead", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_tbody() throws Exception {
        test("thead", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_td() throws Exception {
        test("thead", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_th() throws Exception {
        test("thead", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_tr() throws Exception {
        test("thead", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_textarea() throws Exception {
        test("thead", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_tfoot() throws Exception {
        test("thead", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_thead() throws Exception {
        test("thead", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_tt() throws Exception {
        test("thead", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_time() throws Exception {
        test("thead", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_title() throws Exception {
        test("thead", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_track() throws Exception {
        test("thead", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_u() throws Exception {
        test("thead", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_ul() throws Exception {
        test("thead", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_var() throws Exception {
        test("thead", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_video() throws Exception {
        test("thead", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_wbr() throws Exception {
        test("thead", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_xmp() throws Exception {
        test("thead", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _tt_area() throws Exception {
        test("tt", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_bgsound() throws Exception {
        test("tt", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_base() throws Exception {
        test("tt", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_basefont() throws Exception {
        test("tt", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_br() throws Exception {
        test("tt", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _tt_command() throws Exception {
        test("tt", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _tt_embed() throws Exception {
        test("tt", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_hr() throws Exception {
        test("tt", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _tt_img() throws Exception {
        test("tt", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _tt_image() throws Exception {
        test("tt", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_keygen() throws Exception {
        test("tt", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_link() throws Exception {
        test("tt", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_meta() throws Exception {
        test("tt", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _tt_param() throws Exception {
        test("tt", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _tt_source() throws Exception {
        test("tt", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _tt_track() throws Exception {
        test("tt", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _tt_wbr() throws Exception {
        test("tt", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _time_area() throws Exception {
        test("time", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_bgsound() throws Exception {
        test("time", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_base() throws Exception {
        test("time", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_basefont() throws Exception {
        test("time", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_br() throws Exception {
        test("time", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _time_command() throws Exception {
        test("time", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_embed() throws Exception {
        test("time", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_hr() throws Exception {
        test("time", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_img() throws Exception {
        test("time", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _time_image() throws Exception {
        test("time", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_keygen() throws Exception {
        test("time", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_link() throws Exception {
        test("time", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_meta() throws Exception {
        test("time", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _time_param() throws Exception {
        test("time", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _time_source() throws Exception {
        test("time", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _time_track() throws Exception {
        test("time", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_wbr() throws Exception {
        test("time", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_abbr() throws Exception {
        test("track", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_acronym() throws Exception {
        test("track", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_a() throws Exception {
        test("track", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_address() throws Exception {
        test("track", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_applet() throws Exception {
        test("track", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_area() throws Exception {
        test("track", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_article() throws Exception {
        test("track", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_aside() throws Exception {
        test("track", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_audio() throws Exception {
        test("track", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_bgsound() throws Exception {
        test("track", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_base() throws Exception {
        test("track", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_basefont() throws Exception {
        test("track", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_bdi() throws Exception {
        test("track", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_bdo() throws Exception {
        test("track", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_big() throws Exception {
        test("track", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_blink() throws Exception {
        test("track", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_blockquote() throws Exception {
        test("track", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_body() throws Exception {
        test("track", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_b() throws Exception {
        test("track", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_br() throws Exception {
        test("track", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_button() throws Exception {
        test("track", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_canvas() throws Exception {
        test("track", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_caption() throws Exception {
        test("track", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_center() throws Exception {
        test("track", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_cite() throws Exception {
        test("track", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_code() throws Exception {
        test("track", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_command() throws Exception {
        test("track", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_datalist() throws Exception {
        test("track", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dfn() throws Exception {
        test("track", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dd() throws Exception {
        test("track", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_del() throws Exception {
        test("track", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_details() throws Exception {
        test("track", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dialog() throws Exception {
        test("track", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dir() throws Exception {
        test("track", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_div() throws Exception {
        test("track", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dl() throws Exception {
        test("track", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_dt() throws Exception {
        test("track", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_embed() throws Exception {
        test("track", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_em() throws Exception {
        test("track", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_fieldset() throws Exception {
        test("track", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_figcaption() throws Exception {
        test("track", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_figure() throws Exception {
        test("track", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_font() throws Exception {
        test("track", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_form() throws Exception {
        test("track", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_footer() throws Exception {
        test("track", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_frame() throws Exception {
        test("track", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_frameset() throws Exception {
        test("track", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_head() throws Exception {
        test("track", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_header() throws Exception {
        test("track", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h1() throws Exception {
        test("track", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h2() throws Exception {
        test("track", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h3() throws Exception {
        test("track", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h4() throws Exception {
        test("track", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h5() throws Exception {
        test("track", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_h6() throws Exception {
        test("track", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_hr() throws Exception {
        test("track", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_html() throws Exception {
        test("track", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_iframe() throws Exception {
        test("track", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_q() throws Exception {
        test("track", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_img() throws Exception {
        test("track", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_image() throws Exception {
        test("track", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_ins() throws Exception {
        test("track", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_isindex() throws Exception {
        test("track", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_i() throws Exception {
        test("track", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_kbd() throws Exception {
        test("track", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_keygen() throws Exception {
        test("track", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_label() throws Exception {
        test("track", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_layer() throws Exception {
        test("track", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_legend() throws Exception {
        test("track", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_listing() throws Exception {
        test("track", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_li() throws Exception {
        test("track", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_link() throws Exception {
        test("track", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_main() throws Exception {
        test("track", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_map() throws Exception {
        test("track", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_mark() throws Exception {
        test("track", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_marquee() throws Exception {
        test("track", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_menu() throws Exception {
        test("track", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_menuitem() throws Exception {
        test("track", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_meta() throws Exception {
        test("track", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_meter() throws Exception {
        test("track", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_multicol() throws Exception {
        test("track", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_nav() throws Exception {
        test("track", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_nextid() throws Exception {
        test("track", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_nobr() throws Exception {
        test("track", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_noembed() throws Exception {
        test("track", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_noframes() throws Exception {
        test("track", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_nolayer() throws Exception {
        test("track", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_noscript() throws Exception {
        test("track", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_object() throws Exception {
        test("track", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_ol() throws Exception {
        test("track", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_optgroup() throws Exception {
        test("track", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_option() throws Exception {
        test("track", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_output() throws Exception {
        test("track", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_p() throws Exception {
        test("track", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_param() throws Exception {
        test("track", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_plaintext() throws Exception {
        test("track", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_pre() throws Exception {
        test("track", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_progress() throws Exception {
        test("track", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_rp() throws Exception {
        test("track", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_rt() throws Exception {
        test("track", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_ruby() throws Exception {
        test("track", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_s() throws Exception {
        test("track", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_samp() throws Exception {
        test("track", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_script() throws Exception {
        test("track", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_section() throws Exception {
        test("track", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_select() throws Exception {
        test("track", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_small() throws Exception {
        test("track", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_source() throws Exception {
        test("track", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_span() throws Exception {
        test("track", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_strike() throws Exception {
        test("track", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_strong() throws Exception {
        test("track", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_style() throws Exception {
        test("track", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_sub() throws Exception {
        test("track", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_summary() throws Exception {
        test("track", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_sup() throws Exception {
        test("track", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_table() throws Exception {
        test("track", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_col() throws Exception {
        test("track", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_colgroup() throws Exception {
        test("track", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_tbody() throws Exception {
        test("track", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_td() throws Exception {
        test("track", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_th() throws Exception {
        test("track", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_tr() throws Exception {
        test("track", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_textarea() throws Exception {
        test("track", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_tfoot() throws Exception {
        test("track", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _track_thead() throws Exception {
        test("track", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_tt() throws Exception {
        test("track", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_time() throws Exception {
        test("track", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _track_title() throws Exception {
        test("track", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_track() throws Exception {
        test("track", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_u() throws Exception {
        test("track", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_ul() throws Exception {
        test("track", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_var() throws Exception {
        test("track", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_video() throws Exception {
        test("track", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_wbr() throws Exception {
        test("track", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_xmp() throws Exception {
        test("track", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _u_area() throws Exception {
        test("u", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_bgsound() throws Exception {
        test("u", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_base() throws Exception {
        test("u", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_basefont() throws Exception {
        test("u", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_br() throws Exception {
        test("u", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _u_command() throws Exception {
        test("u", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _u_embed() throws Exception {
        test("u", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_hr() throws Exception {
        test("u", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _u_img() throws Exception {
        test("u", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _u_image() throws Exception {
        test("u", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_keygen() throws Exception {
        test("u", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_link() throws Exception {
        test("u", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_meta() throws Exception {
        test("u", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _u_param() throws Exception {
        test("u", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _u_source() throws Exception {
        test("u", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _u_track() throws Exception {
        test("u", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _u_wbr() throws Exception {
        test("u", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_area() throws Exception {
        test("ul", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_bgsound() throws Exception {
        test("ul", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_base() throws Exception {
        test("ul", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_basefont() throws Exception {
        test("ul", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_br() throws Exception {
        test("ul", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _ul_command() throws Exception {
        test("ul", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ul_embed() throws Exception {
        test("ul", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_hr() throws Exception {
        test("ul", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _ul_img() throws Exception {
        test("ul", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _ul_image() throws Exception {
        test("ul", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_keygen() throws Exception {
        test("ul", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_link() throws Exception {
        test("ul", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_meta() throws Exception {
        test("ul", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_param() throws Exception {
        test("ul", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_source() throws Exception {
        test("ul", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_track() throws Exception {
        test("ul", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _ul_wbr() throws Exception {
        test("ul", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _var_area() throws Exception {
        test("var", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_bgsound() throws Exception {
        test("var", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_base() throws Exception {
        test("var", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_basefont() throws Exception {
        test("var", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_br() throws Exception {
        test("var", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "1",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE11, FF38 })
    public void _var_command() throws Exception {
        test("var", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _var_embed() throws Exception {
        test("var", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_hr() throws Exception {
        test("var", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _var_img() throws Exception {
        test("var", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _var_image() throws Exception {
        test("var", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_keygen() throws Exception {
        test("var", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_link() throws Exception {
        test("var", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_meta() throws Exception {
        test("var", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _var_param() throws Exception {
        test("var", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _var_source() throws Exception {
        test("var", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _var_track() throws Exception {
        test("var", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _var_wbr() throws Exception {
        test("var", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _video_area() throws Exception {
        test("video", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_bgsound() throws Exception {
        test("video", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_base() throws Exception {
        test("video", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_basefont() throws Exception {
        test("video", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_br() throws Exception {
        test("video", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(CHROME = "2",
            IE11 = "2",
            IE8 = "0",
            FF31 = "1")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _video_command() throws Exception {
        test("video", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_embed() throws Exception {
        test("video", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_hr() throws Exception {
        test("video", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_img() throws Exception {
        test("video", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _video_image() throws Exception {
        test("video", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_keygen() throws Exception {
        test("video", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_link() throws Exception {
        test("video", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_meta() throws Exception {
        test("video", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _video_param() throws Exception {
        test("video", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _video_source() throws Exception {
        test("video", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _video_track() throws Exception {
        test("video", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_wbr() throws Exception {
        test("video", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_abbr() throws Exception {
        test("wbr", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_acronym() throws Exception {
        test("wbr", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_a() throws Exception {
        test("wbr", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_address() throws Exception {
        test("wbr", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_applet() throws Exception {
        test("wbr", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_area() throws Exception {
        test("wbr", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_article() throws Exception {
        test("wbr", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_aside() throws Exception {
        test("wbr", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_audio() throws Exception {
        test("wbr", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_bgsound() throws Exception {
        test("wbr", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_base() throws Exception {
        test("wbr", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_basefont() throws Exception {
        test("wbr", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_bdi() throws Exception {
        test("wbr", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_bdo() throws Exception {
        test("wbr", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_big() throws Exception {
        test("wbr", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_blink() throws Exception {
        test("wbr", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_blockquote() throws Exception {
        test("wbr", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_body() throws Exception {
        test("wbr", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_b() throws Exception {
        test("wbr", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_br() throws Exception {
        test("wbr", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_button() throws Exception {
        test("wbr", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_canvas() throws Exception {
        test("wbr", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_caption() throws Exception {
        test("wbr", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_center() throws Exception {
        test("wbr", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_cite() throws Exception {
        test("wbr", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_code() throws Exception {
        test("wbr", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_command() throws Exception {
        test("wbr", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_datalist() throws Exception {
        test("wbr", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dfn() throws Exception {
        test("wbr", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dd() throws Exception {
        test("wbr", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_del() throws Exception {
        test("wbr", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_details() throws Exception {
        test("wbr", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dialog() throws Exception {
        test("wbr", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dir() throws Exception {
        test("wbr", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_div() throws Exception {
        test("wbr", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dl() throws Exception {
        test("wbr", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_dt() throws Exception {
        test("wbr", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_embed() throws Exception {
        test("wbr", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_em() throws Exception {
        test("wbr", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_fieldset() throws Exception {
        test("wbr", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_figcaption() throws Exception {
        test("wbr", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_figure() throws Exception {
        test("wbr", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_font() throws Exception {
        test("wbr", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_form() throws Exception {
        test("wbr", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_footer() throws Exception {
        test("wbr", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_frame() throws Exception {
        test("wbr", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_frameset() throws Exception {
        test("wbr", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_head() throws Exception {
        test("wbr", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_header() throws Exception {
        test("wbr", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h1() throws Exception {
        test("wbr", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h2() throws Exception {
        test("wbr", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h3() throws Exception {
        test("wbr", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h4() throws Exception {
        test("wbr", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h5() throws Exception {
        test("wbr", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_h6() throws Exception {
        test("wbr", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_hr() throws Exception {
        test("wbr", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_html() throws Exception {
        test("wbr", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_iframe() throws Exception {
        test("wbr", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_q() throws Exception {
        test("wbr", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_img() throws Exception {
        test("wbr", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_image() throws Exception {
        test("wbr", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_ins() throws Exception {
        test("wbr", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_isindex() throws Exception {
        test("wbr", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_i() throws Exception {
        test("wbr", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_kbd() throws Exception {
        test("wbr", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_keygen() throws Exception {
        test("wbr", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_label() throws Exception {
        test("wbr", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_layer() throws Exception {
        test("wbr", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_legend() throws Exception {
        test("wbr", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_listing() throws Exception {
        test("wbr", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_li() throws Exception {
        test("wbr", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_link() throws Exception {
        test("wbr", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_main() throws Exception {
        test("wbr", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_map() throws Exception {
        test("wbr", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_mark() throws Exception {
        test("wbr", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_marquee() throws Exception {
        test("wbr", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_menu() throws Exception {
        test("wbr", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_menuitem() throws Exception {
        test("wbr", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_meta() throws Exception {
        test("wbr", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_meter() throws Exception {
        test("wbr", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_multicol() throws Exception {
        test("wbr", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_nav() throws Exception {
        test("wbr", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_nextid() throws Exception {
        test("wbr", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_nobr() throws Exception {
        test("wbr", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_noembed() throws Exception {
        test("wbr", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_noframes() throws Exception {
        test("wbr", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_nolayer() throws Exception {
        test("wbr", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_noscript() throws Exception {
        test("wbr", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_object() throws Exception {
        test("wbr", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_ol() throws Exception {
        test("wbr", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_optgroup() throws Exception {
        test("wbr", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_option() throws Exception {
        test("wbr", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_output() throws Exception {
        test("wbr", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_p() throws Exception {
        test("wbr", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_param() throws Exception {
        test("wbr", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_plaintext() throws Exception {
        test("wbr", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_pre() throws Exception {
        test("wbr", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_progress() throws Exception {
        test("wbr", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_rp() throws Exception {
        test("wbr", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_rt() throws Exception {
        test("wbr", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_ruby() throws Exception {
        test("wbr", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_s() throws Exception {
        test("wbr", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_samp() throws Exception {
        test("wbr", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _wbr_script() throws Exception {
        test("wbr", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_section() throws Exception {
        test("wbr", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_select() throws Exception {
        test("wbr", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_small() throws Exception {
        test("wbr", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_source() throws Exception {
        test("wbr", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_span() throws Exception {
        test("wbr", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_strike() throws Exception {
        test("wbr", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_strong() throws Exception {
        test("wbr", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_style() throws Exception {
        test("wbr", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_sub() throws Exception {
        test("wbr", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_summary() throws Exception {
        test("wbr", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_sup() throws Exception {
        test("wbr", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_table() throws Exception {
        test("wbr", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_col() throws Exception {
        test("wbr", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_colgroup() throws Exception {
        test("wbr", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_tbody() throws Exception {
        test("wbr", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_td() throws Exception {
        test("wbr", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_th() throws Exception {
        test("wbr", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_tr() throws Exception {
        test("wbr", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_textarea() throws Exception {
        test("wbr", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_tfoot() throws Exception {
        test("wbr", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_thead() throws Exception {
        test("wbr", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_tt() throws Exception {
        test("wbr", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_time() throws Exception {
        test("wbr", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_title() throws Exception {
        test("wbr", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_track() throws Exception {
        test("wbr", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_u() throws Exception {
        test("wbr", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_ul() throws Exception {
        test("wbr", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_var() throws Exception {
        test("wbr", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_video() throws Exception {
        test("wbr", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_wbr() throws Exception {
        test("wbr", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_xmp() throws Exception {
        test("wbr", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _a_isindex() throws Exception {
        test("a", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _abbr_isindex() throws Exception {
        test("abbr", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _acronym_isindex() throws Exception {
        test("acronym", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _address_isindex() throws Exception {
        test("address", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _applet_isindex() throws Exception {
        test("applet", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _article_isindex() throws Exception {
        test("article", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _aside_isindex() throws Exception {
        test("aside", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _audio_isindex() throws Exception {
        test("audio", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _b_isindex() throws Exception {
        test("b", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _bdi_isindex() throws Exception {
        test("bdi", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _bdo_isindex() throws Exception {
        test("bdo", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _big_isindex() throws Exception {
        test("big", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _blink_isindex() throws Exception {
        test("blink", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _blockquote_isindex() throws Exception {
        test("blockquote", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _button_isindex() throws Exception {
        test("button", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _canvas_isindex() throws Exception {
        test("canvas", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _center_isindex() throws Exception {
        test("center", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _cite_isindex() throws Exception {
        test("cite", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _code_isindex() throws Exception {
        test("code", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _datalist_isindex() throws Exception {
        test("datalist", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _dd_isindex() throws Exception {
        test("dd", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _del_isindex() throws Exception {
        test("del", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _details_isindex() throws Exception {
        test("details", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _dfn_isindex() throws Exception {
        test("dfn", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _dialog_isindex() throws Exception {
        test("dialog", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _dir_isindex() throws Exception {
        test("dir", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _div_isindex() throws Exception {
        test("div", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _dl_isindex() throws Exception {
        test("dl", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _dt_isindex() throws Exception {
        test("dt", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _em_isindex() throws Exception {
        test("em", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _fieldset_isindex() throws Exception {
        test("fieldset", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _figcaption_isindex() throws Exception {
        test("figcaption", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _figure_isindex() throws Exception {
        test("figure", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _font_isindex() throws Exception {
        test("font", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _footer_isindex() throws Exception {
        test("footer", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h1_isindex() throws Exception {
        test("h1", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h2_isindex() throws Exception {
        test("h2", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h3_isindex() throws Exception {
        test("h3", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h4_isindex() throws Exception {
        test("h4", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h5_isindex() throws Exception {
        test("h5", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _h6_isindex() throws Exception {
        test("h6", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _header_isindex() throws Exception {
        test("header", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _i_isindex() throws Exception {
        test("i", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _ins_isindex() throws Exception {
        test("ins", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_a() throws Exception {
        test("isindex", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_abbr() throws Exception {
        test("isindex", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_acronym() throws Exception {
        test("isindex", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_address() throws Exception {
        test("isindex", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_applet() throws Exception {
        test("isindex", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_article() throws Exception {
        test("isindex", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_aside() throws Exception {
        test("isindex", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_audio() throws Exception {
        test("isindex", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_b() throws Exception {
        test("isindex", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_bdi() throws Exception {
        test("isindex", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_bdo() throws Exception {
        test("isindex", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_big() throws Exception {
        test("isindex", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_blink() throws Exception {
        test("isindex", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_blockquote() throws Exception {
        test("isindex", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_body() throws Exception {
        test("isindex", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_button() throws Exception {
        test("isindex", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_canvas() throws Exception {
        test("isindex", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_caption() throws Exception {
        test("isindex", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_center() throws Exception {
        test("isindex", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_cite() throws Exception {
        test("isindex", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_code() throws Exception {
        test("isindex", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_col() throws Exception {
        test("isindex", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_colgroup() throws Exception {
        test("isindex", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_datalist() throws Exception {
        test("isindex", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dd() throws Exception {
        test("isindex", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_del() throws Exception {
        test("isindex", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_details() throws Exception {
        test("isindex", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dfn() throws Exception {
        test("isindex", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dialog() throws Exception {
        test("isindex", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dir() throws Exception {
        test("isindex", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_div() throws Exception {
        test("isindex", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dl() throws Exception {
        test("isindex", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_dt() throws Exception {
        test("isindex", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_em() throws Exception {
        test("isindex", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_fieldset() throws Exception {
        test("isindex", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_figcaption() throws Exception {
        test("isindex", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_figure() throws Exception {
        test("isindex", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_font() throws Exception {
        test("isindex", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_footer() throws Exception {
        test("isindex", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_form() throws Exception {
        test("isindex", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_frame() throws Exception {
        test("isindex", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_frameset() throws Exception {
        test("isindex", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h1() throws Exception {
        test("isindex", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h2() throws Exception {
        test("isindex", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h3() throws Exception {
        test("isindex", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h4() throws Exception {
        test("isindex", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h5() throws Exception {
        test("isindex", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_h6() throws Exception {
        test("isindex", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_head() throws Exception {
        test("isindex", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_header() throws Exception {
        test("isindex", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_html() throws Exception {
        test("isindex", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_i() throws Exception {
        test("isindex", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_iframe() throws Exception {
        test("isindex", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_ins() throws Exception {
        test("isindex", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_isindex() throws Exception {
        test("isindex", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_kbd() throws Exception {
        test("isindex", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_label() throws Exception {
        test("isindex", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_layer() throws Exception {
        test("isindex", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_legend() throws Exception {
        test("isindex", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_li() throws Exception {
        test("isindex", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_listing() throws Exception {
        test("isindex", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_main() throws Exception {
        test("isindex", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_map() throws Exception {
        test("isindex", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_mark() throws Exception {
        test("isindex", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_marquee() throws Exception {
        test("isindex", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_menu() throws Exception {
        test("isindex", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_menuitem() throws Exception {
        test("isindex", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_meter() throws Exception {
        test("isindex", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_multicol() throws Exception {
        test("isindex", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_nav() throws Exception {
        test("isindex", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_nextid() throws Exception {
        test("isindex", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_nobr() throws Exception {
        test("isindex", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_noembed() throws Exception {
        test("isindex", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_noframes() throws Exception {
        test("isindex", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_nolayer() throws Exception {
        test("isindex", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_noscript() throws Exception {
        test("isindex", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_object() throws Exception {
        test("isindex", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_ol() throws Exception {
        test("isindex", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_optgroup() throws Exception {
        test("isindex", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_option() throws Exception {
        test("isindex", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_output() throws Exception {
        test("isindex", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_p() throws Exception {
        test("isindex", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_plaintext() throws Exception {
        test("isindex", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_pre() throws Exception {
        test("isindex", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_progress() throws Exception {
        test("isindex", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_q() throws Exception {
        test("isindex", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_rp() throws Exception {
        test("isindex", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_rt() throws Exception {
        test("isindex", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_ruby() throws Exception {
        test("isindex", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_s() throws Exception {
        test("isindex", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_samp() throws Exception {
        test("isindex", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented
    public void _isindex_script() throws Exception {
        test("isindex", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_section() throws Exception {
        test("isindex", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_select() throws Exception {
        test("isindex", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_small() throws Exception {
        test("isindex", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_span() throws Exception {
        test("isindex", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_strike() throws Exception {
        test("isindex", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_strong() throws Exception {
        test("isindex", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_style() throws Exception {
        test("isindex", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_sub() throws Exception {
        test("isindex", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_summary() throws Exception {
        test("isindex", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_sup() throws Exception {
        test("isindex", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_table() throws Exception {
        test("isindex", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_tbody() throws Exception {
        test("isindex", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_td() throws Exception {
        test("isindex", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_textarea() throws Exception {
        test("isindex", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_tfoot() throws Exception {
        test("isindex", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_th() throws Exception {
        test("isindex", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_thead() throws Exception {
        test("isindex", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_time() throws Exception {
        test("isindex", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ CHROME })
    public void _isindex_title() throws Exception {
        test("isindex", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_tr() throws Exception {
        test("isindex", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_tt() throws Exception {
        test("isindex", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_u() throws Exception {
        test("isindex", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_ul() throws Exception {
        test("isindex", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_var() throws Exception {
        test("isindex", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_video() throws Exception {
        test("isindex", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE = "0",
            FF31 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_xmp() throws Exception {
        test("isindex", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _kbd_isindex() throws Exception {
        test("kbd", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _label_isindex() throws Exception {
        test("label", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _layer_isindex() throws Exception {
        test("layer", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _legend_isindex() throws Exception {
        test("legend", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _li_isindex() throws Exception {
        test("li", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "2",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _listing_isindex() throws Exception {
        test("listing", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _main_isindex() throws Exception {
        test("main", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _map_isindex() throws Exception {
        test("map", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _mark_isindex() throws Exception {
        test("mark", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _marquee_isindex() throws Exception {
        test("marquee", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _menu_isindex() throws Exception {
        test("menu", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _menuitem_isindex() throws Exception {
        test("menuitem", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _meter_isindex() throws Exception {
        test("meter", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _multicol_isindex() throws Exception {
        test("multicol", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _nav_isindex() throws Exception {
        test("nav", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_isindex() throws Exception {
        test("nextid", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ IE11, FF })
    public void _nobr_isindex() throws Exception {
        test("nobr", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _nolayer_isindex() throws Exception {
        test("nolayer", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "null",
            FF = "2")
    @NotYetImplemented({ FF, IE })
    public void _object_isindex() throws Exception {
        test("object", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF = "2")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _ol_isindex() throws Exception {
        test("ol", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented
    public void _optgroup_isindex() throws Exception {
        test("optgroup", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF = "2")
    @NotYetImplemented
    public void _option_isindex() throws Exception {
        test("option", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _output_isindex() throws Exception {
        test("output", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "0",
            FF31 = "0")
    @NotYetImplemented({ FF31, IE11 })
    public void _p_isindex() throws Exception {
        test("p", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "2",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _pre_isindex() throws Exception {
        test("pre", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _progress_isindex() throws Exception {
        test("progress", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _q_isindex() throws Exception {
        test("q", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31, IE8 })
    public void _rp_isindex() throws Exception {
        test("rp", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31, IE8 })
    public void _rt_isindex() throws Exception {
        test("rt", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE11 })
    public void _ruby_isindex() throws Exception {
        test("ruby", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE11 })
    public void _s_isindex() throws Exception {
        test("s", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _samp_isindex() throws Exception {
        test("samp", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _section_isindex() throws Exception {
        test("section", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _small_isindex() throws Exception {
        test("small", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE11 })
    public void _span_isindex() throws Exception {
        test("span", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _strike_isindex() throws Exception {
        test("strike", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _strong_isindex() throws Exception {
        test("strong", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _sub_isindex() throws Exception {
        test("sub", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _summary_isindex() throws Exception {
        test("summary", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _sup_isindex() throws Exception {
        test("sup", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _time_isindex() throws Exception {
        test("time", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _tt_isindex() throws Exception {
        test("tt", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _u_isindex() throws Exception {
        test("u", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE11 })
    public void _ul_isindex() throws Exception {
        test("ul", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            FF31 = "2")
    @NotYetImplemented({ IE11, FF31 })
    public void _var_isindex() throws Exception {
        test("var", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "2",
            IE8 = "0",
            FF31 = "2")
    @NotYetImplemented({ FF31, IE })
    public void _video_isindex() throws Exception {
        test("video", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _a_body() throws Exception {
        test("a", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _a_head() throws Exception {
        test("a", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _a_html() throws Exception {
        test("a", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _a_object() throws Exception {
        test("a", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _a_title() throws Exception {
        test("a", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _abbr_body() throws Exception {
        test("abbr", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _abbr_head() throws Exception {
        test("abbr", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _abbr_html() throws Exception {
        test("abbr", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _abbr_object() throws Exception {
        test("abbr", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _abbr_title() throws Exception {
        test("abbr", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _acronym_body() throws Exception {
        test("acronym", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _acronym_head() throws Exception {
        test("acronym", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _acronym_html() throws Exception {
        test("acronym", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _acronym_object() throws Exception {
        test("acronym", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _acronym_title() throws Exception {
        test("acronym", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _address_body() throws Exception {
        test("address", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _address_head() throws Exception {
        test("address", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _address_html() throws Exception {
        test("address", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _address_object() throws Exception {
        test("address", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_title() throws Exception {
        test("address", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_a() throws Exception {
        test("applet", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_abbr() throws Exception {
        test("applet", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_acronym() throws Exception {
        test("applet", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_address() throws Exception {
        test("applet", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_applet() throws Exception {
        test("applet", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_article() throws Exception {
        test("applet", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_aside() throws Exception {
        test("applet", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_audio() throws Exception {
        test("applet", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_b() throws Exception {
        test("applet", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_bdi() throws Exception {
        test("applet", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_bdo() throws Exception {
        test("applet", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_big() throws Exception {
        test("applet", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_blink() throws Exception {
        test("applet", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_blockquote() throws Exception {
        test("applet", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_body() throws Exception {
        test("applet", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_button() throws Exception {
        test("applet", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_canvas() throws Exception {
        test("applet", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_caption() throws Exception {
        test("applet", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_center() throws Exception {
        test("applet", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_cite() throws Exception {
        test("applet", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_code() throws Exception {
        test("applet", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_col() throws Exception {
        test("applet", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_colgroup() throws Exception {
        test("applet", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_datalist() throws Exception {
        test("applet", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dd() throws Exception {
        test("applet", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_del() throws Exception {
        test("applet", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_details() throws Exception {
        test("applet", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dfn() throws Exception {
        test("applet", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dialog() throws Exception {
        test("applet", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dir() throws Exception {
        test("applet", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_div() throws Exception {
        test("applet", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dl() throws Exception {
        test("applet", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_dt() throws Exception {
        test("applet", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_em() throws Exception {
        test("applet", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_fieldset() throws Exception {
        test("applet", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_figcaption() throws Exception {
        test("applet", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_figure() throws Exception {
        test("applet", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_font() throws Exception {
        test("applet", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_footer() throws Exception {
        test("applet", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_form() throws Exception {
        test("applet", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_frame() throws Exception {
        test("applet", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_frameset() throws Exception {
        test("applet", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h1() throws Exception {
        test("applet", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h2() throws Exception {
        test("applet", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h3() throws Exception {
        test("applet", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h4() throws Exception {
        test("applet", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h5() throws Exception {
        test("applet", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_h6() throws Exception {
        test("applet", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_head() throws Exception {
        test("applet", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_header() throws Exception {
        test("applet", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_html() throws Exception {
        test("applet", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_i() throws Exception {
        test("applet", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_iframe() throws Exception {
        test("applet", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_ins() throws Exception {
        test("applet", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_kbd() throws Exception {
        test("applet", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_label() throws Exception {
        test("applet", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_layer() throws Exception {
        test("applet", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_legend() throws Exception {
        test("applet", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_li() throws Exception {
        test("applet", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_listing() throws Exception {
        test("applet", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_main() throws Exception {
        test("applet", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_map() throws Exception {
        test("applet", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_mark() throws Exception {
        test("applet", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_marquee() throws Exception {
        test("applet", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_menu() throws Exception {
        test("applet", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_menuitem() throws Exception {
        test("applet", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_meter() throws Exception {
        test("applet", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_multicol() throws Exception {
        test("applet", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_nav() throws Exception {
        test("applet", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_nextid() throws Exception {
        test("applet", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_nobr() throws Exception {
        test("applet", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_noembed() throws Exception {
        test("applet", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_noframes() throws Exception {
        test("applet", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_nolayer() throws Exception {
        test("applet", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_noscript() throws Exception {
        test("applet", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_object() throws Exception {
        test("applet", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_ol() throws Exception {
        test("applet", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_optgroup() throws Exception {
        test("applet", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_option() throws Exception {
        test("applet", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_output() throws Exception {
        test("applet", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_p() throws Exception {
        test("applet", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_plaintext() throws Exception {
        test("applet", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_pre() throws Exception {
        test("applet", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_progress() throws Exception {
        test("applet", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_q() throws Exception {
        test("applet", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_rp() throws Exception {
        test("applet", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_rt() throws Exception {
        test("applet", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_ruby() throws Exception {
        test("applet", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_s() throws Exception {
        test("applet", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_samp() throws Exception {
        test("applet", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _applet_script() throws Exception {
        test("applet", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_section() throws Exception {
        test("applet", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_select() throws Exception {
        test("applet", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_small() throws Exception {
        test("applet", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_span() throws Exception {
        test("applet", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_strike() throws Exception {
        test("applet", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_strong() throws Exception {
        test("applet", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_style() throws Exception {
        test("applet", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_sub() throws Exception {
        test("applet", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_summary() throws Exception {
        test("applet", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_sup() throws Exception {
        test("applet", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_table() throws Exception {
        test("applet", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_tbody() throws Exception {
        test("applet", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_td() throws Exception {
        test("applet", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_textarea() throws Exception {
        test("applet", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_tfoot() throws Exception {
        test("applet", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_th() throws Exception {
        test("applet", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_thead() throws Exception {
        test("applet", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_time() throws Exception {
        test("applet", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _applet_title() throws Exception {
        test("applet", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _applet_tr() throws Exception {
        test("applet", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_tt() throws Exception {
        test("applet", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_u() throws Exception {
        test("applet", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_ul() throws Exception {
        test("applet", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_var() throws Exception {
        test("applet", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_video() throws Exception {
        test("applet", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_xmp() throws Exception {
        test("applet", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_a() throws Exception {
        test("article", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_abbr() throws Exception {
        test("article", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_acronym() throws Exception {
        test("article", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_address() throws Exception {
        test("article", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_applet() throws Exception {
        test("article", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_article() throws Exception {
        test("article", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_aside() throws Exception {
        test("article", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_audio() throws Exception {
        test("article", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_b() throws Exception {
        test("article", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_bdi() throws Exception {
        test("article", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_bdo() throws Exception {
        test("article", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_big() throws Exception {
        test("article", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_blink() throws Exception {
        test("article", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_blockquote() throws Exception {
        test("article", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_body() throws Exception {
        test("article", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_button() throws Exception {
        test("article", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_canvas() throws Exception {
        test("article", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_caption() throws Exception {
        test("article", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_center() throws Exception {
        test("article", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_cite() throws Exception {
        test("article", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_code() throws Exception {
        test("article", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_col() throws Exception {
        test("article", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_colgroup() throws Exception {
        test("article", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_datalist() throws Exception {
        test("article", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dd() throws Exception {
        test("article", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_del() throws Exception {
        test("article", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_details() throws Exception {
        test("article", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dfn() throws Exception {
        test("article", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dialog() throws Exception {
        test("article", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dir() throws Exception {
        test("article", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_div() throws Exception {
        test("article", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dl() throws Exception {
        test("article", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_dt() throws Exception {
        test("article", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_em() throws Exception {
        test("article", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_fieldset() throws Exception {
        test("article", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_figcaption() throws Exception {
        test("article", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_figure() throws Exception {
        test("article", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_font() throws Exception {
        test("article", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_footer() throws Exception {
        test("article", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_form() throws Exception {
        test("article", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_frame() throws Exception {
        test("article", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_frameset() throws Exception {
        test("article", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h1() throws Exception {
        test("article", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h2() throws Exception {
        test("article", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h3() throws Exception {
        test("article", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h4() throws Exception {
        test("article", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h5() throws Exception {
        test("article", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_h6() throws Exception {
        test("article", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_head() throws Exception {
        test("article", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_header() throws Exception {
        test("article", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_html() throws Exception {
        test("article", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_i() throws Exception {
        test("article", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_iframe() throws Exception {
        test("article", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_ins() throws Exception {
        test("article", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_kbd() throws Exception {
        test("article", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_label() throws Exception {
        test("article", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_layer() throws Exception {
        test("article", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_legend() throws Exception {
        test("article", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_li() throws Exception {
        test("article", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_listing() throws Exception {
        test("article", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_main() throws Exception {
        test("article", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_map() throws Exception {
        test("article", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_mark() throws Exception {
        test("article", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_marquee() throws Exception {
        test("article", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_menu() throws Exception {
        test("article", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_menuitem() throws Exception {
        test("article", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_meter() throws Exception {
        test("article", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_multicol() throws Exception {
        test("article", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_nav() throws Exception {
        test("article", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _article_nextid() throws Exception {
        test("article", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_nobr() throws Exception {
        test("article", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_noembed() throws Exception {
        test("article", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_noframes() throws Exception {
        test("article", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_nolayer() throws Exception {
        test("article", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_noscript() throws Exception {
        test("article", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_object() throws Exception {
        test("article", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_ol() throws Exception {
        test("article", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_optgroup() throws Exception {
        test("article", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_option() throws Exception {
        test("article", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_output() throws Exception {
        test("article", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_p() throws Exception {
        test("article", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_plaintext() throws Exception {
        test("article", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_pre() throws Exception {
        test("article", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_progress() throws Exception {
        test("article", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_q() throws Exception {
        test("article", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_rp() throws Exception {
        test("article", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_rt() throws Exception {
        test("article", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_ruby() throws Exception {
        test("article", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_s() throws Exception {
        test("article", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_samp() throws Exception {
        test("article", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _article_script() throws Exception {
        test("article", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_section() throws Exception {
        test("article", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_select() throws Exception {
        test("article", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_small() throws Exception {
        test("article", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_span() throws Exception {
        test("article", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_strike() throws Exception {
        test("article", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_strong() throws Exception {
        test("article", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_style() throws Exception {
        test("article", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_sub() throws Exception {
        test("article", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_summary() throws Exception {
        test("article", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_sup() throws Exception {
        test("article", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_table() throws Exception {
        test("article", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_tbody() throws Exception {
        test("article", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_td() throws Exception {
        test("article", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_textarea() throws Exception {
        test("article", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_tfoot() throws Exception {
        test("article", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_th() throws Exception {
        test("article", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_thead() throws Exception {
        test("article", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_time() throws Exception {
        test("article", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _article_title() throws Exception {
        test("article", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _article_tr() throws Exception {
        test("article", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_tt() throws Exception {
        test("article", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_u() throws Exception {
        test("article", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_ul() throws Exception {
        test("article", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_var() throws Exception {
        test("article", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_video() throws Exception {
        test("article", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_xmp() throws Exception {
        test("article", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_a() throws Exception {
        test("aside", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_abbr() throws Exception {
        test("aside", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_acronym() throws Exception {
        test("aside", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_address() throws Exception {
        test("aside", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_applet() throws Exception {
        test("aside", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_article() throws Exception {
        test("aside", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_aside() throws Exception {
        test("aside", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_audio() throws Exception {
        test("aside", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_b() throws Exception {
        test("aside", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_bdi() throws Exception {
        test("aside", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_bdo() throws Exception {
        test("aside", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_big() throws Exception {
        test("aside", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_blink() throws Exception {
        test("aside", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_blockquote() throws Exception {
        test("aside", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_body() throws Exception {
        test("aside", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_button() throws Exception {
        test("aside", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_canvas() throws Exception {
        test("aside", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_caption() throws Exception {
        test("aside", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_center() throws Exception {
        test("aside", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_cite() throws Exception {
        test("aside", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_code() throws Exception {
        test("aside", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_col() throws Exception {
        test("aside", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_colgroup() throws Exception {
        test("aside", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_datalist() throws Exception {
        test("aside", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dd() throws Exception {
        test("aside", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_del() throws Exception {
        test("aside", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_details() throws Exception {
        test("aside", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dfn() throws Exception {
        test("aside", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dialog() throws Exception {
        test("aside", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dir() throws Exception {
        test("aside", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_div() throws Exception {
        test("aside", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dl() throws Exception {
        test("aside", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_dt() throws Exception {
        test("aside", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_em() throws Exception {
        test("aside", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_fieldset() throws Exception {
        test("aside", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_figcaption() throws Exception {
        test("aside", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_figure() throws Exception {
        test("aside", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_font() throws Exception {
        test("aside", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_footer() throws Exception {
        test("aside", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_form() throws Exception {
        test("aside", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_frame() throws Exception {
        test("aside", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_frameset() throws Exception {
        test("aside", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h1() throws Exception {
        test("aside", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h2() throws Exception {
        test("aside", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h3() throws Exception {
        test("aside", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h4() throws Exception {
        test("aside", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h5() throws Exception {
        test("aside", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_h6() throws Exception {
        test("aside", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_head() throws Exception {
        test("aside", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_header() throws Exception {
        test("aside", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_html() throws Exception {
        test("aside", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_i() throws Exception {
        test("aside", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_iframe() throws Exception {
        test("aside", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_ins() throws Exception {
        test("aside", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_kbd() throws Exception {
        test("aside", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_label() throws Exception {
        test("aside", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_layer() throws Exception {
        test("aside", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_legend() throws Exception {
        test("aside", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_li() throws Exception {
        test("aside", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_listing() throws Exception {
        test("aside", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_main() throws Exception {
        test("aside", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_map() throws Exception {
        test("aside", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_mark() throws Exception {
        test("aside", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_marquee() throws Exception {
        test("aside", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_menu() throws Exception {
        test("aside", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_menuitem() throws Exception {
        test("aside", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_meter() throws Exception {
        test("aside", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_multicol() throws Exception {
        test("aside", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_nav() throws Exception {
        test("aside", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_nextid() throws Exception {
        test("aside", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_nobr() throws Exception {
        test("aside", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_noembed() throws Exception {
        test("aside", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_noframes() throws Exception {
        test("aside", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_nolayer() throws Exception {
        test("aside", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_noscript() throws Exception {
        test("aside", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_object() throws Exception {
        test("aside", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_ol() throws Exception {
        test("aside", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_optgroup() throws Exception {
        test("aside", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_option() throws Exception {
        test("aside", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_output() throws Exception {
        test("aside", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_p() throws Exception {
        test("aside", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_plaintext() throws Exception {
        test("aside", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_pre() throws Exception {
        test("aside", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_progress() throws Exception {
        test("aside", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_q() throws Exception {
        test("aside", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_rp() throws Exception {
        test("aside", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_rt() throws Exception {
        test("aside", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_ruby() throws Exception {
        test("aside", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_s() throws Exception {
        test("aside", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_samp() throws Exception {
        test("aside", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _aside_script() throws Exception {
        test("aside", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_section() throws Exception {
        test("aside", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_select() throws Exception {
        test("aside", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_small() throws Exception {
        test("aside", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_span() throws Exception {
        test("aside", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_strike() throws Exception {
        test("aside", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_strong() throws Exception {
        test("aside", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_style() throws Exception {
        test("aside", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_sub() throws Exception {
        test("aside", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_summary() throws Exception {
        test("aside", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_sup() throws Exception {
        test("aside", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_table() throws Exception {
        test("aside", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_tbody() throws Exception {
        test("aside", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_td() throws Exception {
        test("aside", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_textarea() throws Exception {
        test("aside", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_tfoot() throws Exception {
        test("aside", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_th() throws Exception {
        test("aside", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_thead() throws Exception {
        test("aside", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_time() throws Exception {
        test("aside", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _aside_title() throws Exception {
        test("aside", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _aside_tr() throws Exception {
        test("aside", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_tt() throws Exception {
        test("aside", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_u() throws Exception {
        test("aside", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_ul() throws Exception {
        test("aside", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_var() throws Exception {
        test("aside", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_video() throws Exception {
        test("aside", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_xmp() throws Exception {
        test("aside", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_a() throws Exception {
        test("audio", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_abbr() throws Exception {
        test("audio", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_acronym() throws Exception {
        test("audio", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_address() throws Exception {
        test("audio", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_applet() throws Exception {
        test("audio", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_article() throws Exception {
        test("audio", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_aside() throws Exception {
        test("audio", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_audio() throws Exception {
        test("audio", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_b() throws Exception {
        test("audio", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_bdi() throws Exception {
        test("audio", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_bdo() throws Exception {
        test("audio", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_big() throws Exception {
        test("audio", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_blink() throws Exception {
        test("audio", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_blockquote() throws Exception {
        test("audio", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_body() throws Exception {
        test("audio", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_button() throws Exception {
        test("audio", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_canvas() throws Exception {
        test("audio", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_caption() throws Exception {
        test("audio", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_center() throws Exception {
        test("audio", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_cite() throws Exception {
        test("audio", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_code() throws Exception {
        test("audio", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_col() throws Exception {
        test("audio", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_colgroup() throws Exception {
        test("audio", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_datalist() throws Exception {
        test("audio", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dd() throws Exception {
        test("audio", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_del() throws Exception {
        test("audio", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_details() throws Exception {
        test("audio", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dfn() throws Exception {
        test("audio", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dialog() throws Exception {
        test("audio", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dir() throws Exception {
        test("audio", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_div() throws Exception {
        test("audio", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dl() throws Exception {
        test("audio", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_dt() throws Exception {
        test("audio", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_em() throws Exception {
        test("audio", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_fieldset() throws Exception {
        test("audio", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_figcaption() throws Exception {
        test("audio", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_figure() throws Exception {
        test("audio", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_font() throws Exception {
        test("audio", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_footer() throws Exception {
        test("audio", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_form() throws Exception {
        test("audio", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_frame() throws Exception {
        test("audio", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_frameset() throws Exception {
        test("audio", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h1() throws Exception {
        test("audio", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h2() throws Exception {
        test("audio", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h3() throws Exception {
        test("audio", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h4() throws Exception {
        test("audio", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h5() throws Exception {
        test("audio", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_h6() throws Exception {
        test("audio", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_head() throws Exception {
        test("audio", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_header() throws Exception {
        test("audio", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_html() throws Exception {
        test("audio", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_i() throws Exception {
        test("audio", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_iframe() throws Exception {
        test("audio", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_ins() throws Exception {
        test("audio", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_kbd() throws Exception {
        test("audio", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_label() throws Exception {
        test("audio", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_layer() throws Exception {
        test("audio", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_legend() throws Exception {
        test("audio", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_li() throws Exception {
        test("audio", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_listing() throws Exception {
        test("audio", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_main() throws Exception {
        test("audio", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_map() throws Exception {
        test("audio", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_mark() throws Exception {
        test("audio", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_marquee() throws Exception {
        test("audio", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_menu() throws Exception {
        test("audio", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_menuitem() throws Exception {
        test("audio", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_meter() throws Exception {
        test("audio", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_multicol() throws Exception {
        test("audio", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_nav() throws Exception {
        test("audio", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_nextid() throws Exception {
        test("audio", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_nobr() throws Exception {
        test("audio", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_noembed() throws Exception {
        test("audio", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_noframes() throws Exception {
        test("audio", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_nolayer() throws Exception {
        test("audio", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_noscript() throws Exception {
        test("audio", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_object() throws Exception {
        test("audio", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_ol() throws Exception {
        test("audio", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_optgroup() throws Exception {
        test("audio", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_option() throws Exception {
        test("audio", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_output() throws Exception {
        test("audio", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_p() throws Exception {
        test("audio", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_plaintext() throws Exception {
        test("audio", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_pre() throws Exception {
        test("audio", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_progress() throws Exception {
        test("audio", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_q() throws Exception {
        test("audio", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_rp() throws Exception {
        test("audio", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_rt() throws Exception {
        test("audio", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_ruby() throws Exception {
        test("audio", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_s() throws Exception {
        test("audio", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_samp() throws Exception {
        test("audio", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _audio_script() throws Exception {
        test("audio", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_section() throws Exception {
        test("audio", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_select() throws Exception {
        test("audio", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_small() throws Exception {
        test("audio", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_span() throws Exception {
        test("audio", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_strike() throws Exception {
        test("audio", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_strong() throws Exception {
        test("audio", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_style() throws Exception {
        test("audio", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_sub() throws Exception {
        test("audio", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_summary() throws Exception {
        test("audio", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_sup() throws Exception {
        test("audio", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_table() throws Exception {
        test("audio", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_tbody() throws Exception {
        test("audio", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_td() throws Exception {
        test("audio", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_textarea() throws Exception {
        test("audio", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_tfoot() throws Exception {
        test("audio", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_th() throws Exception {
        test("audio", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_thead() throws Exception {
        test("audio", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_time() throws Exception {
        test("audio", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _audio_title() throws Exception {
        test("audio", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _audio_tr() throws Exception {
        test("audio", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_tt() throws Exception {
        test("audio", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_u() throws Exception {
        test("audio", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_ul() throws Exception {
        test("audio", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_var() throws Exception {
        test("audio", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_video() throws Exception {
        test("audio", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_xmp() throws Exception {
        test("audio", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _b_body() throws Exception {
        test("b", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _b_head() throws Exception {
        test("b", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _b_html() throws Exception {
        test("b", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _b_object() throws Exception {
        test("b", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _b_title() throws Exception {
        test("b", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_a() throws Exception {
        test("bdi", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_abbr() throws Exception {
        test("bdi", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_acronym() throws Exception {
        test("bdi", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_address() throws Exception {
        test("bdi", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_applet() throws Exception {
        test("bdi", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_article() throws Exception {
        test("bdi", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_aside() throws Exception {
        test("bdi", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_audio() throws Exception {
        test("bdi", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_b() throws Exception {
        test("bdi", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_bdi() throws Exception {
        test("bdi", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_bdo() throws Exception {
        test("bdi", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_big() throws Exception {
        test("bdi", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_blink() throws Exception {
        test("bdi", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_blockquote() throws Exception {
        test("bdi", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_body() throws Exception {
        test("bdi", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_button() throws Exception {
        test("bdi", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_canvas() throws Exception {
        test("bdi", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_caption() throws Exception {
        test("bdi", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_center() throws Exception {
        test("bdi", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_cite() throws Exception {
        test("bdi", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_code() throws Exception {
        test("bdi", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_col() throws Exception {
        test("bdi", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_colgroup() throws Exception {
        test("bdi", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_datalist() throws Exception {
        test("bdi", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dd() throws Exception {
        test("bdi", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_del() throws Exception {
        test("bdi", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_details() throws Exception {
        test("bdi", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dfn() throws Exception {
        test("bdi", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dialog() throws Exception {
        test("bdi", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dir() throws Exception {
        test("bdi", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_div() throws Exception {
        test("bdi", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dl() throws Exception {
        test("bdi", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_dt() throws Exception {
        test("bdi", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_em() throws Exception {
        test("bdi", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_fieldset() throws Exception {
        test("bdi", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_figcaption() throws Exception {
        test("bdi", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_figure() throws Exception {
        test("bdi", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_font() throws Exception {
        test("bdi", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_footer() throws Exception {
        test("bdi", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_form() throws Exception {
        test("bdi", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_frame() throws Exception {
        test("bdi", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_frameset() throws Exception {
        test("bdi", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h1() throws Exception {
        test("bdi", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h2() throws Exception {
        test("bdi", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h3() throws Exception {
        test("bdi", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h4() throws Exception {
        test("bdi", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h5() throws Exception {
        test("bdi", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_h6() throws Exception {
        test("bdi", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_head() throws Exception {
        test("bdi", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_header() throws Exception {
        test("bdi", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_html() throws Exception {
        test("bdi", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_i() throws Exception {
        test("bdi", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_iframe() throws Exception {
        test("bdi", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_ins() throws Exception {
        test("bdi", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_kbd() throws Exception {
        test("bdi", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_label() throws Exception {
        test("bdi", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_layer() throws Exception {
        test("bdi", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_legend() throws Exception {
        test("bdi", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_li() throws Exception {
        test("bdi", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_listing() throws Exception {
        test("bdi", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_main() throws Exception {
        test("bdi", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_map() throws Exception {
        test("bdi", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_mark() throws Exception {
        test("bdi", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_marquee() throws Exception {
        test("bdi", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_menu() throws Exception {
        test("bdi", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_menuitem() throws Exception {
        test("bdi", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_meter() throws Exception {
        test("bdi", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_multicol() throws Exception {
        test("bdi", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_nav() throws Exception {
        test("bdi", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_nextid() throws Exception {
        test("bdi", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_nobr() throws Exception {
        test("bdi", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_noembed() throws Exception {
        test("bdi", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_noframes() throws Exception {
        test("bdi", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_nolayer() throws Exception {
        test("bdi", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_noscript() throws Exception {
        test("bdi", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_object() throws Exception {
        test("bdi", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_ol() throws Exception {
        test("bdi", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_optgroup() throws Exception {
        test("bdi", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_option() throws Exception {
        test("bdi", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_output() throws Exception {
        test("bdi", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_p() throws Exception {
        test("bdi", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_plaintext() throws Exception {
        test("bdi", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_pre() throws Exception {
        test("bdi", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_progress() throws Exception {
        test("bdi", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_q() throws Exception {
        test("bdi", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_rp() throws Exception {
        test("bdi", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_rt() throws Exception {
        test("bdi", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_ruby() throws Exception {
        test("bdi", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_s() throws Exception {
        test("bdi", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_samp() throws Exception {
        test("bdi", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _bdi_script() throws Exception {
        test("bdi", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_section() throws Exception {
        test("bdi", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_select() throws Exception {
        test("bdi", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_small() throws Exception {
        test("bdi", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_span() throws Exception {
        test("bdi", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_strike() throws Exception {
        test("bdi", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_strong() throws Exception {
        test("bdi", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_style() throws Exception {
        test("bdi", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_sub() throws Exception {
        test("bdi", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_summary() throws Exception {
        test("bdi", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_sup() throws Exception {
        test("bdi", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_table() throws Exception {
        test("bdi", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_tbody() throws Exception {
        test("bdi", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_td() throws Exception {
        test("bdi", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_textarea() throws Exception {
        test("bdi", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_tfoot() throws Exception {
        test("bdi", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_th() throws Exception {
        test("bdi", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_thead() throws Exception {
        test("bdi", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_time() throws Exception {
        test("bdi", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdi_title() throws Exception {
        test("bdi", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdi_tr() throws Exception {
        test("bdi", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_tt() throws Exception {
        test("bdi", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_u() throws Exception {
        test("bdi", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_ul() throws Exception {
        test("bdi", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_var() throws Exception {
        test("bdi", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_video() throws Exception {
        test("bdi", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_xmp() throws Exception {
        test("bdi", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdo_body() throws Exception {
        test("bdo", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdo_head() throws Exception {
        test("bdo", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _bdo_html() throws Exception {
        test("bdo", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdo_object() throws Exception {
        test("bdo", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdo_title() throws Exception {
        test("bdo", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _big_body() throws Exception {
        test("big", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _big_head() throws Exception {
        test("big", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _big_html() throws Exception {
        test("big", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _big_object() throws Exception {
        test("big", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _big_title() throws Exception {
        test("big", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blink_body() throws Exception {
        test("blink", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blink_head() throws Exception {
        test("blink", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blink_html() throws Exception {
        test("blink", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _blink_object() throws Exception {
        test("blink", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blink_title() throws Exception {
        test("blink", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blockquote_body() throws Exception {
        test("blockquote", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blockquote_head() throws Exception {
        test("blockquote", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _blockquote_html() throws Exception {
        test("blockquote", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _blockquote_object() throws Exception {
        test("blockquote", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_title() throws Exception {
        test("blockquote", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _body_body() throws Exception {
        test("body", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _body_head() throws Exception {
        test("body", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _body_html() throws Exception {
        test("body", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _button_body() throws Exception {
        test("button", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _button_head() throws Exception {
        test("button", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _button_html() throws Exception {
        test("button", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _button_object() throws Exception {
        test("button", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _button_textarea() throws Exception {
        test("button", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_title() throws Exception {
        test("button", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_a() throws Exception {
        test("canvas", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_abbr() throws Exception {
        test("canvas", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_acronym() throws Exception {
        test("canvas", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_address() throws Exception {
        test("canvas", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_applet() throws Exception {
        test("canvas", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_article() throws Exception {
        test("canvas", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_aside() throws Exception {
        test("canvas", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_audio() throws Exception {
        test("canvas", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_b() throws Exception {
        test("canvas", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_bdi() throws Exception {
        test("canvas", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_bdo() throws Exception {
        test("canvas", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_big() throws Exception {
        test("canvas", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_blink() throws Exception {
        test("canvas", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_blockquote() throws Exception {
        test("canvas", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_body() throws Exception {
        test("canvas", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_button() throws Exception {
        test("canvas", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_canvas() throws Exception {
        test("canvas", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_caption() throws Exception {
        test("canvas", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_center() throws Exception {
        test("canvas", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_cite() throws Exception {
        test("canvas", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_code() throws Exception {
        test("canvas", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_col() throws Exception {
        test("canvas", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_colgroup() throws Exception {
        test("canvas", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_datalist() throws Exception {
        test("canvas", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dd() throws Exception {
        test("canvas", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_del() throws Exception {
        test("canvas", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_details() throws Exception {
        test("canvas", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dfn() throws Exception {
        test("canvas", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dialog() throws Exception {
        test("canvas", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dir() throws Exception {
        test("canvas", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_div() throws Exception {
        test("canvas", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dl() throws Exception {
        test("canvas", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_dt() throws Exception {
        test("canvas", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_em() throws Exception {
        test("canvas", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_fieldset() throws Exception {
        test("canvas", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_figcaption() throws Exception {
        test("canvas", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_figure() throws Exception {
        test("canvas", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_font() throws Exception {
        test("canvas", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_footer() throws Exception {
        test("canvas", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_form() throws Exception {
        test("canvas", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_frame() throws Exception {
        test("canvas", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_frameset() throws Exception {
        test("canvas", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h1() throws Exception {
        test("canvas", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h2() throws Exception {
        test("canvas", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h3() throws Exception {
        test("canvas", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h4() throws Exception {
        test("canvas", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h5() throws Exception {
        test("canvas", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_h6() throws Exception {
        test("canvas", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_head() throws Exception {
        test("canvas", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_header() throws Exception {
        test("canvas", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_html() throws Exception {
        test("canvas", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_i() throws Exception {
        test("canvas", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_iframe() throws Exception {
        test("canvas", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_ins() throws Exception {
        test("canvas", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_kbd() throws Exception {
        test("canvas", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_label() throws Exception {
        test("canvas", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_layer() throws Exception {
        test("canvas", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_legend() throws Exception {
        test("canvas", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_li() throws Exception {
        test("canvas", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_listing() throws Exception {
        test("canvas", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_main() throws Exception {
        test("canvas", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_map() throws Exception {
        test("canvas", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_mark() throws Exception {
        test("canvas", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_marquee() throws Exception {
        test("canvas", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_menu() throws Exception {
        test("canvas", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_menuitem() throws Exception {
        test("canvas", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_meter() throws Exception {
        test("canvas", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_multicol() throws Exception {
        test("canvas", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_nav() throws Exception {
        test("canvas", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_nextid() throws Exception {
        test("canvas", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_nobr() throws Exception {
        test("canvas", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_noembed() throws Exception {
        test("canvas", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_noframes() throws Exception {
        test("canvas", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_nolayer() throws Exception {
        test("canvas", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_noscript() throws Exception {
        test("canvas", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_object() throws Exception {
        test("canvas", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_ol() throws Exception {
        test("canvas", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_optgroup() throws Exception {
        test("canvas", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_option() throws Exception {
        test("canvas", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_output() throws Exception {
        test("canvas", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_p() throws Exception {
        test("canvas", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_plaintext() throws Exception {
        test("canvas", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_pre() throws Exception {
        test("canvas", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_progress() throws Exception {
        test("canvas", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_q() throws Exception {
        test("canvas", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_rp() throws Exception {
        test("canvas", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_rt() throws Exception {
        test("canvas", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_ruby() throws Exception {
        test("canvas", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_s() throws Exception {
        test("canvas", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_samp() throws Exception {
        test("canvas", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _canvas_script() throws Exception {
        test("canvas", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_section() throws Exception {
        test("canvas", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_select() throws Exception {
        test("canvas", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_small() throws Exception {
        test("canvas", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_span() throws Exception {
        test("canvas", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_strike() throws Exception {
        test("canvas", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_strong() throws Exception {
        test("canvas", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_style() throws Exception {
        test("canvas", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_sub() throws Exception {
        test("canvas", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_summary() throws Exception {
        test("canvas", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_sup() throws Exception {
        test("canvas", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_table() throws Exception {
        test("canvas", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_tbody() throws Exception {
        test("canvas", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_td() throws Exception {
        test("canvas", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_textarea() throws Exception {
        test("canvas", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_tfoot() throws Exception {
        test("canvas", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_th() throws Exception {
        test("canvas", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_thead() throws Exception {
        test("canvas", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_time() throws Exception {
        test("canvas", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _canvas_title() throws Exception {
        test("canvas", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _canvas_tr() throws Exception {
        test("canvas", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_tt() throws Exception {
        test("canvas", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_u() throws Exception {
        test("canvas", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_ul() throws Exception {
        test("canvas", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_var() throws Exception {
        test("canvas", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_video() throws Exception {
        test("canvas", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_xmp() throws Exception {
        test("canvas", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _center_body() throws Exception {
        test("center", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _center_head() throws Exception {
        test("center", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _center_html() throws Exception {
        test("center", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _center_object() throws Exception {
        test("center", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_title() throws Exception {
        test("center", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _cite_body() throws Exception {
        test("cite", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _cite_head() throws Exception {
        test("cite", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _cite_html() throws Exception {
        test("cite", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _cite_object() throws Exception {
        test("cite", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _cite_title() throws Exception {
        test("cite", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _code_body() throws Exception {
        test("code", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _code_head() throws Exception {
        test("code", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _code_html() throws Exception {
        test("code", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _code_object() throws Exception {
        test("code", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _code_title() throws Exception {
        test("code", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_a() throws Exception {
        test("datalist", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_abbr() throws Exception {
        test("datalist", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_acronym() throws Exception {
        test("datalist", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_address() throws Exception {
        test("datalist", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_applet() throws Exception {
        test("datalist", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_article() throws Exception {
        test("datalist", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_aside() throws Exception {
        test("datalist", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_audio() throws Exception {
        test("datalist", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_b() throws Exception {
        test("datalist", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_bdi() throws Exception {
        test("datalist", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_bdo() throws Exception {
        test("datalist", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_big() throws Exception {
        test("datalist", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_blink() throws Exception {
        test("datalist", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_blockquote() throws Exception {
        test("datalist", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_body() throws Exception {
        test("datalist", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_button() throws Exception {
        test("datalist", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_canvas() throws Exception {
        test("datalist", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_caption() throws Exception {
        test("datalist", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_center() throws Exception {
        test("datalist", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_cite() throws Exception {
        test("datalist", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_code() throws Exception {
        test("datalist", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_col() throws Exception {
        test("datalist", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_colgroup() throws Exception {
        test("datalist", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_datalist() throws Exception {
        test("datalist", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dd() throws Exception {
        test("datalist", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_del() throws Exception {
        test("datalist", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_details() throws Exception {
        test("datalist", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dfn() throws Exception {
        test("datalist", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dialog() throws Exception {
        test("datalist", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dir() throws Exception {
        test("datalist", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_div() throws Exception {
        test("datalist", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dl() throws Exception {
        test("datalist", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_dt() throws Exception {
        test("datalist", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_em() throws Exception {
        test("datalist", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_fieldset() throws Exception {
        test("datalist", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_figcaption() throws Exception {
        test("datalist", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_figure() throws Exception {
        test("datalist", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_font() throws Exception {
        test("datalist", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_footer() throws Exception {
        test("datalist", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_form() throws Exception {
        test("datalist", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_frame() throws Exception {
        test("datalist", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_frameset() throws Exception {
        test("datalist", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h1() throws Exception {
        test("datalist", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h2() throws Exception {
        test("datalist", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h3() throws Exception {
        test("datalist", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h4() throws Exception {
        test("datalist", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h5() throws Exception {
        test("datalist", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_h6() throws Exception {
        test("datalist", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_head() throws Exception {
        test("datalist", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_header() throws Exception {
        test("datalist", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_html() throws Exception {
        test("datalist", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_i() throws Exception {
        test("datalist", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_iframe() throws Exception {
        test("datalist", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_ins() throws Exception {
        test("datalist", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_kbd() throws Exception {
        test("datalist", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_label() throws Exception {
        test("datalist", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_layer() throws Exception {
        test("datalist", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_legend() throws Exception {
        test("datalist", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_li() throws Exception {
        test("datalist", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_listing() throws Exception {
        test("datalist", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_main() throws Exception {
        test("datalist", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_map() throws Exception {
        test("datalist", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_mark() throws Exception {
        test("datalist", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_marquee() throws Exception {
        test("datalist", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_menu() throws Exception {
        test("datalist", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_menuitem() throws Exception {
        test("datalist", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_meter() throws Exception {
        test("datalist", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_multicol() throws Exception {
        test("datalist", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_nav() throws Exception {
        test("datalist", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_nextid() throws Exception {
        test("datalist", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_nobr() throws Exception {
        test("datalist", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_noembed() throws Exception {
        test("datalist", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_noframes() throws Exception {
        test("datalist", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_nolayer() throws Exception {
        test("datalist", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_noscript() throws Exception {
        test("datalist", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_object() throws Exception {
        test("datalist", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_ol() throws Exception {
        test("datalist", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_optgroup() throws Exception {
        test("datalist", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_option() throws Exception {
        test("datalist", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_output() throws Exception {
        test("datalist", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_p() throws Exception {
        test("datalist", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_plaintext() throws Exception {
        test("datalist", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_pre() throws Exception {
        test("datalist", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_progress() throws Exception {
        test("datalist", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_q() throws Exception {
        test("datalist", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_rp() throws Exception {
        test("datalist", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_rt() throws Exception {
        test("datalist", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_ruby() throws Exception {
        test("datalist", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_s() throws Exception {
        test("datalist", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_samp() throws Exception {
        test("datalist", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _datalist_script() throws Exception {
        test("datalist", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_section() throws Exception {
        test("datalist", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_select() throws Exception {
        test("datalist", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_small() throws Exception {
        test("datalist", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_span() throws Exception {
        test("datalist", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_strike() throws Exception {
        test("datalist", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_strong() throws Exception {
        test("datalist", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_style() throws Exception {
        test("datalist", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_sub() throws Exception {
        test("datalist", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_summary() throws Exception {
        test("datalist", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_sup() throws Exception {
        test("datalist", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_table() throws Exception {
        test("datalist", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_tbody() throws Exception {
        test("datalist", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_td() throws Exception {
        test("datalist", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_textarea() throws Exception {
        test("datalist", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_tfoot() throws Exception {
        test("datalist", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_th() throws Exception {
        test("datalist", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_thead() throws Exception {
        test("datalist", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_time() throws Exception {
        test("datalist", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _datalist_title() throws Exception {
        test("datalist", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _datalist_tr() throws Exception {
        test("datalist", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_tt() throws Exception {
        test("datalist", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_u() throws Exception {
        test("datalist", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_ul() throws Exception {
        test("datalist", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_var() throws Exception {
        test("datalist", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_video() throws Exception {
        test("datalist", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_xmp() throws Exception {
        test("datalist", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dd_body() throws Exception {
        test("dd", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dd_head() throws Exception {
        test("dd", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dd_html() throws Exception {
        test("dd", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dd_object() throws Exception {
        test("dd", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_title() throws Exception {
        test("dd", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _del_body() throws Exception {
        test("del", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _del_head() throws Exception {
        test("del", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _del_html() throws Exception {
        test("del", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _del_object() throws Exception {
        test("del", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_title() throws Exception {
        test("del", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_a() throws Exception {
        test("details", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_abbr() throws Exception {
        test("details", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_acronym() throws Exception {
        test("details", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_address() throws Exception {
        test("details", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_applet() throws Exception {
        test("details", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_article() throws Exception {
        test("details", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_aside() throws Exception {
        test("details", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_audio() throws Exception {
        test("details", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_b() throws Exception {
        test("details", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_bdi() throws Exception {
        test("details", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_bdo() throws Exception {
        test("details", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_big() throws Exception {
        test("details", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_blink() throws Exception {
        test("details", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_blockquote() throws Exception {
        test("details", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_body() throws Exception {
        test("details", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_button() throws Exception {
        test("details", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_canvas() throws Exception {
        test("details", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_caption() throws Exception {
        test("details", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_center() throws Exception {
        test("details", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_cite() throws Exception {
        test("details", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_code() throws Exception {
        test("details", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_col() throws Exception {
        test("details", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_colgroup() throws Exception {
        test("details", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_datalist() throws Exception {
        test("details", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dd() throws Exception {
        test("details", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_del() throws Exception {
        test("details", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_details() throws Exception {
        test("details", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dfn() throws Exception {
        test("details", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dialog() throws Exception {
        test("details", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dir() throws Exception {
        test("details", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_div() throws Exception {
        test("details", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dl() throws Exception {
        test("details", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_dt() throws Exception {
        test("details", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_em() throws Exception {
        test("details", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_fieldset() throws Exception {
        test("details", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_figcaption() throws Exception {
        test("details", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_figure() throws Exception {
        test("details", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_font() throws Exception {
        test("details", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_footer() throws Exception {
        test("details", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_form() throws Exception {
        test("details", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_frame() throws Exception {
        test("details", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_frameset() throws Exception {
        test("details", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h1() throws Exception {
        test("details", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h2() throws Exception {
        test("details", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h3() throws Exception {
        test("details", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h4() throws Exception {
        test("details", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h5() throws Exception {
        test("details", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_h6() throws Exception {
        test("details", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_head() throws Exception {
        test("details", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_header() throws Exception {
        test("details", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_html() throws Exception {
        test("details", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_i() throws Exception {
        test("details", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_iframe() throws Exception {
        test("details", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_ins() throws Exception {
        test("details", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_kbd() throws Exception {
        test("details", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_label() throws Exception {
        test("details", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_layer() throws Exception {
        test("details", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_legend() throws Exception {
        test("details", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_li() throws Exception {
        test("details", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_listing() throws Exception {
        test("details", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_main() throws Exception {
        test("details", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_map() throws Exception {
        test("details", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_mark() throws Exception {
        test("details", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_marquee() throws Exception {
        test("details", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_menu() throws Exception {
        test("details", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_menuitem() throws Exception {
        test("details", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_meter() throws Exception {
        test("details", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_multicol() throws Exception {
        test("details", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_nav() throws Exception {
        test("details", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _details_nextid() throws Exception {
        test("details", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_nobr() throws Exception {
        test("details", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_noembed() throws Exception {
        test("details", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_noframes() throws Exception {
        test("details", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_nolayer() throws Exception {
        test("details", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_noscript() throws Exception {
        test("details", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_object() throws Exception {
        test("details", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_ol() throws Exception {
        test("details", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_optgroup() throws Exception {
        test("details", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_option() throws Exception {
        test("details", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_output() throws Exception {
        test("details", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_p() throws Exception {
        test("details", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_plaintext() throws Exception {
        test("details", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_pre() throws Exception {
        test("details", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_progress() throws Exception {
        test("details", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_q() throws Exception {
        test("details", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_rp() throws Exception {
        test("details", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_rt() throws Exception {
        test("details", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_ruby() throws Exception {
        test("details", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_s() throws Exception {
        test("details", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_samp() throws Exception {
        test("details", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _details_script() throws Exception {
        test("details", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_section() throws Exception {
        test("details", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_select() throws Exception {
        test("details", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_small() throws Exception {
        test("details", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_span() throws Exception {
        test("details", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_strike() throws Exception {
        test("details", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_strong() throws Exception {
        test("details", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_style() throws Exception {
        test("details", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_sub() throws Exception {
        test("details", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_summary() throws Exception {
        test("details", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_sup() throws Exception {
        test("details", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_table() throws Exception {
        test("details", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_tbody() throws Exception {
        test("details", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_td() throws Exception {
        test("details", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_textarea() throws Exception {
        test("details", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_tfoot() throws Exception {
        test("details", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_th() throws Exception {
        test("details", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_thead() throws Exception {
        test("details", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_time() throws Exception {
        test("details", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _details_title() throws Exception {
        test("details", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _details_tr() throws Exception {
        test("details", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_tt() throws Exception {
        test("details", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_u() throws Exception {
        test("details", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_ul() throws Exception {
        test("details", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_var() throws Exception {
        test("details", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_video() throws Exception {
        test("details", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_xmp() throws Exception {
        test("details", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dfn_body() throws Exception {
        test("dfn", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dfn_head() throws Exception {
        test("dfn", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dfn_html() throws Exception {
        test("dfn", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dfn_object() throws Exception {
        test("dfn", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dfn_title() throws Exception {
        test("dfn", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_a() throws Exception {
        test("dialog", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_abbr() throws Exception {
        test("dialog", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_acronym() throws Exception {
        test("dialog", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_address() throws Exception {
        test("dialog", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_applet() throws Exception {
        test("dialog", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_article() throws Exception {
        test("dialog", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_aside() throws Exception {
        test("dialog", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_audio() throws Exception {
        test("dialog", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_b() throws Exception {
        test("dialog", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_bdi() throws Exception {
        test("dialog", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_bdo() throws Exception {
        test("dialog", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_big() throws Exception {
        test("dialog", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_blink() throws Exception {
        test("dialog", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_blockquote() throws Exception {
        test("dialog", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_body() throws Exception {
        test("dialog", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_button() throws Exception {
        test("dialog", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_canvas() throws Exception {
        test("dialog", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_caption() throws Exception {
        test("dialog", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_center() throws Exception {
        test("dialog", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_cite() throws Exception {
        test("dialog", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_code() throws Exception {
        test("dialog", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_col() throws Exception {
        test("dialog", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_colgroup() throws Exception {
        test("dialog", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_datalist() throws Exception {
        test("dialog", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dd() throws Exception {
        test("dialog", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_del() throws Exception {
        test("dialog", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_details() throws Exception {
        test("dialog", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dfn() throws Exception {
        test("dialog", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dialog() throws Exception {
        test("dialog", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dir() throws Exception {
        test("dialog", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_div() throws Exception {
        test("dialog", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dl() throws Exception {
        test("dialog", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_dt() throws Exception {
        test("dialog", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_em() throws Exception {
        test("dialog", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_fieldset() throws Exception {
        test("dialog", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_figcaption() throws Exception {
        test("dialog", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_figure() throws Exception {
        test("dialog", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_font() throws Exception {
        test("dialog", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_footer() throws Exception {
        test("dialog", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_form() throws Exception {
        test("dialog", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_frame() throws Exception {
        test("dialog", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_frameset() throws Exception {
        test("dialog", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h1() throws Exception {
        test("dialog", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h2() throws Exception {
        test("dialog", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h3() throws Exception {
        test("dialog", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h4() throws Exception {
        test("dialog", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h5() throws Exception {
        test("dialog", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_h6() throws Exception {
        test("dialog", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_head() throws Exception {
        test("dialog", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_header() throws Exception {
        test("dialog", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_html() throws Exception {
        test("dialog", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_i() throws Exception {
        test("dialog", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_iframe() throws Exception {
        test("dialog", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_ins() throws Exception {
        test("dialog", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_kbd() throws Exception {
        test("dialog", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_label() throws Exception {
        test("dialog", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_layer() throws Exception {
        test("dialog", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_legend() throws Exception {
        test("dialog", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_li() throws Exception {
        test("dialog", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_listing() throws Exception {
        test("dialog", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_main() throws Exception {
        test("dialog", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_map() throws Exception {
        test("dialog", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_mark() throws Exception {
        test("dialog", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_marquee() throws Exception {
        test("dialog", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_menu() throws Exception {
        test("dialog", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_menuitem() throws Exception {
        test("dialog", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_meter() throws Exception {
        test("dialog", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_multicol() throws Exception {
        test("dialog", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_nav() throws Exception {
        test("dialog", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_nextid() throws Exception {
        test("dialog", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_nobr() throws Exception {
        test("dialog", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_noembed() throws Exception {
        test("dialog", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_noframes() throws Exception {
        test("dialog", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_nolayer() throws Exception {
        test("dialog", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_noscript() throws Exception {
        test("dialog", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_object() throws Exception {
        test("dialog", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_ol() throws Exception {
        test("dialog", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_optgroup() throws Exception {
        test("dialog", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_option() throws Exception {
        test("dialog", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_output() throws Exception {
        test("dialog", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_p() throws Exception {
        test("dialog", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_plaintext() throws Exception {
        test("dialog", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_pre() throws Exception {
        test("dialog", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_progress() throws Exception {
        test("dialog", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_q() throws Exception {
        test("dialog", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_rp() throws Exception {
        test("dialog", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_rt() throws Exception {
        test("dialog", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_ruby() throws Exception {
        test("dialog", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_s() throws Exception {
        test("dialog", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_samp() throws Exception {
        test("dialog", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _dialog_script() throws Exception {
        test("dialog", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_section() throws Exception {
        test("dialog", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_select() throws Exception {
        test("dialog", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_small() throws Exception {
        test("dialog", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_span() throws Exception {
        test("dialog", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_strike() throws Exception {
        test("dialog", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_strong() throws Exception {
        test("dialog", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_style() throws Exception {
        test("dialog", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_sub() throws Exception {
        test("dialog", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_summary() throws Exception {
        test("dialog", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_sup() throws Exception {
        test("dialog", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_table() throws Exception {
        test("dialog", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_tbody() throws Exception {
        test("dialog", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_td() throws Exception {
        test("dialog", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_textarea() throws Exception {
        test("dialog", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_tfoot() throws Exception {
        test("dialog", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_th() throws Exception {
        test("dialog", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_thead() throws Exception {
        test("dialog", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_time() throws Exception {
        test("dialog", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dialog_title() throws Exception {
        test("dialog", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dialog_tr() throws Exception {
        test("dialog", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_tt() throws Exception {
        test("dialog", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_u() throws Exception {
        test("dialog", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_ul() throws Exception {
        test("dialog", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_var() throws Exception {
        test("dialog", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_video() throws Exception {
        test("dialog", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_xmp() throws Exception {
        test("dialog", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dir_body() throws Exception {
        test("dir", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dir_head() throws Exception {
        test("dir", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dir_html() throws Exception {
        test("dir", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dir_object() throws Exception {
        test("dir", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_title() throws Exception {
        test("dir", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _div_body() throws Exception {
        test("div", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _div_head() throws Exception {
        test("div", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _div_html() throws Exception {
        test("div", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _div_object() throws Exception {
        test("div", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_title() throws Exception {
        test("div", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dl_body() throws Exception {
        test("dl", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dl_head() throws Exception {
        test("dl", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dl_html() throws Exception {
        test("dl", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dl_object() throws Exception {
        test("dl", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_title() throws Exception {
        test("dl", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dt_body() throws Exception {
        test("dt", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dt_head() throws Exception {
        test("dt", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _dt_html() throws Exception {
        test("dt", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dt_object() throws Exception {
        test("dt", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_title() throws Exception {
        test("dt", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _em_body() throws Exception {
        test("em", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _em_head() throws Exception {
        test("em", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _em_html() throws Exception {
        test("em", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _em_object() throws Exception {
        test("em", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _em_title() throws Exception {
        test("em", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _fieldset_body() throws Exception {
        test("fieldset", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _fieldset_head() throws Exception {
        test("fieldset", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _fieldset_html() throws Exception {
        test("fieldset", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _fieldset_object() throws Exception {
        test("fieldset", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_title() throws Exception {
        test("fieldset", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_a() throws Exception {
        test("figcaption", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_abbr() throws Exception {
        test("figcaption", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_acronym() throws Exception {
        test("figcaption", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_address() throws Exception {
        test("figcaption", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_applet() throws Exception {
        test("figcaption", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_article() throws Exception {
        test("figcaption", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_aside() throws Exception {
        test("figcaption", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_audio() throws Exception {
        test("figcaption", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_b() throws Exception {
        test("figcaption", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_bdi() throws Exception {
        test("figcaption", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_bdo() throws Exception {
        test("figcaption", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_big() throws Exception {
        test("figcaption", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_blink() throws Exception {
        test("figcaption", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_blockquote() throws Exception {
        test("figcaption", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_body() throws Exception {
        test("figcaption", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_button() throws Exception {
        test("figcaption", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_canvas() throws Exception {
        test("figcaption", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_caption() throws Exception {
        test("figcaption", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_center() throws Exception {
        test("figcaption", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_cite() throws Exception {
        test("figcaption", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_code() throws Exception {
        test("figcaption", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_col() throws Exception {
        test("figcaption", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_colgroup() throws Exception {
        test("figcaption", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_datalist() throws Exception {
        test("figcaption", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dd() throws Exception {
        test("figcaption", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_del() throws Exception {
        test("figcaption", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_details() throws Exception {
        test("figcaption", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dfn() throws Exception {
        test("figcaption", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dialog() throws Exception {
        test("figcaption", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dir() throws Exception {
        test("figcaption", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_div() throws Exception {
        test("figcaption", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dl() throws Exception {
        test("figcaption", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_dt() throws Exception {
        test("figcaption", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_em() throws Exception {
        test("figcaption", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_fieldset() throws Exception {
        test("figcaption", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_figcaption() throws Exception {
        test("figcaption", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_figure() throws Exception {
        test("figcaption", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_font() throws Exception {
        test("figcaption", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_footer() throws Exception {
        test("figcaption", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_form() throws Exception {
        test("figcaption", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_frame() throws Exception {
        test("figcaption", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_frameset() throws Exception {
        test("figcaption", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h1() throws Exception {
        test("figcaption", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h2() throws Exception {
        test("figcaption", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h3() throws Exception {
        test("figcaption", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h4() throws Exception {
        test("figcaption", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h5() throws Exception {
        test("figcaption", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_h6() throws Exception {
        test("figcaption", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_head() throws Exception {
        test("figcaption", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_header() throws Exception {
        test("figcaption", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_html() throws Exception {
        test("figcaption", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_i() throws Exception {
        test("figcaption", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_iframe() throws Exception {
        test("figcaption", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_ins() throws Exception {
        test("figcaption", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_kbd() throws Exception {
        test("figcaption", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_label() throws Exception {
        test("figcaption", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_layer() throws Exception {
        test("figcaption", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_legend() throws Exception {
        test("figcaption", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_li() throws Exception {
        test("figcaption", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_listing() throws Exception {
        test("figcaption", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_main() throws Exception {
        test("figcaption", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_map() throws Exception {
        test("figcaption", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_mark() throws Exception {
        test("figcaption", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_marquee() throws Exception {
        test("figcaption", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_menu() throws Exception {
        test("figcaption", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_menuitem() throws Exception {
        test("figcaption", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_meter() throws Exception {
        test("figcaption", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_multicol() throws Exception {
        test("figcaption", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_nav() throws Exception {
        test("figcaption", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_nextid() throws Exception {
        test("figcaption", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_nobr() throws Exception {
        test("figcaption", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_noembed() throws Exception {
        test("figcaption", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_noframes() throws Exception {
        test("figcaption", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_nolayer() throws Exception {
        test("figcaption", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_noscript() throws Exception {
        test("figcaption", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_object() throws Exception {
        test("figcaption", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_ol() throws Exception {
        test("figcaption", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_optgroup() throws Exception {
        test("figcaption", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_option() throws Exception {
        test("figcaption", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_output() throws Exception {
        test("figcaption", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_p() throws Exception {
        test("figcaption", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_plaintext() throws Exception {
        test("figcaption", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_pre() throws Exception {
        test("figcaption", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_progress() throws Exception {
        test("figcaption", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_q() throws Exception {
        test("figcaption", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_rp() throws Exception {
        test("figcaption", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_rt() throws Exception {
        test("figcaption", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_ruby() throws Exception {
        test("figcaption", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_s() throws Exception {
        test("figcaption", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_samp() throws Exception {
        test("figcaption", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _figcaption_script() throws Exception {
        test("figcaption", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_section() throws Exception {
        test("figcaption", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_select() throws Exception {
        test("figcaption", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_small() throws Exception {
        test("figcaption", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_span() throws Exception {
        test("figcaption", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_strike() throws Exception {
        test("figcaption", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_strong() throws Exception {
        test("figcaption", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_style() throws Exception {
        test("figcaption", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_sub() throws Exception {
        test("figcaption", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_summary() throws Exception {
        test("figcaption", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_sup() throws Exception {
        test("figcaption", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_table() throws Exception {
        test("figcaption", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_tbody() throws Exception {
        test("figcaption", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_td() throws Exception {
        test("figcaption", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_textarea() throws Exception {
        test("figcaption", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_tfoot() throws Exception {
        test("figcaption", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_th() throws Exception {
        test("figcaption", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_thead() throws Exception {
        test("figcaption", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_time() throws Exception {
        test("figcaption", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _figcaption_title() throws Exception {
        test("figcaption", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figcaption_tr() throws Exception {
        test("figcaption", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_tt() throws Exception {
        test("figcaption", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_u() throws Exception {
        test("figcaption", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_ul() throws Exception {
        test("figcaption", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_var() throws Exception {
        test("figcaption", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_video() throws Exception {
        test("figcaption", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_xmp() throws Exception {
        test("figcaption", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_a() throws Exception {
        test("figure", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_abbr() throws Exception {
        test("figure", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_acronym() throws Exception {
        test("figure", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_address() throws Exception {
        test("figure", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_applet() throws Exception {
        test("figure", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_article() throws Exception {
        test("figure", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_aside() throws Exception {
        test("figure", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_audio() throws Exception {
        test("figure", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_b() throws Exception {
        test("figure", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_bdi() throws Exception {
        test("figure", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_bdo() throws Exception {
        test("figure", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_big() throws Exception {
        test("figure", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_blink() throws Exception {
        test("figure", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_blockquote() throws Exception {
        test("figure", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_body() throws Exception {
        test("figure", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_button() throws Exception {
        test("figure", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_canvas() throws Exception {
        test("figure", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_caption() throws Exception {
        test("figure", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_center() throws Exception {
        test("figure", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_cite() throws Exception {
        test("figure", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_code() throws Exception {
        test("figure", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_col() throws Exception {
        test("figure", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_colgroup() throws Exception {
        test("figure", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_datalist() throws Exception {
        test("figure", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dd() throws Exception {
        test("figure", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_del() throws Exception {
        test("figure", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_details() throws Exception {
        test("figure", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dfn() throws Exception {
        test("figure", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dialog() throws Exception {
        test("figure", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dir() throws Exception {
        test("figure", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_div() throws Exception {
        test("figure", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dl() throws Exception {
        test("figure", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_dt() throws Exception {
        test("figure", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_em() throws Exception {
        test("figure", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_fieldset() throws Exception {
        test("figure", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_figcaption() throws Exception {
        test("figure", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_figure() throws Exception {
        test("figure", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_font() throws Exception {
        test("figure", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_footer() throws Exception {
        test("figure", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_form() throws Exception {
        test("figure", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_frame() throws Exception {
        test("figure", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_frameset() throws Exception {
        test("figure", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h1() throws Exception {
        test("figure", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h2() throws Exception {
        test("figure", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h3() throws Exception {
        test("figure", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h4() throws Exception {
        test("figure", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h5() throws Exception {
        test("figure", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_h6() throws Exception {
        test("figure", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_head() throws Exception {
        test("figure", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_header() throws Exception {
        test("figure", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_html() throws Exception {
        test("figure", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_i() throws Exception {
        test("figure", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_iframe() throws Exception {
        test("figure", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_ins() throws Exception {
        test("figure", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_kbd() throws Exception {
        test("figure", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_label() throws Exception {
        test("figure", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_layer() throws Exception {
        test("figure", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_legend() throws Exception {
        test("figure", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_li() throws Exception {
        test("figure", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_listing() throws Exception {
        test("figure", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_main() throws Exception {
        test("figure", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_map() throws Exception {
        test("figure", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_mark() throws Exception {
        test("figure", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_marquee() throws Exception {
        test("figure", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_menu() throws Exception {
        test("figure", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_menuitem() throws Exception {
        test("figure", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_meter() throws Exception {
        test("figure", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_multicol() throws Exception {
        test("figure", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_nav() throws Exception {
        test("figure", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_nextid() throws Exception {
        test("figure", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_nobr() throws Exception {
        test("figure", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_noembed() throws Exception {
        test("figure", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_noframes() throws Exception {
        test("figure", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_nolayer() throws Exception {
        test("figure", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_noscript() throws Exception {
        test("figure", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_object() throws Exception {
        test("figure", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_ol() throws Exception {
        test("figure", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_optgroup() throws Exception {
        test("figure", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_option() throws Exception {
        test("figure", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_output() throws Exception {
        test("figure", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_p() throws Exception {
        test("figure", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_plaintext() throws Exception {
        test("figure", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_pre() throws Exception {
        test("figure", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_progress() throws Exception {
        test("figure", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_q() throws Exception {
        test("figure", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_rp() throws Exception {
        test("figure", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_rt() throws Exception {
        test("figure", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_ruby() throws Exception {
        test("figure", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_s() throws Exception {
        test("figure", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_samp() throws Exception {
        test("figure", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _figure_script() throws Exception {
        test("figure", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_section() throws Exception {
        test("figure", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_select() throws Exception {
        test("figure", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_small() throws Exception {
        test("figure", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_span() throws Exception {
        test("figure", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_strike() throws Exception {
        test("figure", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_strong() throws Exception {
        test("figure", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_style() throws Exception {
        test("figure", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_sub() throws Exception {
        test("figure", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_summary() throws Exception {
        test("figure", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_sup() throws Exception {
        test("figure", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_table() throws Exception {
        test("figure", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_tbody() throws Exception {
        test("figure", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_td() throws Exception {
        test("figure", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_textarea() throws Exception {
        test("figure", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_tfoot() throws Exception {
        test("figure", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_th() throws Exception {
        test("figure", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_thead() throws Exception {
        test("figure", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_time() throws Exception {
        test("figure", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _figure_title() throws Exception {
        test("figure", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _figure_tr() throws Exception {
        test("figure", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_tt() throws Exception {
        test("figure", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_u() throws Exception {
        test("figure", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_ul() throws Exception {
        test("figure", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_var() throws Exception {
        test("figure", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_video() throws Exception {
        test("figure", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_xmp() throws Exception {
        test("figure", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _font_body() throws Exception {
        test("font", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _font_head() throws Exception {
        test("font", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _font_html() throws Exception {
        test("font", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _font_object() throws Exception {
        test("font", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_title() throws Exception {
        test("font", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_a() throws Exception {
        test("footer", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_abbr() throws Exception {
        test("footer", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_acronym() throws Exception {
        test("footer", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_address() throws Exception {
        test("footer", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_applet() throws Exception {
        test("footer", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_article() throws Exception {
        test("footer", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_aside() throws Exception {
        test("footer", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_audio() throws Exception {
        test("footer", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_b() throws Exception {
        test("footer", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_bdi() throws Exception {
        test("footer", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_bdo() throws Exception {
        test("footer", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_big() throws Exception {
        test("footer", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_blink() throws Exception {
        test("footer", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_blockquote() throws Exception {
        test("footer", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_body() throws Exception {
        test("footer", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_button() throws Exception {
        test("footer", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_canvas() throws Exception {
        test("footer", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_caption() throws Exception {
        test("footer", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_center() throws Exception {
        test("footer", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_cite() throws Exception {
        test("footer", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_code() throws Exception {
        test("footer", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_col() throws Exception {
        test("footer", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_colgroup() throws Exception {
        test("footer", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_datalist() throws Exception {
        test("footer", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dd() throws Exception {
        test("footer", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_del() throws Exception {
        test("footer", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_details() throws Exception {
        test("footer", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dfn() throws Exception {
        test("footer", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dialog() throws Exception {
        test("footer", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dir() throws Exception {
        test("footer", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_div() throws Exception {
        test("footer", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dl() throws Exception {
        test("footer", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_dt() throws Exception {
        test("footer", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_em() throws Exception {
        test("footer", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_fieldset() throws Exception {
        test("footer", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_figcaption() throws Exception {
        test("footer", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_figure() throws Exception {
        test("footer", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_font() throws Exception {
        test("footer", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_footer() throws Exception {
        test("footer", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_form() throws Exception {
        test("footer", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_frame() throws Exception {
        test("footer", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_frameset() throws Exception {
        test("footer", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h1() throws Exception {
        test("footer", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h2() throws Exception {
        test("footer", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h3() throws Exception {
        test("footer", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h4() throws Exception {
        test("footer", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h5() throws Exception {
        test("footer", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_h6() throws Exception {
        test("footer", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_head() throws Exception {
        test("footer", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_header() throws Exception {
        test("footer", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_html() throws Exception {
        test("footer", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_i() throws Exception {
        test("footer", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_iframe() throws Exception {
        test("footer", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_ins() throws Exception {
        test("footer", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_kbd() throws Exception {
        test("footer", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_label() throws Exception {
        test("footer", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_layer() throws Exception {
        test("footer", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_legend() throws Exception {
        test("footer", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_li() throws Exception {
        test("footer", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_listing() throws Exception {
        test("footer", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_main() throws Exception {
        test("footer", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_map() throws Exception {
        test("footer", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_mark() throws Exception {
        test("footer", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_marquee() throws Exception {
        test("footer", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_menu() throws Exception {
        test("footer", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_menuitem() throws Exception {
        test("footer", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_meter() throws Exception {
        test("footer", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_multicol() throws Exception {
        test("footer", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_nav() throws Exception {
        test("footer", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_nextid() throws Exception {
        test("footer", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_nobr() throws Exception {
        test("footer", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_noembed() throws Exception {
        test("footer", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_noframes() throws Exception {
        test("footer", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_nolayer() throws Exception {
        test("footer", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_noscript() throws Exception {
        test("footer", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_object() throws Exception {
        test("footer", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_ol() throws Exception {
        test("footer", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_optgroup() throws Exception {
        test("footer", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_option() throws Exception {
        test("footer", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_output() throws Exception {
        test("footer", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_p() throws Exception {
        test("footer", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_plaintext() throws Exception {
        test("footer", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_pre() throws Exception {
        test("footer", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_progress() throws Exception {
        test("footer", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_q() throws Exception {
        test("footer", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_rp() throws Exception {
        test("footer", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_rt() throws Exception {
        test("footer", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_ruby() throws Exception {
        test("footer", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_s() throws Exception {
        test("footer", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_samp() throws Exception {
        test("footer", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _footer_script() throws Exception {
        test("footer", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_section() throws Exception {
        test("footer", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_select() throws Exception {
        test("footer", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_small() throws Exception {
        test("footer", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_span() throws Exception {
        test("footer", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_strike() throws Exception {
        test("footer", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_strong() throws Exception {
        test("footer", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_style() throws Exception {
        test("footer", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_sub() throws Exception {
        test("footer", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_summary() throws Exception {
        test("footer", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_sup() throws Exception {
        test("footer", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_table() throws Exception {
        test("footer", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_tbody() throws Exception {
        test("footer", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_td() throws Exception {
        test("footer", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_textarea() throws Exception {
        test("footer", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_tfoot() throws Exception {
        test("footer", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_th() throws Exception {
        test("footer", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_thead() throws Exception {
        test("footer", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_time() throws Exception {
        test("footer", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _footer_title() throws Exception {
        test("footer", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _footer_tr() throws Exception {
        test("footer", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_tt() throws Exception {
        test("footer", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_u() throws Exception {
        test("footer", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_ul() throws Exception {
        test("footer", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_var() throws Exception {
        test("footer", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_video() throws Exception {
        test("footer", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_xmp() throws Exception {
        test("footer", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _form_body() throws Exception {
        test("form", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _form_head() throws Exception {
        test("form", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _form_html() throws Exception {
        test("form", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _form_object() throws Exception {
        test("form", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_title() throws Exception {
        test("form", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h1_body() throws Exception {
        test("h1", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h1_head() throws Exception {
        test("h1", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h1_html() throws Exception {
        test("h1", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h1_object() throws Exception {
        test("h1", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_title() throws Exception {
        test("h1", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h2_body() throws Exception {
        test("h2", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h2_head() throws Exception {
        test("h2", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h2_html() throws Exception {
        test("h2", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h2_object() throws Exception {
        test("h2", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_title() throws Exception {
        test("h2", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h3_body() throws Exception {
        test("h3", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h3_head() throws Exception {
        test("h3", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h3_html() throws Exception {
        test("h3", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h3_object() throws Exception {
        test("h3", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_title() throws Exception {
        test("h3", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h4_body() throws Exception {
        test("h4", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h4_head() throws Exception {
        test("h4", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h4_html() throws Exception {
        test("h4", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h4_object() throws Exception {
        test("h4", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_title() throws Exception {
        test("h4", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h5_body() throws Exception {
        test("h5", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h5_head() throws Exception {
        test("h5", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h5_html() throws Exception {
        test("h5", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h5_object() throws Exception {
        test("h5", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_title() throws Exception {
        test("h5", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h6_body() throws Exception {
        test("h6", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h6_head() throws Exception {
        test("h6", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _h6_html() throws Exception {
        test("h6", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _h6_object() throws Exception {
        test("h6", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_title() throws Exception {
        test("h6", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_a() throws Exception {
        test("header", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_abbr() throws Exception {
        test("header", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_acronym() throws Exception {
        test("header", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_address() throws Exception {
        test("header", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_applet() throws Exception {
        test("header", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_article() throws Exception {
        test("header", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_aside() throws Exception {
        test("header", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_audio() throws Exception {
        test("header", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_b() throws Exception {
        test("header", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_bdi() throws Exception {
        test("header", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_bdo() throws Exception {
        test("header", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_big() throws Exception {
        test("header", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_blink() throws Exception {
        test("header", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_blockquote() throws Exception {
        test("header", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_body() throws Exception {
        test("header", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_button() throws Exception {
        test("header", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_canvas() throws Exception {
        test("header", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_caption() throws Exception {
        test("header", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_center() throws Exception {
        test("header", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_cite() throws Exception {
        test("header", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_code() throws Exception {
        test("header", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_col() throws Exception {
        test("header", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_colgroup() throws Exception {
        test("header", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_datalist() throws Exception {
        test("header", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dd() throws Exception {
        test("header", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_del() throws Exception {
        test("header", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_details() throws Exception {
        test("header", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dfn() throws Exception {
        test("header", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dialog() throws Exception {
        test("header", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dir() throws Exception {
        test("header", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_div() throws Exception {
        test("header", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dl() throws Exception {
        test("header", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_dt() throws Exception {
        test("header", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_em() throws Exception {
        test("header", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_fieldset() throws Exception {
        test("header", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_figcaption() throws Exception {
        test("header", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_figure() throws Exception {
        test("header", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_font() throws Exception {
        test("header", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_footer() throws Exception {
        test("header", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_form() throws Exception {
        test("header", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_frame() throws Exception {
        test("header", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_frameset() throws Exception {
        test("header", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h1() throws Exception {
        test("header", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h2() throws Exception {
        test("header", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h3() throws Exception {
        test("header", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h4() throws Exception {
        test("header", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h5() throws Exception {
        test("header", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_h6() throws Exception {
        test("header", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_head() throws Exception {
        test("header", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_header() throws Exception {
        test("header", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_html() throws Exception {
        test("header", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_i() throws Exception {
        test("header", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_iframe() throws Exception {
        test("header", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_ins() throws Exception {
        test("header", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_kbd() throws Exception {
        test("header", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_label() throws Exception {
        test("header", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_layer() throws Exception {
        test("header", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_legend() throws Exception {
        test("header", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_li() throws Exception {
        test("header", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_listing() throws Exception {
        test("header", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_main() throws Exception {
        test("header", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_map() throws Exception {
        test("header", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_mark() throws Exception {
        test("header", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_marquee() throws Exception {
        test("header", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_menu() throws Exception {
        test("header", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_menuitem() throws Exception {
        test("header", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_meter() throws Exception {
        test("header", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_multicol() throws Exception {
        test("header", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_nav() throws Exception {
        test("header", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _header_nextid() throws Exception {
        test("header", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_nobr() throws Exception {
        test("header", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_noembed() throws Exception {
        test("header", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_noframes() throws Exception {
        test("header", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_nolayer() throws Exception {
        test("header", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_noscript() throws Exception {
        test("header", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_object() throws Exception {
        test("header", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_ol() throws Exception {
        test("header", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_optgroup() throws Exception {
        test("header", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_option() throws Exception {
        test("header", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_output() throws Exception {
        test("header", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_p() throws Exception {
        test("header", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_plaintext() throws Exception {
        test("header", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_pre() throws Exception {
        test("header", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_progress() throws Exception {
        test("header", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_q() throws Exception {
        test("header", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_rp() throws Exception {
        test("header", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_rt() throws Exception {
        test("header", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_ruby() throws Exception {
        test("header", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_s() throws Exception {
        test("header", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_samp() throws Exception {
        test("header", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _header_script() throws Exception {
        test("header", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_section() throws Exception {
        test("header", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_select() throws Exception {
        test("header", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_small() throws Exception {
        test("header", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_span() throws Exception {
        test("header", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_strike() throws Exception {
        test("header", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_strong() throws Exception {
        test("header", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_style() throws Exception {
        test("header", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_sub() throws Exception {
        test("header", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_summary() throws Exception {
        test("header", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_sup() throws Exception {
        test("header", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_table() throws Exception {
        test("header", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_tbody() throws Exception {
        test("header", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_td() throws Exception {
        test("header", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_textarea() throws Exception {
        test("header", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_tfoot() throws Exception {
        test("header", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_th() throws Exception {
        test("header", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_thead() throws Exception {
        test("header", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_time() throws Exception {
        test("header", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _header_title() throws Exception {
        test("header", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _header_tr() throws Exception {
        test("header", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_tt() throws Exception {
        test("header", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_u() throws Exception {
        test("header", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_ul() throws Exception {
        test("header", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_var() throws Exception {
        test("header", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_video() throws Exception {
        test("header", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_xmp() throws Exception {
        test("header", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _i_body() throws Exception {
        test("i", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _i_head() throws Exception {
        test("i", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _i_html() throws Exception {
        test("i", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _i_object() throws Exception {
        test("i", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _i_title() throws Exception {
        test("i", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_a() throws Exception {
        test("iframe", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_abbr() throws Exception {
        test("iframe", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_acronym() throws Exception {
        test("iframe", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_address() throws Exception {
        test("iframe", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_applet() throws Exception {
        test("iframe", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_area() throws Exception {
        test("iframe", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_article() throws Exception {
        test("iframe", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_aside() throws Exception {
        test("iframe", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_audio() throws Exception {
        test("iframe", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_b() throws Exception {
        test("iframe", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_base() throws Exception {
        test("iframe", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_basefont() throws Exception {
        test("iframe", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_bdi() throws Exception {
        test("iframe", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_bdo() throws Exception {
        test("iframe", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_bgsound() throws Exception {
        test("iframe", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_big() throws Exception {
        test("iframe", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_blink() throws Exception {
        test("iframe", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_blockquote() throws Exception {
        test("iframe", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_body() throws Exception {
        test("iframe", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_br() throws Exception {
        test("iframe", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_button() throws Exception {
        test("iframe", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_canvas() throws Exception {
        test("iframe", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_caption() throws Exception {
        test("iframe", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_center() throws Exception {
        test("iframe", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_cite() throws Exception {
        test("iframe", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_code() throws Exception {
        test("iframe", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_col() throws Exception {
        test("iframe", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_colgroup() throws Exception {
        test("iframe", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_command() throws Exception {
        test("iframe", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_datalist() throws Exception {
        test("iframe", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dd() throws Exception {
        test("iframe", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_del() throws Exception {
        test("iframe", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_details() throws Exception {
        test("iframe", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dfn() throws Exception {
        test("iframe", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dialog() throws Exception {
        test("iframe", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dir() throws Exception {
        test("iframe", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_div() throws Exception {
        test("iframe", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dl() throws Exception {
        test("iframe", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_dt() throws Exception {
        test("iframe", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_em() throws Exception {
        test("iframe", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_embed() throws Exception {
        test("iframe", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_fieldset() throws Exception {
        test("iframe", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_figcaption() throws Exception {
        test("iframe", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_figure() throws Exception {
        test("iframe", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_font() throws Exception {
        test("iframe", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_footer() throws Exception {
        test("iframe", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_form() throws Exception {
        test("iframe", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_frame() throws Exception {
        test("iframe", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_frameset() throws Exception {
        test("iframe", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h1() throws Exception {
        test("iframe", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h2() throws Exception {
        test("iframe", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h3() throws Exception {
        test("iframe", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h4() throws Exception {
        test("iframe", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h5() throws Exception {
        test("iframe", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_h6() throws Exception {
        test("iframe", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_head() throws Exception {
        test("iframe", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_header() throws Exception {
        test("iframe", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_hr() throws Exception {
        test("iframe", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_html() throws Exception {
        test("iframe", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_i() throws Exception {
        test("iframe", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_iframe() throws Exception {
        test("iframe", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_image() throws Exception {
        test("iframe", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_img() throws Exception {
        test("iframe", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_ins() throws Exception {
        test("iframe", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_isindex() throws Exception {
        test("iframe", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_kbd() throws Exception {
        test("iframe", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_keygen() throws Exception {
        test("iframe", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_label() throws Exception {
        test("iframe", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_layer() throws Exception {
        test("iframe", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_legend() throws Exception {
        test("iframe", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_li() throws Exception {
        test("iframe", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_link() throws Exception {
        test("iframe", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_listing() throws Exception {
        test("iframe", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_main() throws Exception {
        test("iframe", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_map() throws Exception {
        test("iframe", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_mark() throws Exception {
        test("iframe", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_marquee() throws Exception {
        test("iframe", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_menu() throws Exception {
        test("iframe", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_menuitem() throws Exception {
        test("iframe", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_meta() throws Exception {
        test("iframe", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_meter() throws Exception {
        test("iframe", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_multicol() throws Exception {
        test("iframe", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_nav() throws Exception {
        test("iframe", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_nextid() throws Exception {
        test("iframe", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_nobr() throws Exception {
        test("iframe", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_noembed() throws Exception {
        test("iframe", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_noframes() throws Exception {
        test("iframe", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_nolayer() throws Exception {
        test("iframe", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_noscript() throws Exception {
        test("iframe", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_object() throws Exception {
        test("iframe", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_ol() throws Exception {
        test("iframe", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_optgroup() throws Exception {
        test("iframe", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_option() throws Exception {
        test("iframe", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_output() throws Exception {
        test("iframe", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_p() throws Exception {
        test("iframe", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_param() throws Exception {
        test("iframe", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_plaintext() throws Exception {
        test("iframe", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_pre() throws Exception {
        test("iframe", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_progress() throws Exception {
        test("iframe", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_q() throws Exception {
        test("iframe", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_rp() throws Exception {
        test("iframe", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_rt() throws Exception {
        test("iframe", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_ruby() throws Exception {
        test("iframe", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_s() throws Exception {
        test("iframe", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_samp() throws Exception {
        test("iframe", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_script() throws Exception {
        test("iframe", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_section() throws Exception {
        test("iframe", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_select() throws Exception {
        test("iframe", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_small() throws Exception {
        test("iframe", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_source() throws Exception {
        test("iframe", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_span() throws Exception {
        test("iframe", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_strike() throws Exception {
        test("iframe", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_strong() throws Exception {
        test("iframe", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_style() throws Exception {
        test("iframe", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_sub() throws Exception {
        test("iframe", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_summary() throws Exception {
        test("iframe", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_sup() throws Exception {
        test("iframe", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_table() throws Exception {
        test("iframe", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_tbody() throws Exception {
        test("iframe", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_td() throws Exception {
        test("iframe", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_textarea() throws Exception {
        test("iframe", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_tfoot() throws Exception {
        test("iframe", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_th() throws Exception {
        test("iframe", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_thead() throws Exception {
        test("iframe", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_time() throws Exception {
        test("iframe", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_title() throws Exception {
        test("iframe", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _iframe_tr() throws Exception {
        test("iframe", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_track() throws Exception {
        test("iframe", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_tt() throws Exception {
        test("iframe", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_u() throws Exception {
        test("iframe", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_ul() throws Exception {
        test("iframe", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_var() throws Exception {
        test("iframe", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_video() throws Exception {
        test("iframe", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_wbr() throws Exception {
        test("iframe", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_xmp() throws Exception {
        test("iframe", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ins_body() throws Exception {
        test("ins", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ins_head() throws Exception {
        test("ins", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ins_html() throws Exception {
        test("ins", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _ins_object() throws Exception {
        test("ins", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ins_title() throws Exception {
        test("ins", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _kbd_body() throws Exception {
        test("kbd", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _kbd_head() throws Exception {
        test("kbd", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _kbd_html() throws Exception {
        test("kbd", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _kbd_object() throws Exception {
        test("kbd", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _kbd_title() throws Exception {
        test("kbd", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _label_body() throws Exception {
        test("label", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _label_head() throws Exception {
        test("label", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _label_html() throws Exception {
        test("label", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _label_object() throws Exception {
        test("label", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _label_title() throws Exception {
        test("label", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_a() throws Exception {
        test("layer", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_abbr() throws Exception {
        test("layer", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_acronym() throws Exception {
        test("layer", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_address() throws Exception {
        test("layer", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_applet() throws Exception {
        test("layer", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_article() throws Exception {
        test("layer", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_aside() throws Exception {
        test("layer", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_audio() throws Exception {
        test("layer", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_b() throws Exception {
        test("layer", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_bdi() throws Exception {
        test("layer", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_bdo() throws Exception {
        test("layer", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_big() throws Exception {
        test("layer", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_blink() throws Exception {
        test("layer", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_blockquote() throws Exception {
        test("layer", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_body() throws Exception {
        test("layer", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_button() throws Exception {
        test("layer", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_canvas() throws Exception {
        test("layer", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_caption() throws Exception {
        test("layer", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_center() throws Exception {
        test("layer", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_cite() throws Exception {
        test("layer", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_code() throws Exception {
        test("layer", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_col() throws Exception {
        test("layer", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_colgroup() throws Exception {
        test("layer", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_datalist() throws Exception {
        test("layer", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dd() throws Exception {
        test("layer", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_del() throws Exception {
        test("layer", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_details() throws Exception {
        test("layer", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dfn() throws Exception {
        test("layer", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dialog() throws Exception {
        test("layer", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dir() throws Exception {
        test("layer", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_div() throws Exception {
        test("layer", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dl() throws Exception {
        test("layer", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_dt() throws Exception {
        test("layer", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_em() throws Exception {
        test("layer", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_fieldset() throws Exception {
        test("layer", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_figcaption() throws Exception {
        test("layer", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_figure() throws Exception {
        test("layer", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_font() throws Exception {
        test("layer", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_footer() throws Exception {
        test("layer", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_form() throws Exception {
        test("layer", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_frame() throws Exception {
        test("layer", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_frameset() throws Exception {
        test("layer", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h1() throws Exception {
        test("layer", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h2() throws Exception {
        test("layer", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h3() throws Exception {
        test("layer", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h4() throws Exception {
        test("layer", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h5() throws Exception {
        test("layer", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_h6() throws Exception {
        test("layer", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_head() throws Exception {
        test("layer", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_header() throws Exception {
        test("layer", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_html() throws Exception {
        test("layer", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_i() throws Exception {
        test("layer", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_iframe() throws Exception {
        test("layer", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_ins() throws Exception {
        test("layer", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_kbd() throws Exception {
        test("layer", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_label() throws Exception {
        test("layer", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_layer() throws Exception {
        test("layer", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_legend() throws Exception {
        test("layer", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_li() throws Exception {
        test("layer", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_listing() throws Exception {
        test("layer", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_main() throws Exception {
        test("layer", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_map() throws Exception {
        test("layer", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_mark() throws Exception {
        test("layer", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_marquee() throws Exception {
        test("layer", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_menu() throws Exception {
        test("layer", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_menuitem() throws Exception {
        test("layer", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_meter() throws Exception {
        test("layer", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_multicol() throws Exception {
        test("layer", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_nav() throws Exception {
        test("layer", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_nextid() throws Exception {
        test("layer", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_nobr() throws Exception {
        test("layer", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_noembed() throws Exception {
        test("layer", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_noframes() throws Exception {
        test("layer", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_nolayer() throws Exception {
        test("layer", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_noscript() throws Exception {
        test("layer", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_object() throws Exception {
        test("layer", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_ol() throws Exception {
        test("layer", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_optgroup() throws Exception {
        test("layer", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_option() throws Exception {
        test("layer", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_output() throws Exception {
        test("layer", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_p() throws Exception {
        test("layer", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_plaintext() throws Exception {
        test("layer", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_pre() throws Exception {
        test("layer", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_progress() throws Exception {
        test("layer", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_q() throws Exception {
        test("layer", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_rp() throws Exception {
        test("layer", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_rt() throws Exception {
        test("layer", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_ruby() throws Exception {
        test("layer", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_s() throws Exception {
        test("layer", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_samp() throws Exception {
        test("layer", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _layer_script() throws Exception {
        test("layer", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_section() throws Exception {
        test("layer", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_select() throws Exception {
        test("layer", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_small() throws Exception {
        test("layer", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_span() throws Exception {
        test("layer", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_strike() throws Exception {
        test("layer", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_strong() throws Exception {
        test("layer", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_style() throws Exception {
        test("layer", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_sub() throws Exception {
        test("layer", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_summary() throws Exception {
        test("layer", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_sup() throws Exception {
        test("layer", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_table() throws Exception {
        test("layer", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_tbody() throws Exception {
        test("layer", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_td() throws Exception {
        test("layer", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_textarea() throws Exception {
        test("layer", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_tfoot() throws Exception {
        test("layer", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_th() throws Exception {
        test("layer", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_thead() throws Exception {
        test("layer", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_time() throws Exception {
        test("layer", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _layer_title() throws Exception {
        test("layer", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _layer_tr() throws Exception {
        test("layer", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_tt() throws Exception {
        test("layer", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_u() throws Exception {
        test("layer", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_ul() throws Exception {
        test("layer", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_var() throws Exception {
        test("layer", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_video() throws Exception {
        test("layer", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_xmp() throws Exception {
        test("layer", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_a() throws Exception {
        test("legend", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_abbr() throws Exception {
        test("legend", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_acronym() throws Exception {
        test("legend", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_address() throws Exception {
        test("legend", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_applet() throws Exception {
        test("legend", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_article() throws Exception {
        test("legend", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_aside() throws Exception {
        test("legend", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_audio() throws Exception {
        test("legend", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_b() throws Exception {
        test("legend", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_bdi() throws Exception {
        test("legend", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_bdo() throws Exception {
        test("legend", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_big() throws Exception {
        test("legend", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_blink() throws Exception {
        test("legend", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_blockquote() throws Exception {
        test("legend", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_body() throws Exception {
        test("legend", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_button() throws Exception {
        test("legend", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_canvas() throws Exception {
        test("legend", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_caption() throws Exception {
        test("legend", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_center() throws Exception {
        test("legend", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_cite() throws Exception {
        test("legend", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_code() throws Exception {
        test("legend", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_col() throws Exception {
        test("legend", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_colgroup() throws Exception {
        test("legend", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_datalist() throws Exception {
        test("legend", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dd() throws Exception {
        test("legend", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_del() throws Exception {
        test("legend", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_details() throws Exception {
        test("legend", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dfn() throws Exception {
        test("legend", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dialog() throws Exception {
        test("legend", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dir() throws Exception {
        test("legend", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_div() throws Exception {
        test("legend", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dl() throws Exception {
        test("legend", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_dt() throws Exception {
        test("legend", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_em() throws Exception {
        test("legend", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_fieldset() throws Exception {
        test("legend", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_figcaption() throws Exception {
        test("legend", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_figure() throws Exception {
        test("legend", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_font() throws Exception {
        test("legend", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_footer() throws Exception {
        test("legend", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_form() throws Exception {
        test("legend", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_frame() throws Exception {
        test("legend", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_frameset() throws Exception {
        test("legend", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h1() throws Exception {
        test("legend", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h2() throws Exception {
        test("legend", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h3() throws Exception {
        test("legend", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h4() throws Exception {
        test("legend", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h5() throws Exception {
        test("legend", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_h6() throws Exception {
        test("legend", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_head() throws Exception {
        test("legend", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_header() throws Exception {
        test("legend", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_html() throws Exception {
        test("legend", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_i() throws Exception {
        test("legend", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_iframe() throws Exception {
        test("legend", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_ins() throws Exception {
        test("legend", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_kbd() throws Exception {
        test("legend", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_label() throws Exception {
        test("legend", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_layer() throws Exception {
        test("legend", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_legend() throws Exception {
        test("legend", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_li() throws Exception {
        test("legend", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_listing() throws Exception {
        test("legend", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_main() throws Exception {
        test("legend", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_map() throws Exception {
        test("legend", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_mark() throws Exception {
        test("legend", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_marquee() throws Exception {
        test("legend", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_menu() throws Exception {
        test("legend", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_menuitem() throws Exception {
        test("legend", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_meter() throws Exception {
        test("legend", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_multicol() throws Exception {
        test("legend", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_nav() throws Exception {
        test("legend", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_nextid() throws Exception {
        test("legend", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_nobr() throws Exception {
        test("legend", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_noembed() throws Exception {
        test("legend", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_noframes() throws Exception {
        test("legend", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_nolayer() throws Exception {
        test("legend", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_noscript() throws Exception {
        test("legend", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_object() throws Exception {
        test("legend", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_ol() throws Exception {
        test("legend", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_optgroup() throws Exception {
        test("legend", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_option() throws Exception {
        test("legend", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_output() throws Exception {
        test("legend", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_p() throws Exception {
        test("legend", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_plaintext() throws Exception {
        test("legend", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_pre() throws Exception {
        test("legend", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_progress() throws Exception {
        test("legend", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_q() throws Exception {
        test("legend", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_rp() throws Exception {
        test("legend", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_rt() throws Exception {
        test("legend", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_ruby() throws Exception {
        test("legend", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_s() throws Exception {
        test("legend", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_samp() throws Exception {
        test("legend", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _legend_script() throws Exception {
        test("legend", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_section() throws Exception {
        test("legend", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_select() throws Exception {
        test("legend", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_small() throws Exception {
        test("legend", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_span() throws Exception {
        test("legend", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_strike() throws Exception {
        test("legend", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_strong() throws Exception {
        test("legend", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_style() throws Exception {
        test("legend", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_sub() throws Exception {
        test("legend", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_summary() throws Exception {
        test("legend", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_sup() throws Exception {
        test("legend", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_table() throws Exception {
        test("legend", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_tbody() throws Exception {
        test("legend", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_td() throws Exception {
        test("legend", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_textarea() throws Exception {
        test("legend", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_tfoot() throws Exception {
        test("legend", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_th() throws Exception {
        test("legend", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_thead() throws Exception {
        test("legend", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_time() throws Exception {
        test("legend", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _legend_title() throws Exception {
        test("legend", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _legend_tr() throws Exception {
        test("legend", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_tt() throws Exception {
        test("legend", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_u() throws Exception {
        test("legend", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_ul() throws Exception {
        test("legend", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_var() throws Exception {
        test("legend", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_video() throws Exception {
        test("legend", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_xmp() throws Exception {
        test("legend", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _li_body() throws Exception {
        test("li", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _li_head() throws Exception {
        test("li", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _li_html() throws Exception {
        test("li", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _li_object() throws Exception {
        test("li", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_title() throws Exception {
        test("li", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_article() throws Exception {
        test("listing", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_aside() throws Exception {
        test("listing", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_audio() throws Exception {
        test("listing", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_bdi() throws Exception {
        test("listing", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _listing_body() throws Exception {
        test("listing", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_canvas() throws Exception {
        test("listing", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_caption() throws Exception {
        test("listing", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_col() throws Exception {
        test("listing", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_colgroup() throws Exception {
        test("listing", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_datalist() throws Exception {
        test("listing", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_details() throws Exception {
        test("listing", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_dialog() throws Exception {
        test("listing", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_figcaption() throws Exception {
        test("listing", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_figure() throws Exception {
        test("listing", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_footer() throws Exception {
        test("listing", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_frame() throws Exception {
        test("listing", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_frameset() throws Exception {
        test("listing", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_head() throws Exception {
        test("listing", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_header() throws Exception {
        test("listing", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_html() throws Exception {
        test("listing", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_layer() throws Exception {
        test("listing", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_legend() throws Exception {
        test("listing", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_main() throws Exception {
        test("listing", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_mark() throws Exception {
        test("listing", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_menuitem() throws Exception {
        test("listing", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_meter() throws Exception {
        test("listing", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_multicol() throws Exception {
        test("listing", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_nav() throws Exception {
        test("listing", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented
    public void _listing_nextid() throws Exception {
        test("listing", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_nolayer() throws Exception {
        test("listing", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _listing_object() throws Exception {
        test("listing", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_optgroup() throws Exception {
        test("listing", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_option() throws Exception {
        test("listing", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_output() throws Exception {
        test("listing", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_progress() throws Exception {
        test("listing", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_rp() throws Exception {
        test("listing", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_rt() throws Exception {
        test("listing", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_section() throws Exception {
        test("listing", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_summary() throws Exception {
        test("listing", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_tbody() throws Exception {
        test("listing", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_td() throws Exception {
        test("listing", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_tfoot() throws Exception {
        test("listing", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_th() throws Exception {
        test("listing", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_thead() throws Exception {
        test("listing", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_time() throws Exception {
        test("listing", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _listing_title() throws Exception {
        test("listing", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_tr() throws Exception {
        test("listing", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_video() throws Exception {
        test("listing", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_a() throws Exception {
        test("main", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_abbr() throws Exception {
        test("main", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_acronym() throws Exception {
        test("main", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_address() throws Exception {
        test("main", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_applet() throws Exception {
        test("main", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_article() throws Exception {
        test("main", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_aside() throws Exception {
        test("main", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_audio() throws Exception {
        test("main", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_b() throws Exception {
        test("main", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_bdi() throws Exception {
        test("main", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_bdo() throws Exception {
        test("main", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_big() throws Exception {
        test("main", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_blink() throws Exception {
        test("main", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_blockquote() throws Exception {
        test("main", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_body() throws Exception {
        test("main", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_button() throws Exception {
        test("main", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_canvas() throws Exception {
        test("main", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_caption() throws Exception {
        test("main", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_center() throws Exception {
        test("main", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_cite() throws Exception {
        test("main", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_code() throws Exception {
        test("main", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_col() throws Exception {
        test("main", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_colgroup() throws Exception {
        test("main", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_datalist() throws Exception {
        test("main", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dd() throws Exception {
        test("main", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_del() throws Exception {
        test("main", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_details() throws Exception {
        test("main", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dfn() throws Exception {
        test("main", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dialog() throws Exception {
        test("main", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dir() throws Exception {
        test("main", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_div() throws Exception {
        test("main", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dl() throws Exception {
        test("main", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_dt() throws Exception {
        test("main", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_em() throws Exception {
        test("main", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_fieldset() throws Exception {
        test("main", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_figcaption() throws Exception {
        test("main", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_figure() throws Exception {
        test("main", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_font() throws Exception {
        test("main", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_footer() throws Exception {
        test("main", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_form() throws Exception {
        test("main", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_frame() throws Exception {
        test("main", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_frameset() throws Exception {
        test("main", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h1() throws Exception {
        test("main", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h2() throws Exception {
        test("main", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h3() throws Exception {
        test("main", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h4() throws Exception {
        test("main", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h5() throws Exception {
        test("main", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_h6() throws Exception {
        test("main", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_head() throws Exception {
        test("main", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_header() throws Exception {
        test("main", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_html() throws Exception {
        test("main", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_i() throws Exception {
        test("main", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_iframe() throws Exception {
        test("main", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_ins() throws Exception {
        test("main", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_kbd() throws Exception {
        test("main", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_label() throws Exception {
        test("main", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_layer() throws Exception {
        test("main", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_legend() throws Exception {
        test("main", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_li() throws Exception {
        test("main", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_listing() throws Exception {
        test("main", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_main() throws Exception {
        test("main", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_map() throws Exception {
        test("main", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_mark() throws Exception {
        test("main", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_marquee() throws Exception {
        test("main", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_menu() throws Exception {
        test("main", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_menuitem() throws Exception {
        test("main", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_meter() throws Exception {
        test("main", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_multicol() throws Exception {
        test("main", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_nav() throws Exception {
        test("main", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _main_nextid() throws Exception {
        test("main", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_nobr() throws Exception {
        test("main", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_noembed() throws Exception {
        test("main", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_noframes() throws Exception {
        test("main", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_nolayer() throws Exception {
        test("main", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_noscript() throws Exception {
        test("main", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_object() throws Exception {
        test("main", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_ol() throws Exception {
        test("main", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_optgroup() throws Exception {
        test("main", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_option() throws Exception {
        test("main", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_output() throws Exception {
        test("main", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_p() throws Exception {
        test("main", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_plaintext() throws Exception {
        test("main", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_pre() throws Exception {
        test("main", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_progress() throws Exception {
        test("main", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_q() throws Exception {
        test("main", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_rp() throws Exception {
        test("main", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_rt() throws Exception {
        test("main", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_ruby() throws Exception {
        test("main", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_s() throws Exception {
        test("main", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_samp() throws Exception {
        test("main", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _main_script() throws Exception {
        test("main", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_section() throws Exception {
        test("main", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_select() throws Exception {
        test("main", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_small() throws Exception {
        test("main", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_span() throws Exception {
        test("main", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_strike() throws Exception {
        test("main", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_strong() throws Exception {
        test("main", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_style() throws Exception {
        test("main", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_sub() throws Exception {
        test("main", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_summary() throws Exception {
        test("main", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_sup() throws Exception {
        test("main", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_table() throws Exception {
        test("main", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_tbody() throws Exception {
        test("main", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_td() throws Exception {
        test("main", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_textarea() throws Exception {
        test("main", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_tfoot() throws Exception {
        test("main", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_th() throws Exception {
        test("main", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_thead() throws Exception {
        test("main", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_time() throws Exception {
        test("main", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _main_title() throws Exception {
        test("main", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _main_tr() throws Exception {
        test("main", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_tt() throws Exception {
        test("main", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_u() throws Exception {
        test("main", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_ul() throws Exception {
        test("main", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_var() throws Exception {
        test("main", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_video() throws Exception {
        test("main", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_xmp() throws Exception {
        test("main", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _map_body() throws Exception {
        test("map", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _map_head() throws Exception {
        test("map", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _map_html() throws Exception {
        test("map", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _map_object() throws Exception {
        test("map", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _map_title() throws Exception {
        test("map", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_a() throws Exception {
        test("mark", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_abbr() throws Exception {
        test("mark", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_acronym() throws Exception {
        test("mark", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_address() throws Exception {
        test("mark", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_applet() throws Exception {
        test("mark", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_article() throws Exception {
        test("mark", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_aside() throws Exception {
        test("mark", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_audio() throws Exception {
        test("mark", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_b() throws Exception {
        test("mark", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_bdi() throws Exception {
        test("mark", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_bdo() throws Exception {
        test("mark", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_big() throws Exception {
        test("mark", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_blink() throws Exception {
        test("mark", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_blockquote() throws Exception {
        test("mark", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_body() throws Exception {
        test("mark", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_button() throws Exception {
        test("mark", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_canvas() throws Exception {
        test("mark", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_caption() throws Exception {
        test("mark", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_center() throws Exception {
        test("mark", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_cite() throws Exception {
        test("mark", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_code() throws Exception {
        test("mark", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_col() throws Exception {
        test("mark", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_colgroup() throws Exception {
        test("mark", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_datalist() throws Exception {
        test("mark", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dd() throws Exception {
        test("mark", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_del() throws Exception {
        test("mark", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_details() throws Exception {
        test("mark", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dfn() throws Exception {
        test("mark", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dialog() throws Exception {
        test("mark", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dir() throws Exception {
        test("mark", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_div() throws Exception {
        test("mark", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dl() throws Exception {
        test("mark", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_dt() throws Exception {
        test("mark", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_em() throws Exception {
        test("mark", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_fieldset() throws Exception {
        test("mark", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_figcaption() throws Exception {
        test("mark", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_figure() throws Exception {
        test("mark", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_font() throws Exception {
        test("mark", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_footer() throws Exception {
        test("mark", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_form() throws Exception {
        test("mark", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_frame() throws Exception {
        test("mark", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_frameset() throws Exception {
        test("mark", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h1() throws Exception {
        test("mark", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h2() throws Exception {
        test("mark", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h3() throws Exception {
        test("mark", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h4() throws Exception {
        test("mark", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h5() throws Exception {
        test("mark", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_h6() throws Exception {
        test("mark", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_head() throws Exception {
        test("mark", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_header() throws Exception {
        test("mark", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_html() throws Exception {
        test("mark", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_i() throws Exception {
        test("mark", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_iframe() throws Exception {
        test("mark", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_ins() throws Exception {
        test("mark", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_kbd() throws Exception {
        test("mark", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_label() throws Exception {
        test("mark", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_layer() throws Exception {
        test("mark", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_legend() throws Exception {
        test("mark", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_li() throws Exception {
        test("mark", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_listing() throws Exception {
        test("mark", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_main() throws Exception {
        test("mark", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_map() throws Exception {
        test("mark", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_mark() throws Exception {
        test("mark", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_marquee() throws Exception {
        test("mark", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_menu() throws Exception {
        test("mark", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_menuitem() throws Exception {
        test("mark", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_meter() throws Exception {
        test("mark", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_multicol() throws Exception {
        test("mark", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_nav() throws Exception {
        test("mark", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_nextid() throws Exception {
        test("mark", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_nobr() throws Exception {
        test("mark", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_noembed() throws Exception {
        test("mark", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_noframes() throws Exception {
        test("mark", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_nolayer() throws Exception {
        test("mark", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_noscript() throws Exception {
        test("mark", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_object() throws Exception {
        test("mark", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_ol() throws Exception {
        test("mark", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_optgroup() throws Exception {
        test("mark", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_option() throws Exception {
        test("mark", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_output() throws Exception {
        test("mark", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_p() throws Exception {
        test("mark", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_plaintext() throws Exception {
        test("mark", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_pre() throws Exception {
        test("mark", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_progress() throws Exception {
        test("mark", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_q() throws Exception {
        test("mark", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_rp() throws Exception {
        test("mark", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_rt() throws Exception {
        test("mark", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_ruby() throws Exception {
        test("mark", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_s() throws Exception {
        test("mark", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_samp() throws Exception {
        test("mark", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _mark_script() throws Exception {
        test("mark", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_section() throws Exception {
        test("mark", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_select() throws Exception {
        test("mark", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_small() throws Exception {
        test("mark", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_span() throws Exception {
        test("mark", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_strike() throws Exception {
        test("mark", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_strong() throws Exception {
        test("mark", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_style() throws Exception {
        test("mark", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_sub() throws Exception {
        test("mark", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_summary() throws Exception {
        test("mark", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_sup() throws Exception {
        test("mark", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_table() throws Exception {
        test("mark", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_tbody() throws Exception {
        test("mark", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_td() throws Exception {
        test("mark", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_textarea() throws Exception {
        test("mark", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_tfoot() throws Exception {
        test("mark", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_th() throws Exception {
        test("mark", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_thead() throws Exception {
        test("mark", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_time() throws Exception {
        test("mark", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _mark_title() throws Exception {
        test("mark", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _mark_tr() throws Exception {
        test("mark", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_tt() throws Exception {
        test("mark", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_u() throws Exception {
        test("mark", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_ul() throws Exception {
        test("mark", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_var() throws Exception {
        test("mark", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_video() throws Exception {
        test("mark", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_xmp() throws Exception {
        test("mark", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _marquee_body() throws Exception {
        test("marquee", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _marquee_head() throws Exception {
        test("marquee", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _marquee_html() throws Exception {
        test("marquee", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _marquee_object() throws Exception {
        test("marquee", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_title() throws Exception {
        test("marquee", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menu_body() throws Exception {
        test("menu", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menu_head() throws Exception {
        test("menu", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menu_html() throws Exception {
        test("menu", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menu_object() throws Exception {
        test("menu", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_title() throws Exception {
        test("menu", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_a() throws Exception {
        test("menuitem", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_abbr() throws Exception {
        test("menuitem", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_acronym() throws Exception {
        test("menuitem", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_address() throws Exception {
        test("menuitem", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_applet() throws Exception {
        test("menuitem", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_article() throws Exception {
        test("menuitem", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_aside() throws Exception {
        test("menuitem", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_audio() throws Exception {
        test("menuitem", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_b() throws Exception {
        test("menuitem", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_bdi() throws Exception {
        test("menuitem", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_bdo() throws Exception {
        test("menuitem", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_big() throws Exception {
        test("menuitem", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_blink() throws Exception {
        test("menuitem", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_blockquote() throws Exception {
        test("menuitem", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_body() throws Exception {
        test("menuitem", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_button() throws Exception {
        test("menuitem", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_canvas() throws Exception {
        test("menuitem", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_caption() throws Exception {
        test("menuitem", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_center() throws Exception {
        test("menuitem", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_cite() throws Exception {
        test("menuitem", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_code() throws Exception {
        test("menuitem", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_col() throws Exception {
        test("menuitem", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_colgroup() throws Exception {
        test("menuitem", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_datalist() throws Exception {
        test("menuitem", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dd() throws Exception {
        test("menuitem", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_del() throws Exception {
        test("menuitem", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_details() throws Exception {
        test("menuitem", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dfn() throws Exception {
        test("menuitem", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dialog() throws Exception {
        test("menuitem", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dir() throws Exception {
        test("menuitem", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_div() throws Exception {
        test("menuitem", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dl() throws Exception {
        test("menuitem", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_dt() throws Exception {
        test("menuitem", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_em() throws Exception {
        test("menuitem", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_fieldset() throws Exception {
        test("menuitem", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_figcaption() throws Exception {
        test("menuitem", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_figure() throws Exception {
        test("menuitem", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_font() throws Exception {
        test("menuitem", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_footer() throws Exception {
        test("menuitem", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_form() throws Exception {
        test("menuitem", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_frame() throws Exception {
        test("menuitem", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_frameset() throws Exception {
        test("menuitem", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h1() throws Exception {
        test("menuitem", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h2() throws Exception {
        test("menuitem", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h3() throws Exception {
        test("menuitem", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h4() throws Exception {
        test("menuitem", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h5() throws Exception {
        test("menuitem", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_h6() throws Exception {
        test("menuitem", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_head() throws Exception {
        test("menuitem", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_header() throws Exception {
        test("menuitem", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_html() throws Exception {
        test("menuitem", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_i() throws Exception {
        test("menuitem", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_iframe() throws Exception {
        test("menuitem", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_ins() throws Exception {
        test("menuitem", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_kbd() throws Exception {
        test("menuitem", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_label() throws Exception {
        test("menuitem", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_layer() throws Exception {
        test("menuitem", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_legend() throws Exception {
        test("menuitem", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_li() throws Exception {
        test("menuitem", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_listing() throws Exception {
        test("menuitem", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_main() throws Exception {
        test("menuitem", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_map() throws Exception {
        test("menuitem", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_mark() throws Exception {
        test("menuitem", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_marquee() throws Exception {
        test("menuitem", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_menu() throws Exception {
        test("menuitem", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_menuitem() throws Exception {
        test("menuitem", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_meter() throws Exception {
        test("menuitem", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_multicol() throws Exception {
        test("menuitem", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_nav() throws Exception {
        test("menuitem", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_nextid() throws Exception {
        test("menuitem", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_nobr() throws Exception {
        test("menuitem", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_noembed() throws Exception {
        test("menuitem", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_noframes() throws Exception {
        test("menuitem", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_nolayer() throws Exception {
        test("menuitem", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_noscript() throws Exception {
        test("menuitem", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_object() throws Exception {
        test("menuitem", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_ol() throws Exception {
        test("menuitem", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_optgroup() throws Exception {
        test("menuitem", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_option() throws Exception {
        test("menuitem", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_output() throws Exception {
        test("menuitem", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_p() throws Exception {
        test("menuitem", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_plaintext() throws Exception {
        test("menuitem", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_pre() throws Exception {
        test("menuitem", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_progress() throws Exception {
        test("menuitem", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_q() throws Exception {
        test("menuitem", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_rp() throws Exception {
        test("menuitem", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_rt() throws Exception {
        test("menuitem", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_ruby() throws Exception {
        test("menuitem", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_s() throws Exception {
        test("menuitem", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_samp() throws Exception {
        test("menuitem", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _menuitem_script() throws Exception {
        test("menuitem", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_section() throws Exception {
        test("menuitem", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_select() throws Exception {
        test("menuitem", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_small() throws Exception {
        test("menuitem", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_span() throws Exception {
        test("menuitem", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_strike() throws Exception {
        test("menuitem", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_strong() throws Exception {
        test("menuitem", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_style() throws Exception {
        test("menuitem", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_sub() throws Exception {
        test("menuitem", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_summary() throws Exception {
        test("menuitem", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_sup() throws Exception {
        test("menuitem", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_table() throws Exception {
        test("menuitem", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_tbody() throws Exception {
        test("menuitem", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_td() throws Exception {
        test("menuitem", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_textarea() throws Exception {
        test("menuitem", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_tfoot() throws Exception {
        test("menuitem", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_th() throws Exception {
        test("menuitem", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_thead() throws Exception {
        test("menuitem", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_time() throws Exception {
        test("menuitem", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menuitem_title() throws Exception {
        test("menuitem", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _menuitem_tr() throws Exception {
        test("menuitem", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_tt() throws Exception {
        test("menuitem", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_u() throws Exception {
        test("menuitem", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_ul() throws Exception {
        test("menuitem", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_var() throws Exception {
        test("menuitem", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_video() throws Exception {
        test("menuitem", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_xmp() throws Exception {
        test("menuitem", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_a() throws Exception {
        test("meter", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_abbr() throws Exception {
        test("meter", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_acronym() throws Exception {
        test("meter", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_address() throws Exception {
        test("meter", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_applet() throws Exception {
        test("meter", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_article() throws Exception {
        test("meter", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_aside() throws Exception {
        test("meter", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_audio() throws Exception {
        test("meter", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_b() throws Exception {
        test("meter", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_bdi() throws Exception {
        test("meter", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_bdo() throws Exception {
        test("meter", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_big() throws Exception {
        test("meter", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_blink() throws Exception {
        test("meter", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_blockquote() throws Exception {
        test("meter", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_body() throws Exception {
        test("meter", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_button() throws Exception {
        test("meter", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_canvas() throws Exception {
        test("meter", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_caption() throws Exception {
        test("meter", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_center() throws Exception {
        test("meter", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_cite() throws Exception {
        test("meter", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_code() throws Exception {
        test("meter", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_col() throws Exception {
        test("meter", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_colgroup() throws Exception {
        test("meter", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_datalist() throws Exception {
        test("meter", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dd() throws Exception {
        test("meter", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_del() throws Exception {
        test("meter", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_details() throws Exception {
        test("meter", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dfn() throws Exception {
        test("meter", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dialog() throws Exception {
        test("meter", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dir() throws Exception {
        test("meter", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_div() throws Exception {
        test("meter", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dl() throws Exception {
        test("meter", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_dt() throws Exception {
        test("meter", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_em() throws Exception {
        test("meter", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_fieldset() throws Exception {
        test("meter", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_figcaption() throws Exception {
        test("meter", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_figure() throws Exception {
        test("meter", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_font() throws Exception {
        test("meter", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_footer() throws Exception {
        test("meter", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_form() throws Exception {
        test("meter", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_frame() throws Exception {
        test("meter", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_frameset() throws Exception {
        test("meter", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h1() throws Exception {
        test("meter", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h2() throws Exception {
        test("meter", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h3() throws Exception {
        test("meter", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h4() throws Exception {
        test("meter", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h5() throws Exception {
        test("meter", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_h6() throws Exception {
        test("meter", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_head() throws Exception {
        test("meter", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_header() throws Exception {
        test("meter", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_html() throws Exception {
        test("meter", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_i() throws Exception {
        test("meter", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_iframe() throws Exception {
        test("meter", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_ins() throws Exception {
        test("meter", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_kbd() throws Exception {
        test("meter", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_label() throws Exception {
        test("meter", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_layer() throws Exception {
        test("meter", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_legend() throws Exception {
        test("meter", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_li() throws Exception {
        test("meter", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_listing() throws Exception {
        test("meter", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_main() throws Exception {
        test("meter", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_map() throws Exception {
        test("meter", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_mark() throws Exception {
        test("meter", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_marquee() throws Exception {
        test("meter", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_menu() throws Exception {
        test("meter", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_menuitem() throws Exception {
        test("meter", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_meter() throws Exception {
        test("meter", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_multicol() throws Exception {
        test("meter", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_nav() throws Exception {
        test("meter", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_nextid() throws Exception {
        test("meter", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_nobr() throws Exception {
        test("meter", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_noembed() throws Exception {
        test("meter", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_noframes() throws Exception {
        test("meter", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_nolayer() throws Exception {
        test("meter", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_noscript() throws Exception {
        test("meter", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_object() throws Exception {
        test("meter", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_ol() throws Exception {
        test("meter", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_optgroup() throws Exception {
        test("meter", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_option() throws Exception {
        test("meter", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_output() throws Exception {
        test("meter", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_p() throws Exception {
        test("meter", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_plaintext() throws Exception {
        test("meter", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_pre() throws Exception {
        test("meter", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_progress() throws Exception {
        test("meter", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_q() throws Exception {
        test("meter", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_rp() throws Exception {
        test("meter", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_rt() throws Exception {
        test("meter", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_ruby() throws Exception {
        test("meter", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_s() throws Exception {
        test("meter", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_samp() throws Exception {
        test("meter", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _meter_script() throws Exception {
        test("meter", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_section() throws Exception {
        test("meter", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_select() throws Exception {
        test("meter", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_small() throws Exception {
        test("meter", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_span() throws Exception {
        test("meter", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_strike() throws Exception {
        test("meter", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_strong() throws Exception {
        test("meter", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_style() throws Exception {
        test("meter", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_sub() throws Exception {
        test("meter", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_summary() throws Exception {
        test("meter", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_sup() throws Exception {
        test("meter", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_table() throws Exception {
        test("meter", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_tbody() throws Exception {
        test("meter", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_td() throws Exception {
        test("meter", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_textarea() throws Exception {
        test("meter", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_tfoot() throws Exception {
        test("meter", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_th() throws Exception {
        test("meter", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_thead() throws Exception {
        test("meter", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_time() throws Exception {
        test("meter", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _meter_title() throws Exception {
        test("meter", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _meter_tr() throws Exception {
        test("meter", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_tt() throws Exception {
        test("meter", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_u() throws Exception {
        test("meter", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_ul() throws Exception {
        test("meter", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_var() throws Exception {
        test("meter", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_video() throws Exception {
        test("meter", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_xmp() throws Exception {
        test("meter", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_a() throws Exception {
        test("multicol", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_abbr() throws Exception {
        test("multicol", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_acronym() throws Exception {
        test("multicol", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_address() throws Exception {
        test("multicol", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_applet() throws Exception {
        test("multicol", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_article() throws Exception {
        test("multicol", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_aside() throws Exception {
        test("multicol", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_audio() throws Exception {
        test("multicol", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_b() throws Exception {
        test("multicol", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_bdi() throws Exception {
        test("multicol", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_bdo() throws Exception {
        test("multicol", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_big() throws Exception {
        test("multicol", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_blink() throws Exception {
        test("multicol", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_blockquote() throws Exception {
        test("multicol", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_body() throws Exception {
        test("multicol", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_button() throws Exception {
        test("multicol", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_canvas() throws Exception {
        test("multicol", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_caption() throws Exception {
        test("multicol", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_center() throws Exception {
        test("multicol", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_cite() throws Exception {
        test("multicol", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_code() throws Exception {
        test("multicol", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_col() throws Exception {
        test("multicol", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_colgroup() throws Exception {
        test("multicol", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_datalist() throws Exception {
        test("multicol", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dd() throws Exception {
        test("multicol", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_del() throws Exception {
        test("multicol", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_details() throws Exception {
        test("multicol", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dfn() throws Exception {
        test("multicol", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dialog() throws Exception {
        test("multicol", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dir() throws Exception {
        test("multicol", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_div() throws Exception {
        test("multicol", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dl() throws Exception {
        test("multicol", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_dt() throws Exception {
        test("multicol", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_em() throws Exception {
        test("multicol", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_fieldset() throws Exception {
        test("multicol", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_figcaption() throws Exception {
        test("multicol", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_figure() throws Exception {
        test("multicol", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_font() throws Exception {
        test("multicol", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_footer() throws Exception {
        test("multicol", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_form() throws Exception {
        test("multicol", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_frame() throws Exception {
        test("multicol", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_frameset() throws Exception {
        test("multicol", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h1() throws Exception {
        test("multicol", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h2() throws Exception {
        test("multicol", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h3() throws Exception {
        test("multicol", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h4() throws Exception {
        test("multicol", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h5() throws Exception {
        test("multicol", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_h6() throws Exception {
        test("multicol", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_head() throws Exception {
        test("multicol", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_header() throws Exception {
        test("multicol", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_html() throws Exception {
        test("multicol", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_i() throws Exception {
        test("multicol", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_iframe() throws Exception {
        test("multicol", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_ins() throws Exception {
        test("multicol", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_kbd() throws Exception {
        test("multicol", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_label() throws Exception {
        test("multicol", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_layer() throws Exception {
        test("multicol", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_legend() throws Exception {
        test("multicol", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_li() throws Exception {
        test("multicol", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_listing() throws Exception {
        test("multicol", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_main() throws Exception {
        test("multicol", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_map() throws Exception {
        test("multicol", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_mark() throws Exception {
        test("multicol", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_marquee() throws Exception {
        test("multicol", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_menu() throws Exception {
        test("multicol", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_menuitem() throws Exception {
        test("multicol", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_meter() throws Exception {
        test("multicol", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_multicol() throws Exception {
        test("multicol", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_nav() throws Exception {
        test("multicol", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_nextid() throws Exception {
        test("multicol", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_nobr() throws Exception {
        test("multicol", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_noembed() throws Exception {
        test("multicol", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_noframes() throws Exception {
        test("multicol", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_nolayer() throws Exception {
        test("multicol", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_noscript() throws Exception {
        test("multicol", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_object() throws Exception {
        test("multicol", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_ol() throws Exception {
        test("multicol", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_optgroup() throws Exception {
        test("multicol", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_option() throws Exception {
        test("multicol", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_output() throws Exception {
        test("multicol", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_p() throws Exception {
        test("multicol", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_plaintext() throws Exception {
        test("multicol", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_pre() throws Exception {
        test("multicol", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_progress() throws Exception {
        test("multicol", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_q() throws Exception {
        test("multicol", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_rp() throws Exception {
        test("multicol", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_rt() throws Exception {
        test("multicol", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_ruby() throws Exception {
        test("multicol", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_s() throws Exception {
        test("multicol", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_samp() throws Exception {
        test("multicol", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _multicol_script() throws Exception {
        test("multicol", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_section() throws Exception {
        test("multicol", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_select() throws Exception {
        test("multicol", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_small() throws Exception {
        test("multicol", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_span() throws Exception {
        test("multicol", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_strike() throws Exception {
        test("multicol", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_strong() throws Exception {
        test("multicol", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_style() throws Exception {
        test("multicol", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_sub() throws Exception {
        test("multicol", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_summary() throws Exception {
        test("multicol", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_sup() throws Exception {
        test("multicol", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_table() throws Exception {
        test("multicol", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_tbody() throws Exception {
        test("multicol", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_td() throws Exception {
        test("multicol", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_textarea() throws Exception {
        test("multicol", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_tfoot() throws Exception {
        test("multicol", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_th() throws Exception {
        test("multicol", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_thead() throws Exception {
        test("multicol", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_time() throws Exception {
        test("multicol", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _multicol_title() throws Exception {
        test("multicol", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _multicol_tr() throws Exception {
        test("multicol", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_tt() throws Exception {
        test("multicol", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_u() throws Exception {
        test("multicol", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_ul() throws Exception {
        test("multicol", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_var() throws Exception {
        test("multicol", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_video() throws Exception {
        test("multicol", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_xmp() throws Exception {
        test("multicol", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_a() throws Exception {
        test("nav", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_abbr() throws Exception {
        test("nav", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_acronym() throws Exception {
        test("nav", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_address() throws Exception {
        test("nav", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_applet() throws Exception {
        test("nav", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_article() throws Exception {
        test("nav", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_aside() throws Exception {
        test("nav", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_audio() throws Exception {
        test("nav", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_b() throws Exception {
        test("nav", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_bdi() throws Exception {
        test("nav", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_bdo() throws Exception {
        test("nav", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_big() throws Exception {
        test("nav", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_blink() throws Exception {
        test("nav", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_blockquote() throws Exception {
        test("nav", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_body() throws Exception {
        test("nav", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_button() throws Exception {
        test("nav", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_canvas() throws Exception {
        test("nav", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_caption() throws Exception {
        test("nav", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_center() throws Exception {
        test("nav", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_cite() throws Exception {
        test("nav", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_code() throws Exception {
        test("nav", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_col() throws Exception {
        test("nav", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_colgroup() throws Exception {
        test("nav", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_datalist() throws Exception {
        test("nav", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dd() throws Exception {
        test("nav", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_del() throws Exception {
        test("nav", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_details() throws Exception {
        test("nav", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dfn() throws Exception {
        test("nav", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dialog() throws Exception {
        test("nav", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dir() throws Exception {
        test("nav", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_div() throws Exception {
        test("nav", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dl() throws Exception {
        test("nav", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_dt() throws Exception {
        test("nav", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_em() throws Exception {
        test("nav", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_fieldset() throws Exception {
        test("nav", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_figcaption() throws Exception {
        test("nav", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_figure() throws Exception {
        test("nav", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_font() throws Exception {
        test("nav", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_footer() throws Exception {
        test("nav", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_form() throws Exception {
        test("nav", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_frame() throws Exception {
        test("nav", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_frameset() throws Exception {
        test("nav", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h1() throws Exception {
        test("nav", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h2() throws Exception {
        test("nav", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h3() throws Exception {
        test("nav", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h4() throws Exception {
        test("nav", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h5() throws Exception {
        test("nav", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_h6() throws Exception {
        test("nav", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_head() throws Exception {
        test("nav", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_header() throws Exception {
        test("nav", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_html() throws Exception {
        test("nav", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_i() throws Exception {
        test("nav", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_iframe() throws Exception {
        test("nav", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_ins() throws Exception {
        test("nav", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_kbd() throws Exception {
        test("nav", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_label() throws Exception {
        test("nav", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_layer() throws Exception {
        test("nav", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_legend() throws Exception {
        test("nav", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_li() throws Exception {
        test("nav", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_listing() throws Exception {
        test("nav", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_main() throws Exception {
        test("nav", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_map() throws Exception {
        test("nav", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_mark() throws Exception {
        test("nav", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_marquee() throws Exception {
        test("nav", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_menu() throws Exception {
        test("nav", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_menuitem() throws Exception {
        test("nav", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_meter() throws Exception {
        test("nav", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_multicol() throws Exception {
        test("nav", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_nav() throws Exception {
        test("nav", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_nextid() throws Exception {
        test("nav", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_nobr() throws Exception {
        test("nav", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_noembed() throws Exception {
        test("nav", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_noframes() throws Exception {
        test("nav", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_nolayer() throws Exception {
        test("nav", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_noscript() throws Exception {
        test("nav", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_object() throws Exception {
        test("nav", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_ol() throws Exception {
        test("nav", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_optgroup() throws Exception {
        test("nav", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_option() throws Exception {
        test("nav", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_output() throws Exception {
        test("nav", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_p() throws Exception {
        test("nav", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_plaintext() throws Exception {
        test("nav", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_pre() throws Exception {
        test("nav", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_progress() throws Exception {
        test("nav", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_q() throws Exception {
        test("nav", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_rp() throws Exception {
        test("nav", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_rt() throws Exception {
        test("nav", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_ruby() throws Exception {
        test("nav", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_s() throws Exception {
        test("nav", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_samp() throws Exception {
        test("nav", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _nav_script() throws Exception {
        test("nav", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_section() throws Exception {
        test("nav", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_select() throws Exception {
        test("nav", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_small() throws Exception {
        test("nav", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_span() throws Exception {
        test("nav", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_strike() throws Exception {
        test("nav", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_strong() throws Exception {
        test("nav", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_style() throws Exception {
        test("nav", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_sub() throws Exception {
        test("nav", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_summary() throws Exception {
        test("nav", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_sup() throws Exception {
        test("nav", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_table() throws Exception {
        test("nav", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_tbody() throws Exception {
        test("nav", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_td() throws Exception {
        test("nav", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_textarea() throws Exception {
        test("nav", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_tfoot() throws Exception {
        test("nav", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_th() throws Exception {
        test("nav", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_thead() throws Exception {
        test("nav", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_time() throws Exception {
        test("nav", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nav_title() throws Exception {
        test("nav", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nav_tr() throws Exception {
        test("nav", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_tt() throws Exception {
        test("nav", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_u() throws Exception {
        test("nav", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_ul() throws Exception {
        test("nav", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_var() throws Exception {
        test("nav", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_video() throws Exception {
        test("nav", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_xmp() throws Exception {
        test("nav", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_a() throws Exception {
        test("nextid", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_abbr() throws Exception {
        test("nextid", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_acronym() throws Exception {
        test("nextid", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_address() throws Exception {
        test("nextid", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_applet() throws Exception {
        test("nextid", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_article() throws Exception {
        test("nextid", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_aside() throws Exception {
        test("nextid", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_audio() throws Exception {
        test("nextid", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_b() throws Exception {
        test("nextid", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_bdi() throws Exception {
        test("nextid", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_bdo() throws Exception {
        test("nextid", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_big() throws Exception {
        test("nextid", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_blink() throws Exception {
        test("nextid", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_blockquote() throws Exception {
        test("nextid", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_body() throws Exception {
        test("nextid", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_button() throws Exception {
        test("nextid", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_canvas() throws Exception {
        test("nextid", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_caption() throws Exception {
        test("nextid", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_center() throws Exception {
        test("nextid", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_cite() throws Exception {
        test("nextid", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_code() throws Exception {
        test("nextid", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_col() throws Exception {
        test("nextid", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_colgroup() throws Exception {
        test("nextid", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_datalist() throws Exception {
        test("nextid", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dd() throws Exception {
        test("nextid", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_del() throws Exception {
        test("nextid", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_details() throws Exception {
        test("nextid", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dfn() throws Exception {
        test("nextid", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dialog() throws Exception {
        test("nextid", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dir() throws Exception {
        test("nextid", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_div() throws Exception {
        test("nextid", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dl() throws Exception {
        test("nextid", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_dt() throws Exception {
        test("nextid", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_em() throws Exception {
        test("nextid", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_fieldset() throws Exception {
        test("nextid", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_figcaption() throws Exception {
        test("nextid", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_figure() throws Exception {
        test("nextid", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_font() throws Exception {
        test("nextid", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_footer() throws Exception {
        test("nextid", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_form() throws Exception {
        test("nextid", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_frame() throws Exception {
        test("nextid", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_frameset() throws Exception {
        test("nextid", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h1() throws Exception {
        test("nextid", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h2() throws Exception {
        test("nextid", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h3() throws Exception {
        test("nextid", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h4() throws Exception {
        test("nextid", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h5() throws Exception {
        test("nextid", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_h6() throws Exception {
        test("nextid", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_head() throws Exception {
        test("nextid", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_header() throws Exception {
        test("nextid", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_html() throws Exception {
        test("nextid", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_i() throws Exception {
        test("nextid", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_iframe() throws Exception {
        test("nextid", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_ins() throws Exception {
        test("nextid", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_kbd() throws Exception {
        test("nextid", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_label() throws Exception {
        test("nextid", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_layer() throws Exception {
        test("nextid", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_legend() throws Exception {
        test("nextid", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_li() throws Exception {
        test("nextid", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_listing() throws Exception {
        test("nextid", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_main() throws Exception {
        test("nextid", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_map() throws Exception {
        test("nextid", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_mark() throws Exception {
        test("nextid", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_marquee() throws Exception {
        test("nextid", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_menu() throws Exception {
        test("nextid", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_menuitem() throws Exception {
        test("nextid", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_meter() throws Exception {
        test("nextid", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_multicol() throws Exception {
        test("nextid", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_nav() throws Exception {
        test("nextid", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_nextid() throws Exception {
        test("nextid", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_nobr() throws Exception {
        test("nextid", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_noembed() throws Exception {
        test("nextid", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_noframes() throws Exception {
        test("nextid", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_nolayer() throws Exception {
        test("nextid", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_noscript() throws Exception {
        test("nextid", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_object() throws Exception {
        test("nextid", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_ol() throws Exception {
        test("nextid", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_optgroup() throws Exception {
        test("nextid", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_option() throws Exception {
        test("nextid", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_output() throws Exception {
        test("nextid", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_p() throws Exception {
        test("nextid", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_plaintext() throws Exception {
        test("nextid", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_pre() throws Exception {
        test("nextid", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_progress() throws Exception {
        test("nextid", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_q() throws Exception {
        test("nextid", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_rp() throws Exception {
        test("nextid", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_rt() throws Exception {
        test("nextid", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_ruby() throws Exception {
        test("nextid", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_s() throws Exception {
        test("nextid", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_samp() throws Exception {
        test("nextid", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _nextid_script() throws Exception {
        test("nextid", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_section() throws Exception {
        test("nextid", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_select() throws Exception {
        test("nextid", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_small() throws Exception {
        test("nextid", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_span() throws Exception {
        test("nextid", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_strike() throws Exception {
        test("nextid", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_strong() throws Exception {
        test("nextid", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_style() throws Exception {
        test("nextid", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_sub() throws Exception {
        test("nextid", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_summary() throws Exception {
        test("nextid", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_sup() throws Exception {
        test("nextid", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_table() throws Exception {
        test("nextid", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_tbody() throws Exception {
        test("nextid", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_td() throws Exception {
        test("nextid", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_textarea() throws Exception {
        test("nextid", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_tfoot() throws Exception {
        test("nextid", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_th() throws Exception {
        test("nextid", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_thead() throws Exception {
        test("nextid", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_time() throws Exception {
        test("nextid", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_title() throws Exception {
        test("nextid", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_tr() throws Exception {
        test("nextid", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_tt() throws Exception {
        test("nextid", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_u() throws Exception {
        test("nextid", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_ul() throws Exception {
        test("nextid", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_var() throws Exception {
        test("nextid", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_video() throws Exception {
        test("nextid", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nextid_xmp() throws Exception {
        test("nextid", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nobr_body() throws Exception {
        test("nobr", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nobr_head() throws Exception {
        test("nobr", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nobr_html() throws Exception {
        test("nobr", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nobr_object() throws Exception {
        test("nobr", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nobr_title() throws Exception {
        test("nobr", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_a() throws Exception {
        test("noembed", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_abbr() throws Exception {
        test("noembed", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_acronym() throws Exception {
        test("noembed", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_address() throws Exception {
        test("noembed", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_applet() throws Exception {
        test("noembed", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_area() throws Exception {
        test("noembed", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_article() throws Exception {
        test("noembed", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_aside() throws Exception {
        test("noembed", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_audio() throws Exception {
        test("noembed", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_b() throws Exception {
        test("noembed", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_base() throws Exception {
        test("noembed", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ IE8, CHROME, FF, IE11 })
    public void _noembed_basefont() throws Exception {
        test("noembed", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_bdi() throws Exception {
        test("noembed", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_bdo() throws Exception {
        test("noembed", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_bgsound() throws Exception {
        test("noembed", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_big() throws Exception {
        test("noembed", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_blink() throws Exception {
        test("noembed", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_blockquote() throws Exception {
        test("noembed", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_body() throws Exception {
        test("noembed", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_br() throws Exception {
        test("noembed", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_button() throws Exception {
        test("noembed", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_canvas() throws Exception {
        test("noembed", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_caption() throws Exception {
        test("noembed", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_center() throws Exception {
        test("noembed", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_cite() throws Exception {
        test("noembed", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_code() throws Exception {
        test("noembed", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_col() throws Exception {
        test("noembed", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_colgroup() throws Exception {
        test("noembed", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_command() throws Exception {
        test("noembed", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_datalist() throws Exception {
        test("noembed", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dd() throws Exception {
        test("noembed", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_del() throws Exception {
        test("noembed", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_details() throws Exception {
        test("noembed", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dfn() throws Exception {
        test("noembed", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dialog() throws Exception {
        test("noembed", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dir() throws Exception {
        test("noembed", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_div() throws Exception {
        test("noembed", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dl() throws Exception {
        test("noembed", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_dt() throws Exception {
        test("noembed", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_em() throws Exception {
        test("noembed", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_embed() throws Exception {
        test("noembed", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_fieldset() throws Exception {
        test("noembed", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_figcaption() throws Exception {
        test("noembed", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_figure() throws Exception {
        test("noembed", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_font() throws Exception {
        test("noembed", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_footer() throws Exception {
        test("noembed", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_form() throws Exception {
        test("noembed", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_frame() throws Exception {
        test("noembed", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_frameset() throws Exception {
        test("noembed", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h1() throws Exception {
        test("noembed", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h2() throws Exception {
        test("noembed", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h3() throws Exception {
        test("noembed", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h4() throws Exception {
        test("noembed", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h5() throws Exception {
        test("noembed", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_h6() throws Exception {
        test("noembed", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_head() throws Exception {
        test("noembed", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_header() throws Exception {
        test("noembed", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_hr() throws Exception {
        test("noembed", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_html() throws Exception {
        test("noembed", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_i() throws Exception {
        test("noembed", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_iframe() throws Exception {
        test("noembed", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_image() throws Exception {
        test("noembed", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_img() throws Exception {
        test("noembed", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_ins() throws Exception {
        test("noembed", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_isindex() throws Exception {
        test("noembed", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_kbd() throws Exception {
        test("noembed", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ IE8, CHROME, FF, IE11 })
    public void _noembed_keygen() throws Exception {
        test("noembed", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_label() throws Exception {
        test("noembed", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_layer() throws Exception {
        test("noembed", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_legend() throws Exception {
        test("noembed", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_li() throws Exception {
        test("noembed", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_link() throws Exception {
        test("noembed", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_listing() throws Exception {
        test("noembed", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_main() throws Exception {
        test("noembed", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_map() throws Exception {
        test("noembed", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_mark() throws Exception {
        test("noembed", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_marquee() throws Exception {
        test("noembed", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_menu() throws Exception {
        test("noembed", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_menuitem() throws Exception {
        test("noembed", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_meta() throws Exception {
        test("noembed", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_meter() throws Exception {
        test("noembed", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_multicol() throws Exception {
        test("noembed", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_nav() throws Exception {
        test("noembed", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_nextid() throws Exception {
        test("noembed", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_nobr() throws Exception {
        test("noembed", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_noembed() throws Exception {
        test("noembed", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_noframes() throws Exception {
        test("noembed", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_nolayer() throws Exception {
        test("noembed", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_noscript() throws Exception {
        test("noembed", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_object() throws Exception {
        test("noembed", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_ol() throws Exception {
        test("noembed", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_optgroup() throws Exception {
        test("noembed", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_option() throws Exception {
        test("noembed", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_output() throws Exception {
        test("noembed", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_p() throws Exception {
        test("noembed", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_param() throws Exception {
        test("noembed", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_plaintext() throws Exception {
        test("noembed", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_pre() throws Exception {
        test("noembed", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_progress() throws Exception {
        test("noembed", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_q() throws Exception {
        test("noembed", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_rp() throws Exception {
        test("noembed", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_rt() throws Exception {
        test("noembed", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_ruby() throws Exception {
        test("noembed", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_s() throws Exception {
        test("noembed", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_samp() throws Exception {
        test("noembed", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_script() throws Exception {
        test("noembed", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_section() throws Exception {
        test("noembed", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_select() throws Exception {
        test("noembed", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_small() throws Exception {
        test("noembed", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_source() throws Exception {
        test("noembed", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_span() throws Exception {
        test("noembed", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_strike() throws Exception {
        test("noembed", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_strong() throws Exception {
        test("noembed", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_style() throws Exception {
        test("noembed", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_sub() throws Exception {
        test("noembed", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_summary() throws Exception {
        test("noembed", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_sup() throws Exception {
        test("noembed", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_table() throws Exception {
        test("noembed", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_tbody() throws Exception {
        test("noembed", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_td() throws Exception {
        test("noembed", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_textarea() throws Exception {
        test("noembed", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_tfoot() throws Exception {
        test("noembed", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_th() throws Exception {
        test("noembed", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_thead() throws Exception {
        test("noembed", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_time() throws Exception {
        test("noembed", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _noembed_title() throws Exception {
        test("noembed", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noembed_tr() throws Exception {
        test("noembed", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_track() throws Exception {
        test("noembed", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_tt() throws Exception {
        test("noembed", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_u() throws Exception {
        test("noembed", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_ul() throws Exception {
        test("noembed", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_var() throws Exception {
        test("noembed", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_video() throws Exception {
        test("noembed", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_wbr() throws Exception {
        test("noembed", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_xmp() throws Exception {
        test("noembed", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_a() throws Exception {
        test("noframes", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_abbr() throws Exception {
        test("noframes", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_acronym() throws Exception {
        test("noframes", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_address() throws Exception {
        test("noframes", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_applet() throws Exception {
        test("noframes", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_area() throws Exception {
        test("noframes", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_article() throws Exception {
        test("noframes", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_aside() throws Exception {
        test("noframes", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_audio() throws Exception {
        test("noframes", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_b() throws Exception {
        test("noframes", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_base() throws Exception {
        test("noframes", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_basefont() throws Exception {
        test("noframes", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_bdi() throws Exception {
        test("noframes", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_bdo() throws Exception {
        test("noframes", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_bgsound() throws Exception {
        test("noframes", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_big() throws Exception {
        test("noframes", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_blink() throws Exception {
        test("noframes", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_blockquote() throws Exception {
        test("noframes", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_body() throws Exception {
        test("noframes", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_br() throws Exception {
        test("noframes", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_button() throws Exception {
        test("noframes", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_canvas() throws Exception {
        test("noframes", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_caption() throws Exception {
        test("noframes", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_center() throws Exception {
        test("noframes", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_cite() throws Exception {
        test("noframes", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_code() throws Exception {
        test("noframes", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_col() throws Exception {
        test("noframes", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_colgroup() throws Exception {
        test("noframes", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_command() throws Exception {
        test("noframes", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_datalist() throws Exception {
        test("noframes", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dd() throws Exception {
        test("noframes", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_del() throws Exception {
        test("noframes", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_details() throws Exception {
        test("noframes", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dfn() throws Exception {
        test("noframes", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dialog() throws Exception {
        test("noframes", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dir() throws Exception {
        test("noframes", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_div() throws Exception {
        test("noframes", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dl() throws Exception {
        test("noframes", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_dt() throws Exception {
        test("noframes", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_em() throws Exception {
        test("noframes", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_embed() throws Exception {
        test("noframes", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_fieldset() throws Exception {
        test("noframes", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_figcaption() throws Exception {
        test("noframes", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_figure() throws Exception {
        test("noframes", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_font() throws Exception {
        test("noframes", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_footer() throws Exception {
        test("noframes", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_form() throws Exception {
        test("noframes", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_frame() throws Exception {
        test("noframes", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_frameset() throws Exception {
        test("noframes", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h1() throws Exception {
        test("noframes", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h2() throws Exception {
        test("noframes", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h3() throws Exception {
        test("noframes", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h4() throws Exception {
        test("noframes", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h5() throws Exception {
        test("noframes", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_h6() throws Exception {
        test("noframes", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_head() throws Exception {
        test("noframes", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_header() throws Exception {
        test("noframes", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_hr() throws Exception {
        test("noframes", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_html() throws Exception {
        test("noframes", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_i() throws Exception {
        test("noframes", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_iframe() throws Exception {
        test("noframes", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_image() throws Exception {
        test("noframes", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_img() throws Exception {
        test("noframes", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_ins() throws Exception {
        test("noframes", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_isindex() throws Exception {
        test("noframes", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_kbd() throws Exception {
        test("noframes", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_keygen() throws Exception {
        test("noframes", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_label() throws Exception {
        test("noframes", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_layer() throws Exception {
        test("noframes", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_legend() throws Exception {
        test("noframes", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_li() throws Exception {
        test("noframes", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_link() throws Exception {
        test("noframes", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_listing() throws Exception {
        test("noframes", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_main() throws Exception {
        test("noframes", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_map() throws Exception {
        test("noframes", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_mark() throws Exception {
        test("noframes", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_marquee() throws Exception {
        test("noframes", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_menu() throws Exception {
        test("noframes", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_menuitem() throws Exception {
        test("noframes", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_meta() throws Exception {
        test("noframes", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_meter() throws Exception {
        test("noframes", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_multicol() throws Exception {
        test("noframes", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_nav() throws Exception {
        test("noframes", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_nextid() throws Exception {
        test("noframes", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_nobr() throws Exception {
        test("noframes", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_noembed() throws Exception {
        test("noframes", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_noframes() throws Exception {
        test("noframes", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_nolayer() throws Exception {
        test("noframes", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_noscript() throws Exception {
        test("noframes", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_object() throws Exception {
        test("noframes", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_ol() throws Exception {
        test("noframes", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_optgroup() throws Exception {
        test("noframes", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_option() throws Exception {
        test("noframes", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_output() throws Exception {
        test("noframes", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_p() throws Exception {
        test("noframes", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_param() throws Exception {
        test("noframes", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_plaintext() throws Exception {
        test("noframes", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_pre() throws Exception {
        test("noframes", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_progress() throws Exception {
        test("noframes", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_q() throws Exception {
        test("noframes", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_rp() throws Exception {
        test("noframes", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_rt() throws Exception {
        test("noframes", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_ruby() throws Exception {
        test("noframes", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_s() throws Exception {
        test("noframes", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_samp() throws Exception {
        test("noframes", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_script() throws Exception {
        test("noframes", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_section() throws Exception {
        test("noframes", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_select() throws Exception {
        test("noframes", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_small() throws Exception {
        test("noframes", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_source() throws Exception {
        test("noframes", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_span() throws Exception {
        test("noframes", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_strike() throws Exception {
        test("noframes", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_strong() throws Exception {
        test("noframes", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_style() throws Exception {
        test("noframes", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_sub() throws Exception {
        test("noframes", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_summary() throws Exception {
        test("noframes", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_sup() throws Exception {
        test("noframes", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_table() throws Exception {
        test("noframes", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_tbody() throws Exception {
        test("noframes", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_td() throws Exception {
        test("noframes", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_textarea() throws Exception {
        test("noframes", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_tfoot() throws Exception {
        test("noframes", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_th() throws Exception {
        test("noframes", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_thead() throws Exception {
        test("noframes", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_time() throws Exception {
        test("noframes", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_title() throws Exception {
        test("noframes", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_tr() throws Exception {
        test("noframes", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_track() throws Exception {
        test("noframes", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_tt() throws Exception {
        test("noframes", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_u() throws Exception {
        test("noframes", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_ul() throws Exception {
        test("noframes", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_var() throws Exception {
        test("noframes", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_video() throws Exception {
        test("noframes", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_wbr() throws Exception {
        test("noframes", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_xmp() throws Exception {
        test("noframes", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_a() throws Exception {
        test("nolayer", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_abbr() throws Exception {
        test("nolayer", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_acronym() throws Exception {
        test("nolayer", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_address() throws Exception {
        test("nolayer", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_applet() throws Exception {
        test("nolayer", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_article() throws Exception {
        test("nolayer", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_aside() throws Exception {
        test("nolayer", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_audio() throws Exception {
        test("nolayer", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_b() throws Exception {
        test("nolayer", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_bdi() throws Exception {
        test("nolayer", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_bdo() throws Exception {
        test("nolayer", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_big() throws Exception {
        test("nolayer", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_blink() throws Exception {
        test("nolayer", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_blockquote() throws Exception {
        test("nolayer", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_body() throws Exception {
        test("nolayer", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_button() throws Exception {
        test("nolayer", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_canvas() throws Exception {
        test("nolayer", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_caption() throws Exception {
        test("nolayer", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_center() throws Exception {
        test("nolayer", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_cite() throws Exception {
        test("nolayer", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_code() throws Exception {
        test("nolayer", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_col() throws Exception {
        test("nolayer", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_colgroup() throws Exception {
        test("nolayer", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_datalist() throws Exception {
        test("nolayer", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dd() throws Exception {
        test("nolayer", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_del() throws Exception {
        test("nolayer", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_details() throws Exception {
        test("nolayer", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dfn() throws Exception {
        test("nolayer", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dialog() throws Exception {
        test("nolayer", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dir() throws Exception {
        test("nolayer", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_div() throws Exception {
        test("nolayer", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dl() throws Exception {
        test("nolayer", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_dt() throws Exception {
        test("nolayer", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_em() throws Exception {
        test("nolayer", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_fieldset() throws Exception {
        test("nolayer", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_figcaption() throws Exception {
        test("nolayer", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_figure() throws Exception {
        test("nolayer", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_font() throws Exception {
        test("nolayer", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_footer() throws Exception {
        test("nolayer", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_form() throws Exception {
        test("nolayer", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_frame() throws Exception {
        test("nolayer", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_frameset() throws Exception {
        test("nolayer", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h1() throws Exception {
        test("nolayer", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h2() throws Exception {
        test("nolayer", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h3() throws Exception {
        test("nolayer", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h4() throws Exception {
        test("nolayer", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h5() throws Exception {
        test("nolayer", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_h6() throws Exception {
        test("nolayer", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_head() throws Exception {
        test("nolayer", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_header() throws Exception {
        test("nolayer", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_html() throws Exception {
        test("nolayer", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_i() throws Exception {
        test("nolayer", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_iframe() throws Exception {
        test("nolayer", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_ins() throws Exception {
        test("nolayer", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_kbd() throws Exception {
        test("nolayer", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_label() throws Exception {
        test("nolayer", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_layer() throws Exception {
        test("nolayer", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_legend() throws Exception {
        test("nolayer", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_li() throws Exception {
        test("nolayer", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_listing() throws Exception {
        test("nolayer", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_main() throws Exception {
        test("nolayer", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_map() throws Exception {
        test("nolayer", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_mark() throws Exception {
        test("nolayer", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_marquee() throws Exception {
        test("nolayer", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_menu() throws Exception {
        test("nolayer", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_menuitem() throws Exception {
        test("nolayer", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_meter() throws Exception {
        test("nolayer", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_multicol() throws Exception {
        test("nolayer", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_nav() throws Exception {
        test("nolayer", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_nextid() throws Exception {
        test("nolayer", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_nobr() throws Exception {
        test("nolayer", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_noembed() throws Exception {
        test("nolayer", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_noframes() throws Exception {
        test("nolayer", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_nolayer() throws Exception {
        test("nolayer", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_noscript() throws Exception {
        test("nolayer", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_object() throws Exception {
        test("nolayer", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_ol() throws Exception {
        test("nolayer", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_optgroup() throws Exception {
        test("nolayer", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_option() throws Exception {
        test("nolayer", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_output() throws Exception {
        test("nolayer", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_p() throws Exception {
        test("nolayer", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_plaintext() throws Exception {
        test("nolayer", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_pre() throws Exception {
        test("nolayer", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_progress() throws Exception {
        test("nolayer", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_q() throws Exception {
        test("nolayer", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_rp() throws Exception {
        test("nolayer", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_rt() throws Exception {
        test("nolayer", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_ruby() throws Exception {
        test("nolayer", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_s() throws Exception {
        test("nolayer", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_samp() throws Exception {
        test("nolayer", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _nolayer_script() throws Exception {
        test("nolayer", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_section() throws Exception {
        test("nolayer", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_select() throws Exception {
        test("nolayer", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_small() throws Exception {
        test("nolayer", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_span() throws Exception {
        test("nolayer", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_strike() throws Exception {
        test("nolayer", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_strong() throws Exception {
        test("nolayer", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_style() throws Exception {
        test("nolayer", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_sub() throws Exception {
        test("nolayer", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_summary() throws Exception {
        test("nolayer", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_sup() throws Exception {
        test("nolayer", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_table() throws Exception {
        test("nolayer", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_tbody() throws Exception {
        test("nolayer", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_td() throws Exception {
        test("nolayer", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_textarea() throws Exception {
        test("nolayer", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_tfoot() throws Exception {
        test("nolayer", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_th() throws Exception {
        test("nolayer", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_thead() throws Exception {
        test("nolayer", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_time() throws Exception {
        test("nolayer", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nolayer_title() throws Exception {
        test("nolayer", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _nolayer_tr() throws Exception {
        test("nolayer", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_tt() throws Exception {
        test("nolayer", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_u() throws Exception {
        test("nolayer", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_ul() throws Exception {
        test("nolayer", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_var() throws Exception {
        test("nolayer", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_video() throws Exception {
        test("nolayer", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_xmp() throws Exception {
        test("nolayer", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_a() throws Exception {
        test("noscript", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_abbr() throws Exception {
        test("noscript", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_acronym() throws Exception {
        test("noscript", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_address() throws Exception {
        test("noscript", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_applet() throws Exception {
        test("noscript", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_area() throws Exception {
        test("noscript", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_article() throws Exception {
        test("noscript", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_aside() throws Exception {
        test("noscript", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_audio() throws Exception {
        test("noscript", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_b() throws Exception {
        test("noscript", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_base() throws Exception {
        test("noscript", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_basefont() throws Exception {
        test("noscript", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_bdi() throws Exception {
        test("noscript", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_bdo() throws Exception {
        test("noscript", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_bgsound() throws Exception {
        test("noscript", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_big() throws Exception {
        test("noscript", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_blink() throws Exception {
        test("noscript", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_blockquote() throws Exception {
        test("noscript", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_body() throws Exception {
        test("noscript", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_br() throws Exception {
        test("noscript", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_button() throws Exception {
        test("noscript", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_canvas() throws Exception {
        test("noscript", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_caption() throws Exception {
        test("noscript", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_center() throws Exception {
        test("noscript", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_cite() throws Exception {
        test("noscript", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_code() throws Exception {
        test("noscript", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_col() throws Exception {
        test("noscript", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_colgroup() throws Exception {
        test("noscript", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_command() throws Exception {
        test("noscript", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_datalist() throws Exception {
        test("noscript", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dd() throws Exception {
        test("noscript", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_del() throws Exception {
        test("noscript", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_details() throws Exception {
        test("noscript", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dfn() throws Exception {
        test("noscript", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dialog() throws Exception {
        test("noscript", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dir() throws Exception {
        test("noscript", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_div() throws Exception {
        test("noscript", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dl() throws Exception {
        test("noscript", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_dt() throws Exception {
        test("noscript", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_em() throws Exception {
        test("noscript", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_embed() throws Exception {
        test("noscript", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_fieldset() throws Exception {
        test("noscript", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_figcaption() throws Exception {
        test("noscript", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_figure() throws Exception {
        test("noscript", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_font() throws Exception {
        test("noscript", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_footer() throws Exception {
        test("noscript", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_form() throws Exception {
        test("noscript", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_frame() throws Exception {
        test("noscript", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_frameset() throws Exception {
        test("noscript", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h1() throws Exception {
        test("noscript", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h2() throws Exception {
        test("noscript", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h3() throws Exception {
        test("noscript", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h4() throws Exception {
        test("noscript", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h5() throws Exception {
        test("noscript", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_h6() throws Exception {
        test("noscript", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_head() throws Exception {
        test("noscript", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_header() throws Exception {
        test("noscript", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_hr() throws Exception {
        test("noscript", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_html() throws Exception {
        test("noscript", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_i() throws Exception {
        test("noscript", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_iframe() throws Exception {
        test("noscript", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_image() throws Exception {
        test("noscript", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_img() throws Exception {
        test("noscript", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_ins() throws Exception {
        test("noscript", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_isindex() throws Exception {
        test("noscript", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_kbd() throws Exception {
        test("noscript", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_keygen() throws Exception {
        test("noscript", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_label() throws Exception {
        test("noscript", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_layer() throws Exception {
        test("noscript", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_legend() throws Exception {
        test("noscript", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_li() throws Exception {
        test("noscript", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_link() throws Exception {
        test("noscript", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_listing() throws Exception {
        test("noscript", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_main() throws Exception {
        test("noscript", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_map() throws Exception {
        test("noscript", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_mark() throws Exception {
        test("noscript", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_marquee() throws Exception {
        test("noscript", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_menu() throws Exception {
        test("noscript", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_menuitem() throws Exception {
        test("noscript", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_meta() throws Exception {
        test("noscript", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_meter() throws Exception {
        test("noscript", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_multicol() throws Exception {
        test("noscript", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_nav() throws Exception {
        test("noscript", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_nextid() throws Exception {
        test("noscript", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_nobr() throws Exception {
        test("noscript", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_noembed() throws Exception {
        test("noscript", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_noframes() throws Exception {
        test("noscript", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_nolayer() throws Exception {
        test("noscript", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_noscript() throws Exception {
        test("noscript", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_object() throws Exception {
        test("noscript", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_ol() throws Exception {
        test("noscript", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_optgroup() throws Exception {
        test("noscript", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_option() throws Exception {
        test("noscript", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_output() throws Exception {
        test("noscript", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_p() throws Exception {
        test("noscript", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_param() throws Exception {
        test("noscript", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_plaintext() throws Exception {
        test("noscript", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_pre() throws Exception {
        test("noscript", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_progress() throws Exception {
        test("noscript", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_q() throws Exception {
        test("noscript", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_rp() throws Exception {
        test("noscript", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_rt() throws Exception {
        test("noscript", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_ruby() throws Exception {
        test("noscript", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_s() throws Exception {
        test("noscript", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_samp() throws Exception {
        test("noscript", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_script() throws Exception {
        test("noscript", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_section() throws Exception {
        test("noscript", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_select() throws Exception {
        test("noscript", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_small() throws Exception {
        test("noscript", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_source() throws Exception {
        test("noscript", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_span() throws Exception {
        test("noscript", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_strike() throws Exception {
        test("noscript", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_strong() throws Exception {
        test("noscript", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_style() throws Exception {
        test("noscript", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_sub() throws Exception {
        test("noscript", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_summary() throws Exception {
        test("noscript", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_sup() throws Exception {
        test("noscript", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_table() throws Exception {
        test("noscript", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_tbody() throws Exception {
        test("noscript", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_td() throws Exception {
        test("noscript", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_textarea() throws Exception {
        test("noscript", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_tfoot() throws Exception {
        test("noscript", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_th() throws Exception {
        test("noscript", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_thead() throws Exception {
        test("noscript", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_time() throws Exception {
        test("noscript", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_title() throws Exception {
        test("noscript", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_tr() throws Exception {
        test("noscript", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_track() throws Exception {
        test("noscript", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_tt() throws Exception {
        test("noscript", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_u() throws Exception {
        test("noscript", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_ul() throws Exception {
        test("noscript", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_var() throws Exception {
        test("noscript", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_video() throws Exception {
        test("noscript", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_wbr() throws Exception {
        test("noscript", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_xmp() throws Exception {
        test("noscript", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_a() throws Exception {
        test("object", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_abbr() throws Exception {
        test("object", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_acronym() throws Exception {
        test("object", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_address() throws Exception {
        test("object", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_applet() throws Exception {
        test("object", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_article() throws Exception {
        test("object", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_aside() throws Exception {
        test("object", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_audio() throws Exception {
        test("object", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_b() throws Exception {
        test("object", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_bdi() throws Exception {
        test("object", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_bdo() throws Exception {
        test("object", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_big() throws Exception {
        test("object", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_blink() throws Exception {
        test("object", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_blockquote() throws Exception {
        test("object", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_body() throws Exception {
        test("object", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_button() throws Exception {
        test("object", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_canvas() throws Exception {
        test("object", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_caption() throws Exception {
        test("object", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_center() throws Exception {
        test("object", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_cite() throws Exception {
        test("object", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_code() throws Exception {
        test("object", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_col() throws Exception {
        test("object", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_colgroup() throws Exception {
        test("object", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_datalist() throws Exception {
        test("object", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dd() throws Exception {
        test("object", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_del() throws Exception {
        test("object", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_details() throws Exception {
        test("object", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dfn() throws Exception {
        test("object", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dialog() throws Exception {
        test("object", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dir() throws Exception {
        test("object", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_div() throws Exception {
        test("object", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dl() throws Exception {
        test("object", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_dt() throws Exception {
        test("object", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_em() throws Exception {
        test("object", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_fieldset() throws Exception {
        test("object", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_figcaption() throws Exception {
        test("object", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_figure() throws Exception {
        test("object", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_font() throws Exception {
        test("object", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_footer() throws Exception {
        test("object", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_form() throws Exception {
        test("object", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_frame() throws Exception {
        test("object", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _object_frameset() throws Exception {
        test("object", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h1() throws Exception {
        test("object", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h2() throws Exception {
        test("object", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h3() throws Exception {
        test("object", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h4() throws Exception {
        test("object", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h5() throws Exception {
        test("object", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_h6() throws Exception {
        test("object", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_head() throws Exception {
        test("object", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_header() throws Exception {
        test("object", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_html() throws Exception {
        test("object", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_i() throws Exception {
        test("object", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_iframe() throws Exception {
        test("object", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_ins() throws Exception {
        test("object", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_kbd() throws Exception {
        test("object", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_label() throws Exception {
        test("object", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_layer() throws Exception {
        test("object", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_legend() throws Exception {
        test("object", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_li() throws Exception {
        test("object", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_listing() throws Exception {
        test("object", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_main() throws Exception {
        test("object", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_map() throws Exception {
        test("object", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_mark() throws Exception {
        test("object", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_marquee() throws Exception {
        test("object", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_menu() throws Exception {
        test("object", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_menuitem() throws Exception {
        test("object", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_meter() throws Exception {
        test("object", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_multicol() throws Exception {
        test("object", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_nav() throws Exception {
        test("object", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented
    public void _object_nextid() throws Exception {
        test("object", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_nobr() throws Exception {
        test("object", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_noembed() throws Exception {
        test("object", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_noframes() throws Exception {
        test("object", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_nolayer() throws Exception {
        test("object", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_noscript() throws Exception {
        test("object", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_object() throws Exception {
        test("object", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_ol() throws Exception {
        test("object", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_optgroup() throws Exception {
        test("object", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_option() throws Exception {
        test("object", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_output() throws Exception {
        test("object", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_p() throws Exception {
        test("object", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_plaintext() throws Exception {
        test("object", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_pre() throws Exception {
        test("object", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_progress() throws Exception {
        test("object", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_q() throws Exception {
        test("object", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_rp() throws Exception {
        test("object", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_rt() throws Exception {
        test("object", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_ruby() throws Exception {
        test("object", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_s() throws Exception {
        test("object", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_samp() throws Exception {
        test("object", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented
    public void _object_script() throws Exception {
        test("object", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_section() throws Exception {
        test("object", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_select() throws Exception {
        test("object", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_small() throws Exception {
        test("object", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_span() throws Exception {
        test("object", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_strike() throws Exception {
        test("object", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_strong() throws Exception {
        test("object", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_style() throws Exception {
        test("object", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_sub() throws Exception {
        test("object", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_summary() throws Exception {
        test("object", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_sup() throws Exception {
        test("object", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_table() throws Exception {
        test("object", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_tbody() throws Exception {
        test("object", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_td() throws Exception {
        test("object", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_textarea() throws Exception {
        test("object", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_tfoot() throws Exception {
        test("object", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_th() throws Exception {
        test("object", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_thead() throws Exception {
        test("object", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_time() throws Exception {
        test("object", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented
    public void _object_title() throws Exception {
        test("object", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_tr() throws Exception {
        test("object", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_tt() throws Exception {
        test("object", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_u() throws Exception {
        test("object", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_ul() throws Exception {
        test("object", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_var() throws Exception {
        test("object", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_video() throws Exception {
        test("object", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_xmp() throws Exception {
        test("object", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ol_body() throws Exception {
        test("ol", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ol_head() throws Exception {
        test("ol", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ol_html() throws Exception {
        test("ol", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _ol_object() throws Exception {
        test("ol", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_title() throws Exception {
        test("ol", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_a() throws Exception {
        test("optgroup", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_abbr() throws Exception {
        test("optgroup", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_acronym() throws Exception {
        test("optgroup", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_address() throws Exception {
        test("optgroup", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_applet() throws Exception {
        test("optgroup", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_article() throws Exception {
        test("optgroup", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_aside() throws Exception {
        test("optgroup", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_audio() throws Exception {
        test("optgroup", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_b() throws Exception {
        test("optgroup", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_bdi() throws Exception {
        test("optgroup", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_bdo() throws Exception {
        test("optgroup", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_big() throws Exception {
        test("optgroup", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_blink() throws Exception {
        test("optgroup", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_blockquote() throws Exception {
        test("optgroup", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_body() throws Exception {
        test("optgroup", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_button() throws Exception {
        test("optgroup", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_canvas() throws Exception {
        test("optgroup", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_caption() throws Exception {
        test("optgroup", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_center() throws Exception {
        test("optgroup", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_cite() throws Exception {
        test("optgroup", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_code() throws Exception {
        test("optgroup", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_col() throws Exception {
        test("optgroup", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_colgroup() throws Exception {
        test("optgroup", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_datalist() throws Exception {
        test("optgroup", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dd() throws Exception {
        test("optgroup", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_del() throws Exception {
        test("optgroup", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_details() throws Exception {
        test("optgroup", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dfn() throws Exception {
        test("optgroup", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dialog() throws Exception {
        test("optgroup", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dir() throws Exception {
        test("optgroup", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_div() throws Exception {
        test("optgroup", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dl() throws Exception {
        test("optgroup", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_dt() throws Exception {
        test("optgroup", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_em() throws Exception {
        test("optgroup", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_fieldset() throws Exception {
        test("optgroup", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_figcaption() throws Exception {
        test("optgroup", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_figure() throws Exception {
        test("optgroup", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_font() throws Exception {
        test("optgroup", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_footer() throws Exception {
        test("optgroup", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_form() throws Exception {
        test("optgroup", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_frame() throws Exception {
        test("optgroup", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_frameset() throws Exception {
        test("optgroup", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h1() throws Exception {
        test("optgroup", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h2() throws Exception {
        test("optgroup", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h3() throws Exception {
        test("optgroup", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h4() throws Exception {
        test("optgroup", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h5() throws Exception {
        test("optgroup", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_h6() throws Exception {
        test("optgroup", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_head() throws Exception {
        test("optgroup", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_header() throws Exception {
        test("optgroup", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_html() throws Exception {
        test("optgroup", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_i() throws Exception {
        test("optgroup", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_iframe() throws Exception {
        test("optgroup", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_ins() throws Exception {
        test("optgroup", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_kbd() throws Exception {
        test("optgroup", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_label() throws Exception {
        test("optgroup", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_layer() throws Exception {
        test("optgroup", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_legend() throws Exception {
        test("optgroup", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_li() throws Exception {
        test("optgroup", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_listing() throws Exception {
        test("optgroup", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_main() throws Exception {
        test("optgroup", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_map() throws Exception {
        test("optgroup", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_mark() throws Exception {
        test("optgroup", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_marquee() throws Exception {
        test("optgroup", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_menu() throws Exception {
        test("optgroup", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_menuitem() throws Exception {
        test("optgroup", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_meter() throws Exception {
        test("optgroup", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_multicol() throws Exception {
        test("optgroup", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_nav() throws Exception {
        test("optgroup", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_nextid() throws Exception {
        test("optgroup", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_nobr() throws Exception {
        test("optgroup", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_noembed() throws Exception {
        test("optgroup", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_noframes() throws Exception {
        test("optgroup", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_nolayer() throws Exception {
        test("optgroup", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_noscript() throws Exception {
        test("optgroup", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_object() throws Exception {
        test("optgroup", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_ol() throws Exception {
        test("optgroup", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_optgroup() throws Exception {
        test("optgroup", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_option() throws Exception {
        test("optgroup", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_output() throws Exception {
        test("optgroup", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_p() throws Exception {
        test("optgroup", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_plaintext() throws Exception {
        test("optgroup", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_pre() throws Exception {
        test("optgroup", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_progress() throws Exception {
        test("optgroup", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_q() throws Exception {
        test("optgroup", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_rp() throws Exception {
        test("optgroup", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_rt() throws Exception {
        test("optgroup", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_ruby() throws Exception {
        test("optgroup", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_s() throws Exception {
        test("optgroup", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_samp() throws Exception {
        test("optgroup", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_script() throws Exception {
        test("optgroup", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_section() throws Exception {
        test("optgroup", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_select() throws Exception {
        test("optgroup", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_small() throws Exception {
        test("optgroup", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_span() throws Exception {
        test("optgroup", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_strike() throws Exception {
        test("optgroup", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_strong() throws Exception {
        test("optgroup", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_style() throws Exception {
        test("optgroup", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_sub() throws Exception {
        test("optgroup", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_summary() throws Exception {
        test("optgroup", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_sup() throws Exception {
        test("optgroup", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_table() throws Exception {
        test("optgroup", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_tbody() throws Exception {
        test("optgroup", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_td() throws Exception {
        test("optgroup", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_textarea() throws Exception {
        test("optgroup", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_tfoot() throws Exception {
        test("optgroup", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_th() throws Exception {
        test("optgroup", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_thead() throws Exception {
        test("optgroup", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_time() throws Exception {
        test("optgroup", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_title() throws Exception {
        test("optgroup", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_tr() throws Exception {
        test("optgroup", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_tt() throws Exception {
        test("optgroup", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_u() throws Exception {
        test("optgroup", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_ul() throws Exception {
        test("optgroup", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_var() throws Exception {
        test("optgroup", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_video() throws Exception {
        test("optgroup", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_xmp() throws Exception {
        test("optgroup", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_a() throws Exception {
        test("option", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_abbr() throws Exception {
        test("option", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_acronym() throws Exception {
        test("option", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_address() throws Exception {
        test("option", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_applet() throws Exception {
        test("option", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_article() throws Exception {
        test("option", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_aside() throws Exception {
        test("option", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_audio() throws Exception {
        test("option", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_b() throws Exception {
        test("option", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_bdi() throws Exception {
        test("option", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_bdo() throws Exception {
        test("option", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_big() throws Exception {
        test("option", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_blink() throws Exception {
        test("option", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_blockquote() throws Exception {
        test("option", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_body() throws Exception {
        test("option", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_button() throws Exception {
        test("option", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_canvas() throws Exception {
        test("option", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_caption() throws Exception {
        test("option", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_center() throws Exception {
        test("option", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_cite() throws Exception {
        test("option", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_code() throws Exception {
        test("option", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_col() throws Exception {
        test("option", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_colgroup() throws Exception {
        test("option", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_datalist() throws Exception {
        test("option", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dd() throws Exception {
        test("option", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_del() throws Exception {
        test("option", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_details() throws Exception {
        test("option", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dfn() throws Exception {
        test("option", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dialog() throws Exception {
        test("option", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dir() throws Exception {
        test("option", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_div() throws Exception {
        test("option", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dl() throws Exception {
        test("option", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_dt() throws Exception {
        test("option", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_em() throws Exception {
        test("option", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_fieldset() throws Exception {
        test("option", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_figcaption() throws Exception {
        test("option", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_figure() throws Exception {
        test("option", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_font() throws Exception {
        test("option", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_footer() throws Exception {
        test("option", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_form() throws Exception {
        test("option", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_frame() throws Exception {
        test("option", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_frameset() throws Exception {
        test("option", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h1() throws Exception {
        test("option", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h2() throws Exception {
        test("option", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h3() throws Exception {
        test("option", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h4() throws Exception {
        test("option", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h5() throws Exception {
        test("option", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_h6() throws Exception {
        test("option", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_head() throws Exception {
        test("option", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_header() throws Exception {
        test("option", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_html() throws Exception {
        test("option", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_i() throws Exception {
        test("option", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_iframe() throws Exception {
        test("option", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_ins() throws Exception {
        test("option", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_kbd() throws Exception {
        test("option", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_label() throws Exception {
        test("option", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_layer() throws Exception {
        test("option", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_legend() throws Exception {
        test("option", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_li() throws Exception {
        test("option", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_listing() throws Exception {
        test("option", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_main() throws Exception {
        test("option", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_map() throws Exception {
        test("option", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_mark() throws Exception {
        test("option", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_marquee() throws Exception {
        test("option", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_menu() throws Exception {
        test("option", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_menuitem() throws Exception {
        test("option", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_meter() throws Exception {
        test("option", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_multicol() throws Exception {
        test("option", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_nav() throws Exception {
        test("option", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_nextid() throws Exception {
        test("option", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_nobr() throws Exception {
        test("option", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_noembed() throws Exception {
        test("option", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_noframes() throws Exception {
        test("option", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_nolayer() throws Exception {
        test("option", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_noscript() throws Exception {
        test("option", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_object() throws Exception {
        test("option", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_ol() throws Exception {
        test("option", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_output() throws Exception {
        test("option", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_p() throws Exception {
        test("option", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_plaintext() throws Exception {
        test("option", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_pre() throws Exception {
        test("option", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_progress() throws Exception {
        test("option", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_q() throws Exception {
        test("option", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_rp() throws Exception {
        test("option", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_rt() throws Exception {
        test("option", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_ruby() throws Exception {
        test("option", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_s() throws Exception {
        test("option", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_samp() throws Exception {
        test("option", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_script() throws Exception {
        test("option", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_section() throws Exception {
        test("option", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_select() throws Exception {
        test("option", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_small() throws Exception {
        test("option", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_span() throws Exception {
        test("option", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_strike() throws Exception {
        test("option", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_strong() throws Exception {
        test("option", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_style() throws Exception {
        test("option", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_sub() throws Exception {
        test("option", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_summary() throws Exception {
        test("option", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_sup() throws Exception {
        test("option", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_table() throws Exception {
        test("option", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_tbody() throws Exception {
        test("option", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_td() throws Exception {
        test("option", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_textarea() throws Exception {
        test("option", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_tfoot() throws Exception {
        test("option", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_th() throws Exception {
        test("option", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_thead() throws Exception {
        test("option", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_time() throws Exception {
        test("option", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_title() throws Exception {
        test("option", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_tr() throws Exception {
        test("option", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_tt() throws Exception {
        test("option", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_u() throws Exception {
        test("option", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_ul() throws Exception {
        test("option", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_var() throws Exception {
        test("option", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_video() throws Exception {
        test("option", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_xmp() throws Exception {
        test("option", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_a() throws Exception {
        test("output", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_abbr() throws Exception {
        test("output", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_acronym() throws Exception {
        test("output", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_address() throws Exception {
        test("output", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_applet() throws Exception {
        test("output", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_article() throws Exception {
        test("output", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_aside() throws Exception {
        test("output", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_audio() throws Exception {
        test("output", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_b() throws Exception {
        test("output", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_bdi() throws Exception {
        test("output", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_bdo() throws Exception {
        test("output", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_big() throws Exception {
        test("output", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_blink() throws Exception {
        test("output", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_blockquote() throws Exception {
        test("output", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_body() throws Exception {
        test("output", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_button() throws Exception {
        test("output", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_canvas() throws Exception {
        test("output", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_caption() throws Exception {
        test("output", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_center() throws Exception {
        test("output", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_cite() throws Exception {
        test("output", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_code() throws Exception {
        test("output", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_col() throws Exception {
        test("output", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_colgroup() throws Exception {
        test("output", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_datalist() throws Exception {
        test("output", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dd() throws Exception {
        test("output", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_del() throws Exception {
        test("output", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_details() throws Exception {
        test("output", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dfn() throws Exception {
        test("output", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dialog() throws Exception {
        test("output", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dir() throws Exception {
        test("output", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_div() throws Exception {
        test("output", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dl() throws Exception {
        test("output", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_dt() throws Exception {
        test("output", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_em() throws Exception {
        test("output", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_fieldset() throws Exception {
        test("output", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_figcaption() throws Exception {
        test("output", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_figure() throws Exception {
        test("output", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_font() throws Exception {
        test("output", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_footer() throws Exception {
        test("output", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_form() throws Exception {
        test("output", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_frame() throws Exception {
        test("output", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_frameset() throws Exception {
        test("output", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h1() throws Exception {
        test("output", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h2() throws Exception {
        test("output", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h3() throws Exception {
        test("output", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h4() throws Exception {
        test("output", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h5() throws Exception {
        test("output", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_h6() throws Exception {
        test("output", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_head() throws Exception {
        test("output", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_header() throws Exception {
        test("output", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_html() throws Exception {
        test("output", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_i() throws Exception {
        test("output", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_iframe() throws Exception {
        test("output", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_ins() throws Exception {
        test("output", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_kbd() throws Exception {
        test("output", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_label() throws Exception {
        test("output", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_layer() throws Exception {
        test("output", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_legend() throws Exception {
        test("output", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_li() throws Exception {
        test("output", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_listing() throws Exception {
        test("output", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_main() throws Exception {
        test("output", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_map() throws Exception {
        test("output", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_mark() throws Exception {
        test("output", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_marquee() throws Exception {
        test("output", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_menu() throws Exception {
        test("output", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_menuitem() throws Exception {
        test("output", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_meter() throws Exception {
        test("output", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_multicol() throws Exception {
        test("output", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_nav() throws Exception {
        test("output", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _output_nextid() throws Exception {
        test("output", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_nobr() throws Exception {
        test("output", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_noembed() throws Exception {
        test("output", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_noframes() throws Exception {
        test("output", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_nolayer() throws Exception {
        test("output", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_noscript() throws Exception {
        test("output", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_object() throws Exception {
        test("output", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_ol() throws Exception {
        test("output", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_optgroup() throws Exception {
        test("output", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_option() throws Exception {
        test("output", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_output() throws Exception {
        test("output", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_p() throws Exception {
        test("output", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_plaintext() throws Exception {
        test("output", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_pre() throws Exception {
        test("output", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_progress() throws Exception {
        test("output", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_q() throws Exception {
        test("output", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_rp() throws Exception {
        test("output", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_rt() throws Exception {
        test("output", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_ruby() throws Exception {
        test("output", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_s() throws Exception {
        test("output", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_samp() throws Exception {
        test("output", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _output_script() throws Exception {
        test("output", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_section() throws Exception {
        test("output", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_select() throws Exception {
        test("output", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_small() throws Exception {
        test("output", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_span() throws Exception {
        test("output", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_strike() throws Exception {
        test("output", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_strong() throws Exception {
        test("output", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_style() throws Exception {
        test("output", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_sub() throws Exception {
        test("output", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_summary() throws Exception {
        test("output", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_sup() throws Exception {
        test("output", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_table() throws Exception {
        test("output", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_tbody() throws Exception {
        test("output", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_td() throws Exception {
        test("output", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_textarea() throws Exception {
        test("output", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_tfoot() throws Exception {
        test("output", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_th() throws Exception {
        test("output", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_thead() throws Exception {
        test("output", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_time() throws Exception {
        test("output", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _output_title() throws Exception {
        test("output", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _output_tr() throws Exception {
        test("output", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_tt() throws Exception {
        test("output", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_u() throws Exception {
        test("output", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_ul() throws Exception {
        test("output", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_var() throws Exception {
        test("output", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_video() throws Exception {
        test("output", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_xmp() throws Exception {
        test("output", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _p_body() throws Exception {
        test("p", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _p_head() throws Exception {
        test("p", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _p_html() throws Exception {
        test("p", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _p_object() throws Exception {
        test("p", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_title() throws Exception {
        test("p", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_article() throws Exception {
        test("pre", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_aside() throws Exception {
        test("pre", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_audio() throws Exception {
        test("pre", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_bdi() throws Exception {
        test("pre", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _pre_body() throws Exception {
        test("pre", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_canvas() throws Exception {
        test("pre", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_caption() throws Exception {
        test("pre", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_col() throws Exception {
        test("pre", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_colgroup() throws Exception {
        test("pre", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_datalist() throws Exception {
        test("pre", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_details() throws Exception {
        test("pre", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_dialog() throws Exception {
        test("pre", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_figcaption() throws Exception {
        test("pre", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_figure() throws Exception {
        test("pre", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_footer() throws Exception {
        test("pre", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_frame() throws Exception {
        test("pre", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_frameset() throws Exception {
        test("pre", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_head() throws Exception {
        test("pre", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_header() throws Exception {
        test("pre", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_html() throws Exception {
        test("pre", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_layer() throws Exception {
        test("pre", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_legend() throws Exception {
        test("pre", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_main() throws Exception {
        test("pre", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_mark() throws Exception {
        test("pre", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_menuitem() throws Exception {
        test("pre", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_meter() throws Exception {
        test("pre", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_multicol() throws Exception {
        test("pre", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_nav() throws Exception {
        test("pre", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented
    public void _pre_nextid() throws Exception {
        test("pre", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_nolayer() throws Exception {
        test("pre", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _pre_object() throws Exception {
        test("pre", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_optgroup() throws Exception {
        test("pre", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_option() throws Exception {
        test("pre", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_output() throws Exception {
        test("pre", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_progress() throws Exception {
        test("pre", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_rp() throws Exception {
        test("pre", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_rt() throws Exception {
        test("pre", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_section() throws Exception {
        test("pre", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_summary() throws Exception {
        test("pre", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_tbody() throws Exception {
        test("pre", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_td() throws Exception {
        test("pre", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_tfoot() throws Exception {
        test("pre", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_th() throws Exception {
        test("pre", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_thead() throws Exception {
        test("pre", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_time() throws Exception {
        test("pre", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _pre_title() throws Exception {
        test("pre", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_tr() throws Exception {
        test("pre", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_video() throws Exception {
        test("pre", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_a() throws Exception {
        test("progress", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_abbr() throws Exception {
        test("progress", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_acronym() throws Exception {
        test("progress", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_address() throws Exception {
        test("progress", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_applet() throws Exception {
        test("progress", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_article() throws Exception {
        test("progress", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_aside() throws Exception {
        test("progress", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_audio() throws Exception {
        test("progress", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_b() throws Exception {
        test("progress", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_bdi() throws Exception {
        test("progress", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_bdo() throws Exception {
        test("progress", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_big() throws Exception {
        test("progress", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_blink() throws Exception {
        test("progress", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_blockquote() throws Exception {
        test("progress", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_body() throws Exception {
        test("progress", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_button() throws Exception {
        test("progress", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_canvas() throws Exception {
        test("progress", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_caption() throws Exception {
        test("progress", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_center() throws Exception {
        test("progress", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_cite() throws Exception {
        test("progress", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_code() throws Exception {
        test("progress", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_col() throws Exception {
        test("progress", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_colgroup() throws Exception {
        test("progress", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_datalist() throws Exception {
        test("progress", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dd() throws Exception {
        test("progress", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_del() throws Exception {
        test("progress", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_details() throws Exception {
        test("progress", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dfn() throws Exception {
        test("progress", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dialog() throws Exception {
        test("progress", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dir() throws Exception {
        test("progress", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_div() throws Exception {
        test("progress", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dl() throws Exception {
        test("progress", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_dt() throws Exception {
        test("progress", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_em() throws Exception {
        test("progress", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_fieldset() throws Exception {
        test("progress", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_figcaption() throws Exception {
        test("progress", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_figure() throws Exception {
        test("progress", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_font() throws Exception {
        test("progress", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_footer() throws Exception {
        test("progress", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_form() throws Exception {
        test("progress", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_frame() throws Exception {
        test("progress", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_frameset() throws Exception {
        test("progress", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h1() throws Exception {
        test("progress", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h2() throws Exception {
        test("progress", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h3() throws Exception {
        test("progress", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h4() throws Exception {
        test("progress", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h5() throws Exception {
        test("progress", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_h6() throws Exception {
        test("progress", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_head() throws Exception {
        test("progress", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_header() throws Exception {
        test("progress", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_html() throws Exception {
        test("progress", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_i() throws Exception {
        test("progress", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_iframe() throws Exception {
        test("progress", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_ins() throws Exception {
        test("progress", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_kbd() throws Exception {
        test("progress", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_label() throws Exception {
        test("progress", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_layer() throws Exception {
        test("progress", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_legend() throws Exception {
        test("progress", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_li() throws Exception {
        test("progress", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_listing() throws Exception {
        test("progress", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_main() throws Exception {
        test("progress", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_map() throws Exception {
        test("progress", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_mark() throws Exception {
        test("progress", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_marquee() throws Exception {
        test("progress", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_menu() throws Exception {
        test("progress", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_menuitem() throws Exception {
        test("progress", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_meter() throws Exception {
        test("progress", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_multicol() throws Exception {
        test("progress", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_nav() throws Exception {
        test("progress", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_nextid() throws Exception {
        test("progress", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_nobr() throws Exception {
        test("progress", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_noembed() throws Exception {
        test("progress", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_noframes() throws Exception {
        test("progress", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_nolayer() throws Exception {
        test("progress", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_noscript() throws Exception {
        test("progress", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_object() throws Exception {
        test("progress", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_ol() throws Exception {
        test("progress", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_optgroup() throws Exception {
        test("progress", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_option() throws Exception {
        test("progress", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_output() throws Exception {
        test("progress", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_p() throws Exception {
        test("progress", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_plaintext() throws Exception {
        test("progress", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_pre() throws Exception {
        test("progress", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_progress() throws Exception {
        test("progress", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_q() throws Exception {
        test("progress", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_rp() throws Exception {
        test("progress", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_rt() throws Exception {
        test("progress", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_ruby() throws Exception {
        test("progress", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_s() throws Exception {
        test("progress", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_samp() throws Exception {
        test("progress", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _progress_script() throws Exception {
        test("progress", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_section() throws Exception {
        test("progress", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_select() throws Exception {
        test("progress", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_small() throws Exception {
        test("progress", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_span() throws Exception {
        test("progress", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_strike() throws Exception {
        test("progress", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_strong() throws Exception {
        test("progress", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_style() throws Exception {
        test("progress", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_sub() throws Exception {
        test("progress", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_summary() throws Exception {
        test("progress", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_sup() throws Exception {
        test("progress", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_table() throws Exception {
        test("progress", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_tbody() throws Exception {
        test("progress", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_td() throws Exception {
        test("progress", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_textarea() throws Exception {
        test("progress", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_tfoot() throws Exception {
        test("progress", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_th() throws Exception {
        test("progress", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_thead() throws Exception {
        test("progress", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_time() throws Exception {
        test("progress", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _progress_title() throws Exception {
        test("progress", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _progress_tr() throws Exception {
        test("progress", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_tt() throws Exception {
        test("progress", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_u() throws Exception {
        test("progress", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_ul() throws Exception {
        test("progress", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_var() throws Exception {
        test("progress", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_video() throws Exception {
        test("progress", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_xmp() throws Exception {
        test("progress", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _q_body() throws Exception {
        test("q", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _q_head() throws Exception {
        test("q", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _q_html() throws Exception {
        test("q", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _q_object() throws Exception {
        test("q", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _q_title() throws Exception {
        test("q", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_a() throws Exception {
        test("rp", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_abbr() throws Exception {
        test("rp", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_acronym() throws Exception {
        test("rp", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_address() throws Exception {
        test("rp", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_applet() throws Exception {
        test("rp", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_article() throws Exception {
        test("rp", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_aside() throws Exception {
        test("rp", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_audio() throws Exception {
        test("rp", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_b() throws Exception {
        test("rp", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_bdi() throws Exception {
        test("rp", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_bdo() throws Exception {
        test("rp", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_big() throws Exception {
        test("rp", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_blink() throws Exception {
        test("rp", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_blockquote() throws Exception {
        test("rp", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_body() throws Exception {
        test("rp", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_button() throws Exception {
        test("rp", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_canvas() throws Exception {
        test("rp", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_caption() throws Exception {
        test("rp", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_center() throws Exception {
        test("rp", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_cite() throws Exception {
        test("rp", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_code() throws Exception {
        test("rp", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_col() throws Exception {
        test("rp", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_colgroup() throws Exception {
        test("rp", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_datalist() throws Exception {
        test("rp", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dd() throws Exception {
        test("rp", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_del() throws Exception {
        test("rp", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_details() throws Exception {
        test("rp", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dfn() throws Exception {
        test("rp", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dialog() throws Exception {
        test("rp", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dir() throws Exception {
        test("rp", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_div() throws Exception {
        test("rp", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dl() throws Exception {
        test("rp", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_dt() throws Exception {
        test("rp", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_em() throws Exception {
        test("rp", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_fieldset() throws Exception {
        test("rp", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_figcaption() throws Exception {
        test("rp", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_figure() throws Exception {
        test("rp", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_font() throws Exception {
        test("rp", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_footer() throws Exception {
        test("rp", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_form() throws Exception {
        test("rp", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_frame() throws Exception {
        test("rp", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_frameset() throws Exception {
        test("rp", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h1() throws Exception {
        test("rp", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h2() throws Exception {
        test("rp", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h3() throws Exception {
        test("rp", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h4() throws Exception {
        test("rp", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h5() throws Exception {
        test("rp", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_h6() throws Exception {
        test("rp", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_head() throws Exception {
        test("rp", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_header() throws Exception {
        test("rp", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_html() throws Exception {
        test("rp", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_i() throws Exception {
        test("rp", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_iframe() throws Exception {
        test("rp", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_ins() throws Exception {
        test("rp", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_kbd() throws Exception {
        test("rp", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_label() throws Exception {
        test("rp", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_layer() throws Exception {
        test("rp", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_legend() throws Exception {
        test("rp", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_li() throws Exception {
        test("rp", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_listing() throws Exception {
        test("rp", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_main() throws Exception {
        test("rp", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_map() throws Exception {
        test("rp", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_mark() throws Exception {
        test("rp", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_marquee() throws Exception {
        test("rp", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_menu() throws Exception {
        test("rp", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_menuitem() throws Exception {
        test("rp", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_meter() throws Exception {
        test("rp", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_multicol() throws Exception {
        test("rp", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_nav() throws Exception {
        test("rp", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_nextid() throws Exception {
        test("rp", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_nobr() throws Exception {
        test("rp", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_noembed() throws Exception {
        test("rp", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_noframes() throws Exception {
        test("rp", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_nolayer() throws Exception {
        test("rp", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_noscript() throws Exception {
        test("rp", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_object() throws Exception {
        test("rp", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_ol() throws Exception {
        test("rp", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_optgroup() throws Exception {
        test("rp", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_option() throws Exception {
        test("rp", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_output() throws Exception {
        test("rp", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_p() throws Exception {
        test("rp", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_plaintext() throws Exception {
        test("rp", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_pre() throws Exception {
        test("rp", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_progress() throws Exception {
        test("rp", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_q() throws Exception {
        test("rp", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_rp() throws Exception {
        test("rp", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _rp_rt() throws Exception {
        test("rp", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _rp_ruby() throws Exception {
        test("rp", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_s() throws Exception {
        test("rp", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_samp() throws Exception {
        test("rp", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _rp_script() throws Exception {
        test("rp", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_section() throws Exception {
        test("rp", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_select() throws Exception {
        test("rp", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_small() throws Exception {
        test("rp", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_span() throws Exception {
        test("rp", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_strike() throws Exception {
        test("rp", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_strong() throws Exception {
        test("rp", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_style() throws Exception {
        test("rp", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_sub() throws Exception {
        test("rp", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_summary() throws Exception {
        test("rp", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_sup() throws Exception {
        test("rp", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_table() throws Exception {
        test("rp", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_tbody() throws Exception {
        test("rp", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_td() throws Exception {
        test("rp", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_textarea() throws Exception {
        test("rp", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_tfoot() throws Exception {
        test("rp", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_th() throws Exception {
        test("rp", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_thead() throws Exception {
        test("rp", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_time() throws Exception {
        test("rp", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _rp_title() throws Exception {
        test("rp", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rp_tr() throws Exception {
        test("rp", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_tt() throws Exception {
        test("rp", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_u() throws Exception {
        test("rp", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_ul() throws Exception {
        test("rp", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_var() throws Exception {
        test("rp", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_video() throws Exception {
        test("rp", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_xmp() throws Exception {
        test("rp", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_a() throws Exception {
        test("rt", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_abbr() throws Exception {
        test("rt", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_acronym() throws Exception {
        test("rt", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_address() throws Exception {
        test("rt", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_applet() throws Exception {
        test("rt", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_article() throws Exception {
        test("rt", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_aside() throws Exception {
        test("rt", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_audio() throws Exception {
        test("rt", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_b() throws Exception {
        test("rt", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_bdi() throws Exception {
        test("rt", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_bdo() throws Exception {
        test("rt", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_big() throws Exception {
        test("rt", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_blink() throws Exception {
        test("rt", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_blockquote() throws Exception {
        test("rt", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_body() throws Exception {
        test("rt", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_button() throws Exception {
        test("rt", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_canvas() throws Exception {
        test("rt", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_caption() throws Exception {
        test("rt", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_center() throws Exception {
        test("rt", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_cite() throws Exception {
        test("rt", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_code() throws Exception {
        test("rt", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_col() throws Exception {
        test("rt", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_colgroup() throws Exception {
        test("rt", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_datalist() throws Exception {
        test("rt", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dd() throws Exception {
        test("rt", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_del() throws Exception {
        test("rt", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_details() throws Exception {
        test("rt", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dfn() throws Exception {
        test("rt", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dialog() throws Exception {
        test("rt", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dir() throws Exception {
        test("rt", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_div() throws Exception {
        test("rt", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dl() throws Exception {
        test("rt", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_dt() throws Exception {
        test("rt", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_em() throws Exception {
        test("rt", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_fieldset() throws Exception {
        test("rt", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_figcaption() throws Exception {
        test("rt", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_figure() throws Exception {
        test("rt", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_font() throws Exception {
        test("rt", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_footer() throws Exception {
        test("rt", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_form() throws Exception {
        test("rt", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_frame() throws Exception {
        test("rt", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_frameset() throws Exception {
        test("rt", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h1() throws Exception {
        test("rt", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h2() throws Exception {
        test("rt", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h3() throws Exception {
        test("rt", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h4() throws Exception {
        test("rt", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h5() throws Exception {
        test("rt", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_h6() throws Exception {
        test("rt", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_head() throws Exception {
        test("rt", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_header() throws Exception {
        test("rt", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_html() throws Exception {
        test("rt", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_i() throws Exception {
        test("rt", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_iframe() throws Exception {
        test("rt", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_ins() throws Exception {
        test("rt", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_kbd() throws Exception {
        test("rt", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_label() throws Exception {
        test("rt", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_layer() throws Exception {
        test("rt", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_legend() throws Exception {
        test("rt", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_li() throws Exception {
        test("rt", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_listing() throws Exception {
        test("rt", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_main() throws Exception {
        test("rt", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_map() throws Exception {
        test("rt", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_mark() throws Exception {
        test("rt", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_marquee() throws Exception {
        test("rt", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_menu() throws Exception {
        test("rt", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_menuitem() throws Exception {
        test("rt", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_meter() throws Exception {
        test("rt", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_multicol() throws Exception {
        test("rt", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_nav() throws Exception {
        test("rt", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_nextid() throws Exception {
        test("rt", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_nobr() throws Exception {
        test("rt", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_noembed() throws Exception {
        test("rt", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_noframes() throws Exception {
        test("rt", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_nolayer() throws Exception {
        test("rt", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_noscript() throws Exception {
        test("rt", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_object() throws Exception {
        test("rt", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_ol() throws Exception {
        test("rt", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_optgroup() throws Exception {
        test("rt", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_option() throws Exception {
        test("rt", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_output() throws Exception {
        test("rt", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_p() throws Exception {
        test("rt", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_plaintext() throws Exception {
        test("rt", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_pre() throws Exception {
        test("rt", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_progress() throws Exception {
        test("rt", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_q() throws Exception {
        test("rt", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_rp() throws Exception {
        test("rt", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_rt() throws Exception {
        test("rt", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _rt_ruby() throws Exception {
        test("rt", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_s() throws Exception {
        test("rt", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_samp() throws Exception {
        test("rt", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _rt_script() throws Exception {
        test("rt", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_section() throws Exception {
        test("rt", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_select() throws Exception {
        test("rt", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_small() throws Exception {
        test("rt", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_span() throws Exception {
        test("rt", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_strike() throws Exception {
        test("rt", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_strong() throws Exception {
        test("rt", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_style() throws Exception {
        test("rt", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_sub() throws Exception {
        test("rt", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_summary() throws Exception {
        test("rt", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_sup() throws Exception {
        test("rt", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_table() throws Exception {
        test("rt", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_tbody() throws Exception {
        test("rt", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_td() throws Exception {
        test("rt", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_textarea() throws Exception {
        test("rt", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_tfoot() throws Exception {
        test("rt", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_th() throws Exception {
        test("rt", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_thead() throws Exception {
        test("rt", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_time() throws Exception {
        test("rt", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _rt_title() throws Exception {
        test("rt", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _rt_tr() throws Exception {
        test("rt", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_tt() throws Exception {
        test("rt", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_u() throws Exception {
        test("rt", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_ul() throws Exception {
        test("rt", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_var() throws Exception {
        test("rt", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_video() throws Exception {
        test("rt", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_xmp() throws Exception {
        test("rt", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ruby_body() throws Exception {
        test("ruby", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ruby_head() throws Exception {
        test("ruby", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ruby_html() throws Exception {
        test("ruby", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _ruby_object() throws Exception {
        test("ruby", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_ruby() throws Exception {
        test("ruby", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_title() throws Exception {
        test("ruby", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _s_body() throws Exception {
        test("s", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _s_head() throws Exception {
        test("s", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _s_html() throws Exception {
        test("s", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _s_object() throws Exception {
        test("s", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_title() throws Exception {
        test("s", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _samp_body() throws Exception {
        test("samp", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _samp_head() throws Exception {
        test("samp", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _samp_html() throws Exception {
        test("samp", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _samp_object() throws Exception {
        test("samp", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _samp_title() throws Exception {
        test("samp", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_a() throws Exception {
        test("script", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_abbr() throws Exception {
        test("script", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_acronym() throws Exception {
        test("script", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_address() throws Exception {
        test("script", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_applet() throws Exception {
        test("script", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_area() throws Exception {
        test("script", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_article() throws Exception {
        test("script", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_aside() throws Exception {
        test("script", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_audio() throws Exception {
        test("script", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_b() throws Exception {
        test("script", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_base() throws Exception {
        test("script", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_basefont() throws Exception {
        test("script", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_bdi() throws Exception {
        test("script", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_bdo() throws Exception {
        test("script", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_bgsound() throws Exception {
        test("script", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_big() throws Exception {
        test("script", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_blink() throws Exception {
        test("script", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_blockquote() throws Exception {
        test("script", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_body() throws Exception {
        test("script", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_br() throws Exception {
        test("script", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_button() throws Exception {
        test("script", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_canvas() throws Exception {
        test("script", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_caption() throws Exception {
        test("script", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_center() throws Exception {
        test("script", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_cite() throws Exception {
        test("script", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_code() throws Exception {
        test("script", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_col() throws Exception {
        test("script", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_colgroup() throws Exception {
        test("script", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_command() throws Exception {
        test("script", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_datalist() throws Exception {
        test("script", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dd() throws Exception {
        test("script", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_del() throws Exception {
        test("script", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_details() throws Exception {
        test("script", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dfn() throws Exception {
        test("script", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dialog() throws Exception {
        test("script", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dir() throws Exception {
        test("script", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_div() throws Exception {
        test("script", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dl() throws Exception {
        test("script", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_dt() throws Exception {
        test("script", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_em() throws Exception {
        test("script", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_embed() throws Exception {
        test("script", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_fieldset() throws Exception {
        test("script", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_figcaption() throws Exception {
        test("script", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_figure() throws Exception {
        test("script", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_font() throws Exception {
        test("script", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_footer() throws Exception {
        test("script", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_form() throws Exception {
        test("script", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_frame() throws Exception {
        test("script", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_frameset() throws Exception {
        test("script", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h1() throws Exception {
        test("script", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h2() throws Exception {
        test("script", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h3() throws Exception {
        test("script", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h4() throws Exception {
        test("script", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h5() throws Exception {
        test("script", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_h6() throws Exception {
        test("script", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_head() throws Exception {
        test("script", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_header() throws Exception {
        test("script", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_hr() throws Exception {
        test("script", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_html() throws Exception {
        test("script", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_i() throws Exception {
        test("script", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_iframe() throws Exception {
        test("script", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_image() throws Exception {
        test("script", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_img() throws Exception {
        test("script", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_ins() throws Exception {
        test("script", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_isindex() throws Exception {
        test("script", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_kbd() throws Exception {
        test("script", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_keygen() throws Exception {
        test("script", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_label() throws Exception {
        test("script", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_layer() throws Exception {
        test("script", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_legend() throws Exception {
        test("script", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_li() throws Exception {
        test("script", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_link() throws Exception {
        test("script", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_listing() throws Exception {
        test("script", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_main() throws Exception {
        test("script", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_map() throws Exception {
        test("script", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_mark() throws Exception {
        test("script", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_marquee() throws Exception {
        test("script", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_menu() throws Exception {
        test("script", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_menuitem() throws Exception {
        test("script", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_meta() throws Exception {
        test("script", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_meter() throws Exception {
        test("script", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_multicol() throws Exception {
        test("script", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_nav() throws Exception {
        test("script", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_nextid() throws Exception {
        test("script", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_nobr() throws Exception {
        test("script", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_noembed() throws Exception {
        test("script", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_noframes() throws Exception {
        test("script", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_nolayer() throws Exception {
        test("script", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_noscript() throws Exception {
        test("script", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_object() throws Exception {
        test("script", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_ol() throws Exception {
        test("script", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_optgroup() throws Exception {
        test("script", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_option() throws Exception {
        test("script", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_output() throws Exception {
        test("script", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_p() throws Exception {
        test("script", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_param() throws Exception {
        test("script", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_plaintext() throws Exception {
        test("script", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_pre() throws Exception {
        test("script", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_progress() throws Exception {
        test("script", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_q() throws Exception {
        test("script", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_rp() throws Exception {
        test("script", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_rt() throws Exception {
        test("script", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_ruby() throws Exception {
        test("script", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_s() throws Exception {
        test("script", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_samp() throws Exception {
        test("script", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_script() throws Exception {
        test("script", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_section() throws Exception {
        test("script", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_select() throws Exception {
        test("script", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_small() throws Exception {
        test("script", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_source() throws Exception {
        test("script", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_span() throws Exception {
        test("script", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_strike() throws Exception {
        test("script", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_strong() throws Exception {
        test("script", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_style() throws Exception {
        test("script", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_sub() throws Exception {
        test("script", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_summary() throws Exception {
        test("script", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_sup() throws Exception {
        test("script", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_table() throws Exception {
        test("script", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_tbody() throws Exception {
        test("script", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_td() throws Exception {
        test("script", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_textarea() throws Exception {
        test("script", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_tfoot() throws Exception {
        test("script", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_th() throws Exception {
        test("script", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_thead() throws Exception {
        test("script", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_time() throws Exception {
        test("script", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_title() throws Exception {
        test("script", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_tr() throws Exception {
        test("script", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_track() throws Exception {
        test("script", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_tt() throws Exception {
        test("script", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_u() throws Exception {
        test("script", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_ul() throws Exception {
        test("script", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_var() throws Exception {
        test("script", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_video() throws Exception {
        test("script", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_wbr() throws Exception {
        test("script", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_xmp() throws Exception {
        test("script", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_a() throws Exception {
        test("section", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_abbr() throws Exception {
        test("section", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_acronym() throws Exception {
        test("section", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_address() throws Exception {
        test("section", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_applet() throws Exception {
        test("section", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_article() throws Exception {
        test("section", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_aside() throws Exception {
        test("section", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_audio() throws Exception {
        test("section", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_b() throws Exception {
        test("section", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_bdi() throws Exception {
        test("section", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_bdo() throws Exception {
        test("section", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_big() throws Exception {
        test("section", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_blink() throws Exception {
        test("section", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_blockquote() throws Exception {
        test("section", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_body() throws Exception {
        test("section", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_button() throws Exception {
        test("section", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_canvas() throws Exception {
        test("section", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_caption() throws Exception {
        test("section", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_center() throws Exception {
        test("section", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_cite() throws Exception {
        test("section", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_code() throws Exception {
        test("section", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_col() throws Exception {
        test("section", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_colgroup() throws Exception {
        test("section", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_datalist() throws Exception {
        test("section", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dd() throws Exception {
        test("section", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_del() throws Exception {
        test("section", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_details() throws Exception {
        test("section", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dfn() throws Exception {
        test("section", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dialog() throws Exception {
        test("section", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dir() throws Exception {
        test("section", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_div() throws Exception {
        test("section", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dl() throws Exception {
        test("section", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_dt() throws Exception {
        test("section", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_em() throws Exception {
        test("section", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_fieldset() throws Exception {
        test("section", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_figcaption() throws Exception {
        test("section", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_figure() throws Exception {
        test("section", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_font() throws Exception {
        test("section", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_footer() throws Exception {
        test("section", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_form() throws Exception {
        test("section", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_frame() throws Exception {
        test("section", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_frameset() throws Exception {
        test("section", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h1() throws Exception {
        test("section", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h2() throws Exception {
        test("section", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h3() throws Exception {
        test("section", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h4() throws Exception {
        test("section", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h5() throws Exception {
        test("section", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_h6() throws Exception {
        test("section", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_head() throws Exception {
        test("section", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_header() throws Exception {
        test("section", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_html() throws Exception {
        test("section", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_i() throws Exception {
        test("section", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_iframe() throws Exception {
        test("section", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_ins() throws Exception {
        test("section", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_kbd() throws Exception {
        test("section", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_label() throws Exception {
        test("section", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_layer() throws Exception {
        test("section", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_legend() throws Exception {
        test("section", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_li() throws Exception {
        test("section", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_listing() throws Exception {
        test("section", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_main() throws Exception {
        test("section", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_map() throws Exception {
        test("section", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_mark() throws Exception {
        test("section", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_marquee() throws Exception {
        test("section", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_menu() throws Exception {
        test("section", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_menuitem() throws Exception {
        test("section", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_meter() throws Exception {
        test("section", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_multicol() throws Exception {
        test("section", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_nav() throws Exception {
        test("section", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _section_nextid() throws Exception {
        test("section", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_nobr() throws Exception {
        test("section", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_noembed() throws Exception {
        test("section", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_noframes() throws Exception {
        test("section", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_nolayer() throws Exception {
        test("section", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_noscript() throws Exception {
        test("section", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_object() throws Exception {
        test("section", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_ol() throws Exception {
        test("section", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_optgroup() throws Exception {
        test("section", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_option() throws Exception {
        test("section", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_output() throws Exception {
        test("section", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_p() throws Exception {
        test("section", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_plaintext() throws Exception {
        test("section", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_pre() throws Exception {
        test("section", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_progress() throws Exception {
        test("section", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_q() throws Exception {
        test("section", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_rp() throws Exception {
        test("section", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_rt() throws Exception {
        test("section", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_ruby() throws Exception {
        test("section", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_s() throws Exception {
        test("section", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_samp() throws Exception {
        test("section", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _section_script() throws Exception {
        test("section", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_section() throws Exception {
        test("section", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_select() throws Exception {
        test("section", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_small() throws Exception {
        test("section", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_span() throws Exception {
        test("section", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_strike() throws Exception {
        test("section", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_strong() throws Exception {
        test("section", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_style() throws Exception {
        test("section", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_sub() throws Exception {
        test("section", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_summary() throws Exception {
        test("section", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_sup() throws Exception {
        test("section", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_table() throws Exception {
        test("section", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_tbody() throws Exception {
        test("section", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_td() throws Exception {
        test("section", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_textarea() throws Exception {
        test("section", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_tfoot() throws Exception {
        test("section", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_th() throws Exception {
        test("section", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_thead() throws Exception {
        test("section", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_time() throws Exception {
        test("section", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _section_title() throws Exception {
        test("section", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _section_tr() throws Exception {
        test("section", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_tt() throws Exception {
        test("section", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_u() throws Exception {
        test("section", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_ul() throws Exception {
        test("section", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_var() throws Exception {
        test("section", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_video() throws Exception {
        test("section", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_xmp() throws Exception {
        test("section", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_a() throws Exception {
        test("select", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_abbr() throws Exception {
        test("select", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_acronym() throws Exception {
        test("select", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_address() throws Exception {
        test("select", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_applet() throws Exception {
        test("select", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_area() throws Exception {
        test("select", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_b() throws Exception {
        test("select", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_base() throws Exception {
        test("select", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ IE8, CHROME, FF, IE11 })
    public void _select_basefont() throws Exception {
        test("select", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_bdo() throws Exception {
        test("select", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_bgsound() throws Exception {
        test("select", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_big() throws Exception {
        test("select", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_blink() throws Exception {
        test("select", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_blockquote() throws Exception {
        test("select", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_body() throws Exception {
        test("select", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_br() throws Exception {
        test("select", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_button() throws Exception {
        test("select", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_caption() throws Exception {
        test("select", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_center() throws Exception {
        test("select", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_cite() throws Exception {
        test("select", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_code() throws Exception {
        test("select", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_col() throws Exception {
        test("select", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_colgroup() throws Exception {
        test("select", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_dd() throws Exception {
        test("select", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_del() throws Exception {
        test("select", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_dfn() throws Exception {
        test("select", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_dir() throws Exception {
        test("select", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_div() throws Exception {
        test("select", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_dl() throws Exception {
        test("select", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_dt() throws Exception {
        test("select", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_em() throws Exception {
        test("select", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_embed() throws Exception {
        test("select", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_fieldset() throws Exception {
        test("select", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_font() throws Exception {
        test("select", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_form() throws Exception {
        test("select", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_frame() throws Exception {
        test("select", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_frameset() throws Exception {
        test("select", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h1() throws Exception {
        test("select", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h2() throws Exception {
        test("select", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h3() throws Exception {
        test("select", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h4() throws Exception {
        test("select", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h5() throws Exception {
        test("select", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_h6() throws Exception {
        test("select", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_head() throws Exception {
        test("select", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_hr() throws Exception {
        test("select", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_html() throws Exception {
        test("select", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_i() throws Exception {
        test("select", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_iframe() throws Exception {
        test("select", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_image() throws Exception {
        test("select", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_img() throws Exception {
        test("select", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_ins() throws Exception {
        test("select", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_kbd() throws Exception {
        test("select", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_label() throws Exception {
        test("select", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_legend() throws Exception {
        test("select", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_li() throws Exception {
        test("select", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_link() throws Exception {
        test("select", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_listing() throws Exception {
        test("select", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_map() throws Exception {
        test("select", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_marquee() throws Exception {
        test("select", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_menu() throws Exception {
        test("select", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_meta() throws Exception {
        test("select", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_nextid() throws Exception {
        test("select", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_nobr() throws Exception {
        test("select", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_noembed() throws Exception {
        test("select", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_noframes() throws Exception {
        test("select", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_noscript() throws Exception {
        test("select", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_object() throws Exception {
        test("select", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_ol() throws Exception {
        test("select", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_p() throws Exception {
        test("select", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_param() throws Exception {
        test("select", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_pre() throws Exception {
        test("select", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_q() throws Exception {
        test("select", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_rp() throws Exception {
        test("select", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_rt() throws Exception {
        test("select", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_ruby() throws Exception {
        test("select", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_s() throws Exception {
        test("select", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_samp() throws Exception {
        test("select", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_small() throws Exception {
        test("select", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_span() throws Exception {
        test("select", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_strike() throws Exception {
        test("select", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_strong() throws Exception {
        test("select", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_sub() throws Exception {
        test("select", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_sup() throws Exception {
        test("select", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_table() throws Exception {
        test("select", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_tbody() throws Exception {
        test("select", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_td() throws Exception {
        test("select", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_tfoot() throws Exception {
        test("select", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_th() throws Exception {
        test("select", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_thead() throws Exception {
        test("select", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _select_tr() throws Exception {
        test("select", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_tt() throws Exception {
        test("select", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_u() throws Exception {
        test("select", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_ul() throws Exception {
        test("select", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _select_var() throws Exception {
        test("select", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _select_wbr() throws Exception {
        test("select", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _small_body() throws Exception {
        test("small", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _small_head() throws Exception {
        test("small", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _small_html() throws Exception {
        test("small", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _small_object() throws Exception {
        test("small", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _small_title() throws Exception {
        test("small", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _span_body() throws Exception {
        test("span", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _span_head() throws Exception {
        test("span", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _span_html() throws Exception {
        test("span", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _span_object() throws Exception {
        test("span", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_title() throws Exception {
        test("span", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strike_body() throws Exception {
        test("strike", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strike_head() throws Exception {
        test("strike", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strike_html() throws Exception {
        test("strike", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _strike_object() throws Exception {
        test("strike", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strike_title() throws Exception {
        test("strike", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strong_body() throws Exception {
        test("strong", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strong_head() throws Exception {
        test("strong", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _strong_html() throws Exception {
        test("strong", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _strong_object() throws Exception {
        test("strong", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strong_title() throws Exception {
        test("strong", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_a() throws Exception {
        test("style", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_abbr() throws Exception {
        test("style", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_acronym() throws Exception {
        test("style", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_address() throws Exception {
        test("style", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_applet() throws Exception {
        test("style", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_area() throws Exception {
        test("style", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_article() throws Exception {
        test("style", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_aside() throws Exception {
        test("style", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_audio() throws Exception {
        test("style", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_b() throws Exception {
        test("style", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_base() throws Exception {
        test("style", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_basefont() throws Exception {
        test("style", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_bdi() throws Exception {
        test("style", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_bdo() throws Exception {
        test("style", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_bgsound() throws Exception {
        test("style", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_big() throws Exception {
        test("style", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_blink() throws Exception {
        test("style", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_blockquote() throws Exception {
        test("style", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_body() throws Exception {
        test("style", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_br() throws Exception {
        test("style", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_button() throws Exception {
        test("style", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_canvas() throws Exception {
        test("style", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_caption() throws Exception {
        test("style", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_center() throws Exception {
        test("style", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_cite() throws Exception {
        test("style", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_code() throws Exception {
        test("style", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_col() throws Exception {
        test("style", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_colgroup() throws Exception {
        test("style", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_command() throws Exception {
        test("style", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_datalist() throws Exception {
        test("style", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dd() throws Exception {
        test("style", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_del() throws Exception {
        test("style", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_details() throws Exception {
        test("style", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dfn() throws Exception {
        test("style", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dialog() throws Exception {
        test("style", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dir() throws Exception {
        test("style", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_div() throws Exception {
        test("style", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dl() throws Exception {
        test("style", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_dt() throws Exception {
        test("style", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_em() throws Exception {
        test("style", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_embed() throws Exception {
        test("style", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_fieldset() throws Exception {
        test("style", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_figcaption() throws Exception {
        test("style", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_figure() throws Exception {
        test("style", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_font() throws Exception {
        test("style", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_footer() throws Exception {
        test("style", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_form() throws Exception {
        test("style", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_frame() throws Exception {
        test("style", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_frameset() throws Exception {
        test("style", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h1() throws Exception {
        test("style", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h2() throws Exception {
        test("style", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h3() throws Exception {
        test("style", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h4() throws Exception {
        test("style", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h5() throws Exception {
        test("style", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_h6() throws Exception {
        test("style", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_head() throws Exception {
        test("style", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_header() throws Exception {
        test("style", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_hr() throws Exception {
        test("style", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_html() throws Exception {
        test("style", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_i() throws Exception {
        test("style", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_iframe() throws Exception {
        test("style", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_image() throws Exception {
        test("style", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_img() throws Exception {
        test("style", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_ins() throws Exception {
        test("style", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_isindex() throws Exception {
        test("style", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_kbd() throws Exception {
        test("style", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_keygen() throws Exception {
        test("style", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_label() throws Exception {
        test("style", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_layer() throws Exception {
        test("style", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_legend() throws Exception {
        test("style", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_li() throws Exception {
        test("style", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_link() throws Exception {
        test("style", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_listing() throws Exception {
        test("style", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_main() throws Exception {
        test("style", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_map() throws Exception {
        test("style", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_mark() throws Exception {
        test("style", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_marquee() throws Exception {
        test("style", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_menu() throws Exception {
        test("style", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_menuitem() throws Exception {
        test("style", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_meta() throws Exception {
        test("style", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_meter() throws Exception {
        test("style", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_multicol() throws Exception {
        test("style", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_nav() throws Exception {
        test("style", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_nextid() throws Exception {
        test("style", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_nobr() throws Exception {
        test("style", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_noembed() throws Exception {
        test("style", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_noframes() throws Exception {
        test("style", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_nolayer() throws Exception {
        test("style", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_noscript() throws Exception {
        test("style", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_object() throws Exception {
        test("style", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_ol() throws Exception {
        test("style", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_optgroup() throws Exception {
        test("style", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_option() throws Exception {
        test("style", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_output() throws Exception {
        test("style", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_p() throws Exception {
        test("style", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_param() throws Exception {
        test("style", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_plaintext() throws Exception {
        test("style", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_pre() throws Exception {
        test("style", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_progress() throws Exception {
        test("style", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_q() throws Exception {
        test("style", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_rp() throws Exception {
        test("style", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_rt() throws Exception {
        test("style", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_ruby() throws Exception {
        test("style", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_s() throws Exception {
        test("style", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_samp() throws Exception {
        test("style", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_script() throws Exception {
        test("style", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_section() throws Exception {
        test("style", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_select() throws Exception {
        test("style", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_small() throws Exception {
        test("style", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_source() throws Exception {
        test("style", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_span() throws Exception {
        test("style", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_strike() throws Exception {
        test("style", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_strong() throws Exception {
        test("style", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_style() throws Exception {
        test("style", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_sub() throws Exception {
        test("style", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_summary() throws Exception {
        test("style", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_sup() throws Exception {
        test("style", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_table() throws Exception {
        test("style", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_tbody() throws Exception {
        test("style", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_td() throws Exception {
        test("style", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_textarea() throws Exception {
        test("style", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_tfoot() throws Exception {
        test("style", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_th() throws Exception {
        test("style", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_thead() throws Exception {
        test("style", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_time() throws Exception {
        test("style", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_title() throws Exception {
        test("style", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_tr() throws Exception {
        test("style", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_track() throws Exception {
        test("style", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_tt() throws Exception {
        test("style", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_u() throws Exception {
        test("style", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_ul() throws Exception {
        test("style", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_var() throws Exception {
        test("style", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_video() throws Exception {
        test("style", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_wbr() throws Exception {
        test("style", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_xmp() throws Exception {
        test("style", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sub_body() throws Exception {
        test("sub", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sub_head() throws Exception {
        test("sub", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sub_html() throws Exception {
        test("sub", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _sub_object() throws Exception {
        test("sub", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sub_title() throws Exception {
        test("sub", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_a() throws Exception {
        test("summary", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_abbr() throws Exception {
        test("summary", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_acronym() throws Exception {
        test("summary", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_address() throws Exception {
        test("summary", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_applet() throws Exception {
        test("summary", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_article() throws Exception {
        test("summary", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_aside() throws Exception {
        test("summary", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_audio() throws Exception {
        test("summary", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_b() throws Exception {
        test("summary", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_bdi() throws Exception {
        test("summary", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_bdo() throws Exception {
        test("summary", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_big() throws Exception {
        test("summary", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_blink() throws Exception {
        test("summary", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_blockquote() throws Exception {
        test("summary", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_body() throws Exception {
        test("summary", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_button() throws Exception {
        test("summary", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_canvas() throws Exception {
        test("summary", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_caption() throws Exception {
        test("summary", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_center() throws Exception {
        test("summary", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_cite() throws Exception {
        test("summary", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_code() throws Exception {
        test("summary", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_col() throws Exception {
        test("summary", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_colgroup() throws Exception {
        test("summary", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_datalist() throws Exception {
        test("summary", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dd() throws Exception {
        test("summary", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_del() throws Exception {
        test("summary", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_details() throws Exception {
        test("summary", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dfn() throws Exception {
        test("summary", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dialog() throws Exception {
        test("summary", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dir() throws Exception {
        test("summary", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_div() throws Exception {
        test("summary", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dl() throws Exception {
        test("summary", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_dt() throws Exception {
        test("summary", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_em() throws Exception {
        test("summary", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_fieldset() throws Exception {
        test("summary", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_figcaption() throws Exception {
        test("summary", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_figure() throws Exception {
        test("summary", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_font() throws Exception {
        test("summary", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_footer() throws Exception {
        test("summary", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_form() throws Exception {
        test("summary", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_frame() throws Exception {
        test("summary", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_frameset() throws Exception {
        test("summary", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h1() throws Exception {
        test("summary", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h2() throws Exception {
        test("summary", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h3() throws Exception {
        test("summary", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h4() throws Exception {
        test("summary", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h5() throws Exception {
        test("summary", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_h6() throws Exception {
        test("summary", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_head() throws Exception {
        test("summary", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_header() throws Exception {
        test("summary", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_html() throws Exception {
        test("summary", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_i() throws Exception {
        test("summary", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_iframe() throws Exception {
        test("summary", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_ins() throws Exception {
        test("summary", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_kbd() throws Exception {
        test("summary", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_label() throws Exception {
        test("summary", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_layer() throws Exception {
        test("summary", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_legend() throws Exception {
        test("summary", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_li() throws Exception {
        test("summary", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_listing() throws Exception {
        test("summary", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_main() throws Exception {
        test("summary", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_map() throws Exception {
        test("summary", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_mark() throws Exception {
        test("summary", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_marquee() throws Exception {
        test("summary", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_menu() throws Exception {
        test("summary", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_menuitem() throws Exception {
        test("summary", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_meter() throws Exception {
        test("summary", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_multicol() throws Exception {
        test("summary", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_nav() throws Exception {
        test("summary", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_nextid() throws Exception {
        test("summary", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_nobr() throws Exception {
        test("summary", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_noembed() throws Exception {
        test("summary", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_noframes() throws Exception {
        test("summary", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_nolayer() throws Exception {
        test("summary", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_noscript() throws Exception {
        test("summary", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_object() throws Exception {
        test("summary", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_ol() throws Exception {
        test("summary", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_optgroup() throws Exception {
        test("summary", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_option() throws Exception {
        test("summary", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_output() throws Exception {
        test("summary", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_p() throws Exception {
        test("summary", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_plaintext() throws Exception {
        test("summary", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_pre() throws Exception {
        test("summary", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_progress() throws Exception {
        test("summary", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_q() throws Exception {
        test("summary", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_rp() throws Exception {
        test("summary", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_rt() throws Exception {
        test("summary", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_ruby() throws Exception {
        test("summary", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_s() throws Exception {
        test("summary", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_samp() throws Exception {
        test("summary", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _summary_script() throws Exception {
        test("summary", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_section() throws Exception {
        test("summary", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_select() throws Exception {
        test("summary", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_small() throws Exception {
        test("summary", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_span() throws Exception {
        test("summary", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_strike() throws Exception {
        test("summary", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_strong() throws Exception {
        test("summary", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_style() throws Exception {
        test("summary", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_sub() throws Exception {
        test("summary", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_summary() throws Exception {
        test("summary", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_sup() throws Exception {
        test("summary", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_table() throws Exception {
        test("summary", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_tbody() throws Exception {
        test("summary", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_td() throws Exception {
        test("summary", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_textarea() throws Exception {
        test("summary", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_tfoot() throws Exception {
        test("summary", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_th() throws Exception {
        test("summary", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_thead() throws Exception {
        test("summary", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_time() throws Exception {
        test("summary", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _summary_title() throws Exception {
        test("summary", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _summary_tr() throws Exception {
        test("summary", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_tt() throws Exception {
        test("summary", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_u() throws Exception {
        test("summary", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_ul() throws Exception {
        test("summary", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_var() throws Exception {
        test("summary", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_video() throws Exception {
        test("summary", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_xmp() throws Exception {
        test("summary", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sup_body() throws Exception {
        test("sup", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sup_head() throws Exception {
        test("sup", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _sup_html() throws Exception {
        test("sup", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _sup_object() throws Exception {
        test("sup", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sup_title() throws Exception {
        test("sup", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_area() throws Exception {
        test("table", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_base() throws Exception {
        test("table", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_basefont() throws Exception {
        test("table", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_bgsound() throws Exception {
        test("table", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_body() throws Exception {
        test("table", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_br() throws Exception {
        test("table", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_caption() throws Exception {
        test("table", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_col() throws Exception {
        test("table", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_colgroup() throws Exception {
        test("table", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3",
            FF31 = "0")
    @NotYetImplemented({ CHROME, IE, FF38 })
    public void _table_command() throws Exception {
        test("table", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_embed() throws Exception {
        test("table", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_frame() throws Exception {
        test("table", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_frameset() throws Exception {
        test("table", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_head() throws Exception {
        test("table", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_hr() throws Exception {
        test("table", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_html() throws Exception {
        test("table", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented
    public void _table_image() throws Exception {
        test("table", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_img() throws Exception {
        test("table", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_keygen() throws Exception {
        test("table", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_link() throws Exception {
        test("table", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_meta() throws Exception {
        test("table", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_param() throws Exception {
        test("table", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_script() throws Exception {
        test("table", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_source() throws Exception {
        test("table", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_style() throws Exception {
        test("table", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_tfoot() throws Exception {
        test("table", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_thead() throws Exception {
        test("table", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "3")
    @NotYetImplemented
    public void _table_track() throws Exception {
        test("table", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _table_wbr() throws Exception {
        test("table", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_a() throws Exception {
        test("time", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_abbr() throws Exception {
        test("time", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_acronym() throws Exception {
        test("time", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_address() throws Exception {
        test("time", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_applet() throws Exception {
        test("time", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_article() throws Exception {
        test("time", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_aside() throws Exception {
        test("time", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_audio() throws Exception {
        test("time", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_b() throws Exception {
        test("time", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_bdi() throws Exception {
        test("time", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_bdo() throws Exception {
        test("time", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_big() throws Exception {
        test("time", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_blink() throws Exception {
        test("time", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_blockquote() throws Exception {
        test("time", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_body() throws Exception {
        test("time", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_button() throws Exception {
        test("time", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_canvas() throws Exception {
        test("time", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_caption() throws Exception {
        test("time", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_center() throws Exception {
        test("time", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_cite() throws Exception {
        test("time", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_code() throws Exception {
        test("time", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_col() throws Exception {
        test("time", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_colgroup() throws Exception {
        test("time", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_datalist() throws Exception {
        test("time", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dd() throws Exception {
        test("time", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_del() throws Exception {
        test("time", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_details() throws Exception {
        test("time", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dfn() throws Exception {
        test("time", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dialog() throws Exception {
        test("time", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dir() throws Exception {
        test("time", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_div() throws Exception {
        test("time", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dl() throws Exception {
        test("time", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_dt() throws Exception {
        test("time", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_em() throws Exception {
        test("time", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_fieldset() throws Exception {
        test("time", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_figcaption() throws Exception {
        test("time", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_figure() throws Exception {
        test("time", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_font() throws Exception {
        test("time", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_footer() throws Exception {
        test("time", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_form() throws Exception {
        test("time", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_frame() throws Exception {
        test("time", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_frameset() throws Exception {
        test("time", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h1() throws Exception {
        test("time", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h2() throws Exception {
        test("time", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h3() throws Exception {
        test("time", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h4() throws Exception {
        test("time", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h5() throws Exception {
        test("time", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_h6() throws Exception {
        test("time", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_head() throws Exception {
        test("time", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_header() throws Exception {
        test("time", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_html() throws Exception {
        test("time", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_i() throws Exception {
        test("time", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_iframe() throws Exception {
        test("time", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_ins() throws Exception {
        test("time", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_kbd() throws Exception {
        test("time", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_label() throws Exception {
        test("time", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_layer() throws Exception {
        test("time", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_legend() throws Exception {
        test("time", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_li() throws Exception {
        test("time", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_listing() throws Exception {
        test("time", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_main() throws Exception {
        test("time", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_map() throws Exception {
        test("time", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_mark() throws Exception {
        test("time", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_marquee() throws Exception {
        test("time", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_menu() throws Exception {
        test("time", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_menuitem() throws Exception {
        test("time", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_meter() throws Exception {
        test("time", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_multicol() throws Exception {
        test("time", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_nav() throws Exception {
        test("time", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _time_nextid() throws Exception {
        test("time", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_nobr() throws Exception {
        test("time", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_noembed() throws Exception {
        test("time", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_noframes() throws Exception {
        test("time", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_nolayer() throws Exception {
        test("time", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_noscript() throws Exception {
        test("time", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_object() throws Exception {
        test("time", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_ol() throws Exception {
        test("time", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_optgroup() throws Exception {
        test("time", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_option() throws Exception {
        test("time", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_output() throws Exception {
        test("time", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_p() throws Exception {
        test("time", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_plaintext() throws Exception {
        test("time", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_pre() throws Exception {
        test("time", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_progress() throws Exception {
        test("time", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_q() throws Exception {
        test("time", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_rp() throws Exception {
        test("time", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_rt() throws Exception {
        test("time", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_ruby() throws Exception {
        test("time", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_s() throws Exception {
        test("time", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_samp() throws Exception {
        test("time", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _time_script() throws Exception {
        test("time", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_section() throws Exception {
        test("time", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_select() throws Exception {
        test("time", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_small() throws Exception {
        test("time", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_span() throws Exception {
        test("time", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_strike() throws Exception {
        test("time", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_strong() throws Exception {
        test("time", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_style() throws Exception {
        test("time", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_sub() throws Exception {
        test("time", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_summary() throws Exception {
        test("time", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_sup() throws Exception {
        test("time", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_table() throws Exception {
        test("time", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_tbody() throws Exception {
        test("time", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_td() throws Exception {
        test("time", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_textarea() throws Exception {
        test("time", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_tfoot() throws Exception {
        test("time", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_th() throws Exception {
        test("time", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_thead() throws Exception {
        test("time", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_time() throws Exception {
        test("time", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _time_title() throws Exception {
        test("time", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _time_tr() throws Exception {
        test("time", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_tt() throws Exception {
        test("time", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_u() throws Exception {
        test("time", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_ul() throws Exception {
        test("time", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_var() throws Exception {
        test("time", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_video() throws Exception {
        test("time", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_xmp() throws Exception {
        test("time", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_a() throws Exception {
        test("title", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_abbr() throws Exception {
        test("title", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_acronym() throws Exception {
        test("title", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_address() throws Exception {
        test("title", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_applet() throws Exception {
        test("title", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_area() throws Exception {
        test("title", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_article() throws Exception {
        test("title", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_aside() throws Exception {
        test("title", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_audio() throws Exception {
        test("title", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_b() throws Exception {
        test("title", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_base() throws Exception {
        test("title", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ IE8, CHROME, FF, IE11 })
    public void _title_basefont() throws Exception {
        test("title", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_bdi() throws Exception {
        test("title", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_bdo() throws Exception {
        test("title", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_bgsound() throws Exception {
        test("title", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_big() throws Exception {
        test("title", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_blink() throws Exception {
        test("title", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_blockquote() throws Exception {
        test("title", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_body() throws Exception {
        test("title", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_br() throws Exception {
        test("title", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_button() throws Exception {
        test("title", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_canvas() throws Exception {
        test("title", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_caption() throws Exception {
        test("title", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_center() throws Exception {
        test("title", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_cite() throws Exception {
        test("title", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_code() throws Exception {
        test("title", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_col() throws Exception {
        test("title", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_colgroup() throws Exception {
        test("title", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_command() throws Exception {
        test("title", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_datalist() throws Exception {
        test("title", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dd() throws Exception {
        test("title", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_del() throws Exception {
        test("title", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_details() throws Exception {
        test("title", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dfn() throws Exception {
        test("title", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dialog() throws Exception {
        test("title", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dir() throws Exception {
        test("title", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_div() throws Exception {
        test("title", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dl() throws Exception {
        test("title", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_dt() throws Exception {
        test("title", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_em() throws Exception {
        test("title", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_embed() throws Exception {
        test("title", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_fieldset() throws Exception {
        test("title", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_figcaption() throws Exception {
        test("title", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_figure() throws Exception {
        test("title", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_font() throws Exception {
        test("title", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_footer() throws Exception {
        test("title", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_form() throws Exception {
        test("title", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_frame() throws Exception {
        test("title", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_frameset() throws Exception {
        test("title", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h1() throws Exception {
        test("title", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h2() throws Exception {
        test("title", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h3() throws Exception {
        test("title", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h4() throws Exception {
        test("title", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h5() throws Exception {
        test("title", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_h6() throws Exception {
        test("title", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_head() throws Exception {
        test("title", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_header() throws Exception {
        test("title", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_hr() throws Exception {
        test("title", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_html() throws Exception {
        test("title", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_i() throws Exception {
        test("title", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_iframe() throws Exception {
        test("title", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_image() throws Exception {
        test("title", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_img() throws Exception {
        test("title", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_ins() throws Exception {
        test("title", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_isindex() throws Exception {
        test("title", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_kbd() throws Exception {
        test("title", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ IE8, CHROME, FF, IE11 })
    public void _title_keygen() throws Exception {
        test("title", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_label() throws Exception {
        test("title", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_layer() throws Exception {
        test("title", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_legend() throws Exception {
        test("title", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_li() throws Exception {
        test("title", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_link() throws Exception {
        test("title", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_listing() throws Exception {
        test("title", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_main() throws Exception {
        test("title", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_map() throws Exception {
        test("title", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_mark() throws Exception {
        test("title", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_marquee() throws Exception {
        test("title", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_menu() throws Exception {
        test("title", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_menuitem() throws Exception {
        test("title", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _title_meta() throws Exception {
        test("title", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_meter() throws Exception {
        test("title", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_multicol() throws Exception {
        test("title", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_nav() throws Exception {
        test("title", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_nextid() throws Exception {
        test("title", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_nobr() throws Exception {
        test("title", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_noembed() throws Exception {
        test("title", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_noframes() throws Exception {
        test("title", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_nolayer() throws Exception {
        test("title", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_noscript() throws Exception {
        test("title", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_object() throws Exception {
        test("title", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_ol() throws Exception {
        test("title", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_optgroup() throws Exception {
        test("title", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_option() throws Exception {
        test("title", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_output() throws Exception {
        test("title", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_p() throws Exception {
        test("title", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_param() throws Exception {
        test("title", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_plaintext() throws Exception {
        test("title", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_pre() throws Exception {
        test("title", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_progress() throws Exception {
        test("title", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_q() throws Exception {
        test("title", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_rp() throws Exception {
        test("title", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_rt() throws Exception {
        test("title", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_ruby() throws Exception {
        test("title", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_s() throws Exception {
        test("title", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_samp() throws Exception {
        test("title", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_script() throws Exception {
        test("title", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_section() throws Exception {
        test("title", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_select() throws Exception {
        test("title", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_small() throws Exception {
        test("title", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_source() throws Exception {
        test("title", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_span() throws Exception {
        test("title", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_strike() throws Exception {
        test("title", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_strong() throws Exception {
        test("title", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _title_style() throws Exception {
        test("title", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_sub() throws Exception {
        test("title", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_summary() throws Exception {
        test("title", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_sup() throws Exception {
        test("title", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_table() throws Exception {
        test("title", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_tbody() throws Exception {
        test("title", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_td() throws Exception {
        test("title", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_textarea() throws Exception {
        test("title", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_tfoot() throws Exception {
        test("title", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_th() throws Exception {
        test("title", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_thead() throws Exception {
        test("title", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_time() throws Exception {
        test("title", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _title_title() throws Exception {
        test("title", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _title_tr() throws Exception {
        test("title", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_track() throws Exception {
        test("title", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_tt() throws Exception {
        test("title", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_u() throws Exception {
        test("title", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_ul() throws Exception {
        test("title", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_var() throws Exception {
        test("title", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_video() throws Exception {
        test("title", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_wbr() throws Exception {
        test("title", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_xmp() throws Exception {
        test("title", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _tt_body() throws Exception {
        test("tt", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _tt_head() throws Exception {
        test("tt", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _tt_html() throws Exception {
        test("tt", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tt_object() throws Exception {
        test("tt", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _tt_title() throws Exception {
        test("tt", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _u_body() throws Exception {
        test("u", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _u_head() throws Exception {
        test("u", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _u_html() throws Exception {
        test("u", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _u_object() throws Exception {
        test("u", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _u_title() throws Exception {
        test("u", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ul_body() throws Exception {
        test("ul", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ul_head() throws Exception {
        test("ul", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _ul_html() throws Exception {
        test("ul", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _ul_object() throws Exception {
        test("ul", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_title() throws Exception {
        test("ul", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _var_body() throws Exception {
        test("var", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _var_head() throws Exception {
        test("var", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _var_html() throws Exception {
        test("var", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _var_object() throws Exception {
        test("var", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _var_title() throws Exception {
        test("var", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_a() throws Exception {
        test("video", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_abbr() throws Exception {
        test("video", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_acronym() throws Exception {
        test("video", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_address() throws Exception {
        test("video", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_applet() throws Exception {
        test("video", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_article() throws Exception {
        test("video", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_aside() throws Exception {
        test("video", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_audio() throws Exception {
        test("video", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_b() throws Exception {
        test("video", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_bdi() throws Exception {
        test("video", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_bdo() throws Exception {
        test("video", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_big() throws Exception {
        test("video", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_blink() throws Exception {
        test("video", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_blockquote() throws Exception {
        test("video", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_body() throws Exception {
        test("video", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_button() throws Exception {
        test("video", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_canvas() throws Exception {
        test("video", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_caption() throws Exception {
        test("video", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_center() throws Exception {
        test("video", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_cite() throws Exception {
        test("video", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_code() throws Exception {
        test("video", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_col() throws Exception {
        test("video", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_colgroup() throws Exception {
        test("video", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_datalist() throws Exception {
        test("video", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dd() throws Exception {
        test("video", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_del() throws Exception {
        test("video", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_details() throws Exception {
        test("video", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dfn() throws Exception {
        test("video", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dialog() throws Exception {
        test("video", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dir() throws Exception {
        test("video", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_div() throws Exception {
        test("video", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dl() throws Exception {
        test("video", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_dt() throws Exception {
        test("video", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_em() throws Exception {
        test("video", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_fieldset() throws Exception {
        test("video", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_figcaption() throws Exception {
        test("video", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_figure() throws Exception {
        test("video", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_font() throws Exception {
        test("video", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_footer() throws Exception {
        test("video", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_form() throws Exception {
        test("video", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_frame() throws Exception {
        test("video", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_frameset() throws Exception {
        test("video", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h1() throws Exception {
        test("video", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h2() throws Exception {
        test("video", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h3() throws Exception {
        test("video", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h4() throws Exception {
        test("video", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h5() throws Exception {
        test("video", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_h6() throws Exception {
        test("video", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_head() throws Exception {
        test("video", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_header() throws Exception {
        test("video", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_html() throws Exception {
        test("video", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_i() throws Exception {
        test("video", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_iframe() throws Exception {
        test("video", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_ins() throws Exception {
        test("video", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_kbd() throws Exception {
        test("video", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_label() throws Exception {
        test("video", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_layer() throws Exception {
        test("video", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_legend() throws Exception {
        test("video", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_li() throws Exception {
        test("video", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_listing() throws Exception {
        test("video", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_main() throws Exception {
        test("video", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_map() throws Exception {
        test("video", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_mark() throws Exception {
        test("video", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_marquee() throws Exception {
        test("video", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_menu() throws Exception {
        test("video", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_menuitem() throws Exception {
        test("video", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_meter() throws Exception {
        test("video", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_multicol() throws Exception {
        test("video", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_nav() throws Exception {
        test("video", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _video_nextid() throws Exception {
        test("video", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_nobr() throws Exception {
        test("video", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_noembed() throws Exception {
        test("video", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_noframes() throws Exception {
        test("video", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_nolayer() throws Exception {
        test("video", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_noscript() throws Exception {
        test("video", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_object() throws Exception {
        test("video", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_ol() throws Exception {
        test("video", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_optgroup() throws Exception {
        test("video", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_option() throws Exception {
        test("video", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_output() throws Exception {
        test("video", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_p() throws Exception {
        test("video", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_plaintext() throws Exception {
        test("video", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_pre() throws Exception {
        test("video", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_progress() throws Exception {
        test("video", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_q() throws Exception {
        test("video", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_rp() throws Exception {
        test("video", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_rt() throws Exception {
        test("video", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_ruby() throws Exception {
        test("video", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_s() throws Exception {
        test("video", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_samp() throws Exception {
        test("video", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _video_script() throws Exception {
        test("video", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_section() throws Exception {
        test("video", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_select() throws Exception {
        test("video", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_small() throws Exception {
        test("video", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_span() throws Exception {
        test("video", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_strike() throws Exception {
        test("video", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_strong() throws Exception {
        test("video", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_style() throws Exception {
        test("video", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_sub() throws Exception {
        test("video", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_summary() throws Exception {
        test("video", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_sup() throws Exception {
        test("video", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_table() throws Exception {
        test("video", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_tbody() throws Exception {
        test("video", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_td() throws Exception {
        test("video", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_textarea() throws Exception {
        test("video", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_tfoot() throws Exception {
        test("video", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_th() throws Exception {
        test("video", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_thead() throws Exception {
        test("video", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_time() throws Exception {
        test("video", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _video_title() throws Exception {
        test("video", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _video_tr() throws Exception {
        test("video", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_tt() throws Exception {
        test("video", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_u() throws Exception {
        test("video", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_ul() throws Exception {
        test("video", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_var() throws Exception {
        test("video", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_video() throws Exception {
        test("video", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_xmp() throws Exception {
        test("video", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_applet() throws Exception {
        test("a", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_center() throws Exception {
        test("a", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_dd() throws Exception {
        test("a", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_del() throws Exception {
        test("a", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_dir() throws Exception {
        test("a", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_dt() throws Exception {
        test("a", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_fieldset() throws Exception {
        test("a", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_legend() throws Exception {
        test("a", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_listing() throws Exception {
        test("a", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_marquee() throws Exception {
        test("a", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_menu() throws Exception {
        test("a", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_multicol() throws Exception {
        test("a", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _a_nextid() throws Exception {
        test("a", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_noembed() throws Exception {
        test("a", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_noframes() throws Exception {
        test("a", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_nolayer() throws Exception {
        test("a", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_noscript() throws Exception {
        test("a", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_pre() throws Exception {
        test("a", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_rp() throws Exception {
        test("a", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_rt() throws Exception {
        test("a", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_ruby() throws Exception {
        test("a", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _a_s() throws Exception {
        test("a", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _a_script() throws Exception {
        test("a", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_applet() throws Exception {
        test("abbr", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_center() throws Exception {
        test("abbr", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_dd() throws Exception {
        test("abbr", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_del() throws Exception {
        test("abbr", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_dir() throws Exception {
        test("abbr", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_dt() throws Exception {
        test("abbr", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_fieldset() throws Exception {
        test("abbr", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_legend() throws Exception {
        test("abbr", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_listing() throws Exception {
        test("abbr", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_marquee() throws Exception {
        test("abbr", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_menu() throws Exception {
        test("abbr", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_multicol() throws Exception {
        test("abbr", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _abbr_nextid() throws Exception {
        test("abbr", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_noembed() throws Exception {
        test("abbr", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_noframes() throws Exception {
        test("abbr", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_nolayer() throws Exception {
        test("abbr", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_noscript() throws Exception {
        test("abbr", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_pre() throws Exception {
        test("abbr", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_rp() throws Exception {
        test("abbr", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_rt() throws Exception {
        test("abbr", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_ruby() throws Exception {
        test("abbr", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _abbr_s() throws Exception {
        test("abbr", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _abbr_script() throws Exception {
        test("abbr", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_applet() throws Exception {
        test("acronym", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_center() throws Exception {
        test("acronym", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_dd() throws Exception {
        test("acronym", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_del() throws Exception {
        test("acronym", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_dir() throws Exception {
        test("acronym", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_dt() throws Exception {
        test("acronym", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_fieldset() throws Exception {
        test("acronym", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_legend() throws Exception {
        test("acronym", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_listing() throws Exception {
        test("acronym", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_marquee() throws Exception {
        test("acronym", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_menu() throws Exception {
        test("acronym", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_multicol() throws Exception {
        test("acronym", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _acronym_nextid() throws Exception {
        test("acronym", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_noembed() throws Exception {
        test("acronym", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_noframes() throws Exception {
        test("acronym", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_nolayer() throws Exception {
        test("acronym", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_noscript() throws Exception {
        test("acronym", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_pre() throws Exception {
        test("acronym", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_rp() throws Exception {
        test("acronym", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_rt() throws Exception {
        test("acronym", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_ruby() throws Exception {
        test("acronym", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _acronym_s() throws Exception {
        test("acronym", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _acronym_script() throws Exception {
        test("acronym", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _address_nextid() throws Exception {
        test("address", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _address_script() throws Exception {
        test("address", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_applet() throws Exception {
        test("b", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_center() throws Exception {
        test("b", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_dd() throws Exception {
        test("b", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_del() throws Exception {
        test("b", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_dir() throws Exception {
        test("b", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_dt() throws Exception {
        test("b", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_fieldset() throws Exception {
        test("b", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_legend() throws Exception {
        test("b", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_listing() throws Exception {
        test("b", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_marquee() throws Exception {
        test("b", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_menu() throws Exception {
        test("b", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_multicol() throws Exception {
        test("b", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _b_nextid() throws Exception {
        test("b", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_noembed() throws Exception {
        test("b", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_noframes() throws Exception {
        test("b", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_nolayer() throws Exception {
        test("b", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_noscript() throws Exception {
        test("b", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_pre() throws Exception {
        test("b", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_rp() throws Exception {
        test("b", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_rt() throws Exception {
        test("b", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_ruby() throws Exception {
        test("b", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _b_s() throws Exception {
        test("b", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _b_script() throws Exception {
        test("b", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_applet() throws Exception {
        test("bdo", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_center() throws Exception {
        test("bdo", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_dd() throws Exception {
        test("bdo", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_del() throws Exception {
        test("bdo", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_dir() throws Exception {
        test("bdo", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_dt() throws Exception {
        test("bdo", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_fieldset() throws Exception {
        test("bdo", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_legend() throws Exception {
        test("bdo", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_listing() throws Exception {
        test("bdo", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_marquee() throws Exception {
        test("bdo", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_menu() throws Exception {
        test("bdo", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_multicol() throws Exception {
        test("bdo", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _bdo_nextid() throws Exception {
        test("bdo", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_noembed() throws Exception {
        test("bdo", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_noframes() throws Exception {
        test("bdo", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_nolayer() throws Exception {
        test("bdo", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_noscript() throws Exception {
        test("bdo", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_pre() throws Exception {
        test("bdo", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_rp() throws Exception {
        test("bdo", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_rt() throws Exception {
        test("bdo", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_ruby() throws Exception {
        test("bdo", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _bdo_s() throws Exception {
        test("bdo", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _bdo_script() throws Exception {
        test("bdo", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_applet() throws Exception {
        test("big", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_center() throws Exception {
        test("big", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_dd() throws Exception {
        test("big", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_del() throws Exception {
        test("big", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_dir() throws Exception {
        test("big", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_dt() throws Exception {
        test("big", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_fieldset() throws Exception {
        test("big", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_legend() throws Exception {
        test("big", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_listing() throws Exception {
        test("big", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_marquee() throws Exception {
        test("big", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_menu() throws Exception {
        test("big", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_multicol() throws Exception {
        test("big", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _big_nextid() throws Exception {
        test("big", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_noembed() throws Exception {
        test("big", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_noframes() throws Exception {
        test("big", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_nolayer() throws Exception {
        test("big", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_noscript() throws Exception {
        test("big", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_pre() throws Exception {
        test("big", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_rp() throws Exception {
        test("big", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_rt() throws Exception {
        test("big", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_ruby() throws Exception {
        test("big", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _big_s() throws Exception {
        test("big", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _big_script() throws Exception {
        test("big", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_applet() throws Exception {
        test("blink", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_center() throws Exception {
        test("blink", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_dd() throws Exception {
        test("blink", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_del() throws Exception {
        test("blink", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_dir() throws Exception {
        test("blink", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_dt() throws Exception {
        test("blink", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_fieldset() throws Exception {
        test("blink", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_legend() throws Exception {
        test("blink", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_listing() throws Exception {
        test("blink", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_marquee() throws Exception {
        test("blink", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_menu() throws Exception {
        test("blink", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_multicol() throws Exception {
        test("blink", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blink_nextid() throws Exception {
        test("blink", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_noembed() throws Exception {
        test("blink", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_noframes() throws Exception {
        test("blink", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_nolayer() throws Exception {
        test("blink", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_noscript() throws Exception {
        test("blink", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_pre() throws Exception {
        test("blink", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_rp() throws Exception {
        test("blink", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_rt() throws Exception {
        test("blink", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_ruby() throws Exception {
        test("blink", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _blink_s() throws Exception {
        test("blink", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _blink_script() throws Exception {
        test("blink", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _blockquote_nextid() throws Exception {
        test("blockquote", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _blockquote_script() throws Exception {
        test("blockquote", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_frame() throws Exception {
        test("body", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _body_frameset() throws Exception {
        test("body", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_applet() throws Exception {
        test("button", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_center() throws Exception {
        test("button", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_dd() throws Exception {
        test("button", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_del() throws Exception {
        test("button", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_dir() throws Exception {
        test("button", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_dt() throws Exception {
        test("button", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_fieldset() throws Exception {
        test("button", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _button_form() throws Exception {
        test("button", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_legend() throws Exception {
        test("button", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_listing() throws Exception {
        test("button", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_marquee() throws Exception {
        test("button", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_menu() throws Exception {
        test("button", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_multicol() throws Exception {
        test("button", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _button_nextid() throws Exception {
        test("button", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_noembed() throws Exception {
        test("button", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_noframes() throws Exception {
        test("button", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_nolayer() throws Exception {
        test("button", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_noscript() throws Exception {
        test("button", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_pre() throws Exception {
        test("button", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_rp() throws Exception {
        test("button", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_rt() throws Exception {
        test("button", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_ruby() throws Exception {
        test("button", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _button_s() throws Exception {
        test("button", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _button_script() throws Exception {
        test("button", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _center_nextid() throws Exception {
        test("center", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _center_script() throws Exception {
        test("center", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_applet() throws Exception {
        test("cite", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_center() throws Exception {
        test("cite", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_dd() throws Exception {
        test("cite", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_del() throws Exception {
        test("cite", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_dir() throws Exception {
        test("cite", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_dt() throws Exception {
        test("cite", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_fieldset() throws Exception {
        test("cite", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_legend() throws Exception {
        test("cite", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_listing() throws Exception {
        test("cite", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_marquee() throws Exception {
        test("cite", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_menu() throws Exception {
        test("cite", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_multicol() throws Exception {
        test("cite", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _cite_nextid() throws Exception {
        test("cite", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_noembed() throws Exception {
        test("cite", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_noframes() throws Exception {
        test("cite", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_nolayer() throws Exception {
        test("cite", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_noscript() throws Exception {
        test("cite", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_pre() throws Exception {
        test("cite", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_rp() throws Exception {
        test("cite", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_rt() throws Exception {
        test("cite", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_ruby() throws Exception {
        test("cite", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _cite_s() throws Exception {
        test("cite", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _cite_script() throws Exception {
        test("cite", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_applet() throws Exception {
        test("code", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_center() throws Exception {
        test("code", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_dd() throws Exception {
        test("code", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_del() throws Exception {
        test("code", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_dir() throws Exception {
        test("code", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_dt() throws Exception {
        test("code", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_fieldset() throws Exception {
        test("code", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_legend() throws Exception {
        test("code", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_listing() throws Exception {
        test("code", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_marquee() throws Exception {
        test("code", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_menu() throws Exception {
        test("code", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_multicol() throws Exception {
        test("code", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _code_nextid() throws Exception {
        test("code", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_noembed() throws Exception {
        test("code", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_noframes() throws Exception {
        test("code", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_nolayer() throws Exception {
        test("code", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_noscript() throws Exception {
        test("code", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_pre() throws Exception {
        test("code", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_rp() throws Exception {
        test("code", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_rt() throws Exception {
        test("code", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_ruby() throws Exception {
        test("code", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _code_s() throws Exception {
        test("code", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _code_script() throws Exception {
        test("code", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dd_nextid() throws Exception {
        test("dd", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _dd_script() throws Exception {
        test("dd", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _del_nextid() throws Exception {
        test("del", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _del_script() throws Exception {
        test("del", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_applet() throws Exception {
        test("dfn", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_center() throws Exception {
        test("dfn", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_dd() throws Exception {
        test("dfn", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_del() throws Exception {
        test("dfn", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_dir() throws Exception {
        test("dfn", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_dt() throws Exception {
        test("dfn", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_fieldset() throws Exception {
        test("dfn", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_legend() throws Exception {
        test("dfn", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_listing() throws Exception {
        test("dfn", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_marquee() throws Exception {
        test("dfn", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_menu() throws Exception {
        test("dfn", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_multicol() throws Exception {
        test("dfn", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dfn_nextid() throws Exception {
        test("dfn", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_noembed() throws Exception {
        test("dfn", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_noframes() throws Exception {
        test("dfn", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_nolayer() throws Exception {
        test("dfn", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_noscript() throws Exception {
        test("dfn", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_pre() throws Exception {
        test("dfn", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_rp() throws Exception {
        test("dfn", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_rt() throws Exception {
        test("dfn", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_ruby() throws Exception {
        test("dfn", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _dfn_s() throws Exception {
        test("dfn", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _dfn_script() throws Exception {
        test("dfn", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dir_nextid() throws Exception {
        test("dir", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _dir_script() throws Exception {
        test("dir", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _div_nextid() throws Exception {
        test("div", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _div_script() throws Exception {
        test("div", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dl_nextid() throws Exception {
        test("dl", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _dl_script() throws Exception {
        test("dl", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _dt_nextid() throws Exception {
        test("dt", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _dt_script() throws Exception {
        test("dt", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_applet() throws Exception {
        test("em", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_center() throws Exception {
        test("em", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_dd() throws Exception {
        test("em", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_del() throws Exception {
        test("em", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_dir() throws Exception {
        test("em", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_dt() throws Exception {
        test("em", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_fieldset() throws Exception {
        test("em", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_legend() throws Exception {
        test("em", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_listing() throws Exception {
        test("em", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_marquee() throws Exception {
        test("em", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_menu() throws Exception {
        test("em", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_multicol() throws Exception {
        test("em", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _em_nextid() throws Exception {
        test("em", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_noembed() throws Exception {
        test("em", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_noframes() throws Exception {
        test("em", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_nolayer() throws Exception {
        test("em", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_noscript() throws Exception {
        test("em", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_pre() throws Exception {
        test("em", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_rp() throws Exception {
        test("em", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_rt() throws Exception {
        test("em", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_ruby() throws Exception {
        test("em", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _em_s() throws Exception {
        test("em", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _em_script() throws Exception {
        test("em", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _fieldset_nextid() throws Exception {
        test("fieldset", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _fieldset_script() throws Exception {
        test("fieldset", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _font_nextid() throws Exception {
        test("font", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _font_script() throws Exception {
        test("font", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _form_nextid() throws Exception {
        test("form", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _form_script() throws Exception {
        test("form", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h1_nextid() throws Exception {
        test("h1", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h1_script() throws Exception {
        test("h1", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h2_nextid() throws Exception {
        test("h2", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h2_script() throws Exception {
        test("h2", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h3_nextid() throws Exception {
        test("h3", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h3_script() throws Exception {
        test("h3", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h4_nextid() throws Exception {
        test("h4", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h4_script() throws Exception {
        test("h4", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h5_nextid() throws Exception {
        test("h5", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h5_script() throws Exception {
        test("h5", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _h6_nextid() throws Exception {
        test("h6", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _h6_script() throws Exception {
        test("h6", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_applet() throws Exception {
        test("i", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_center() throws Exception {
        test("i", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_dd() throws Exception {
        test("i", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_del() throws Exception {
        test("i", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_dir() throws Exception {
        test("i", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_dt() throws Exception {
        test("i", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_fieldset() throws Exception {
        test("i", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_legend() throws Exception {
        test("i", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_listing() throws Exception {
        test("i", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_marquee() throws Exception {
        test("i", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_menu() throws Exception {
        test("i", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_multicol() throws Exception {
        test("i", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _i_nextid() throws Exception {
        test("i", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_noembed() throws Exception {
        test("i", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_noframes() throws Exception {
        test("i", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_nolayer() throws Exception {
        test("i", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_noscript() throws Exception {
        test("i", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_pre() throws Exception {
        test("i", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_rp() throws Exception {
        test("i", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_rt() throws Exception {
        test("i", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_ruby() throws Exception {
        test("i", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _i_s() throws Exception {
        test("i", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _i_script() throws Exception {
        test("i", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_applet() throws Exception {
        test("ins", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_center() throws Exception {
        test("ins", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_dd() throws Exception {
        test("ins", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_del() throws Exception {
        test("ins", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_dir() throws Exception {
        test("ins", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_dt() throws Exception {
        test("ins", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_fieldset() throws Exception {
        test("ins", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_legend() throws Exception {
        test("ins", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_listing() throws Exception {
        test("ins", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_marquee() throws Exception {
        test("ins", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_menu() throws Exception {
        test("ins", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_multicol() throws Exception {
        test("ins", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ins_nextid() throws Exception {
        test("ins", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_noembed() throws Exception {
        test("ins", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_noframes() throws Exception {
        test("ins", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_nolayer() throws Exception {
        test("ins", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_noscript() throws Exception {
        test("ins", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_pre() throws Exception {
        test("ins", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_rp() throws Exception {
        test("ins", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_rt() throws Exception {
        test("ins", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_ruby() throws Exception {
        test("ins", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _ins_s() throws Exception {
        test("ins", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _ins_script() throws Exception {
        test("ins", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_applet() throws Exception {
        test("kbd", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_center() throws Exception {
        test("kbd", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_dd() throws Exception {
        test("kbd", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_del() throws Exception {
        test("kbd", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_dir() throws Exception {
        test("kbd", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_dt() throws Exception {
        test("kbd", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_fieldset() throws Exception {
        test("kbd", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_legend() throws Exception {
        test("kbd", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_listing() throws Exception {
        test("kbd", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_marquee() throws Exception {
        test("kbd", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_menu() throws Exception {
        test("kbd", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_multicol() throws Exception {
        test("kbd", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _kbd_nextid() throws Exception {
        test("kbd", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_noembed() throws Exception {
        test("kbd", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_noframes() throws Exception {
        test("kbd", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_nolayer() throws Exception {
        test("kbd", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_noscript() throws Exception {
        test("kbd", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_pre() throws Exception {
        test("kbd", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_rp() throws Exception {
        test("kbd", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_rt() throws Exception {
        test("kbd", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_ruby() throws Exception {
        test("kbd", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _kbd_s() throws Exception {
        test("kbd", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _kbd_script() throws Exception {
        test("kbd", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_applet() throws Exception {
        test("label", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_center() throws Exception {
        test("label", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_dd() throws Exception {
        test("label", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_del() throws Exception {
        test("label", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_dir() throws Exception {
        test("label", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_dt() throws Exception {
        test("label", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_fieldset() throws Exception {
        test("label", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_legend() throws Exception {
        test("label", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_listing() throws Exception {
        test("label", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_marquee() throws Exception {
        test("label", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_menu() throws Exception {
        test("label", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_multicol() throws Exception {
        test("label", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _label_nextid() throws Exception {
        test("label", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_noembed() throws Exception {
        test("label", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_noframes() throws Exception {
        test("label", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_nolayer() throws Exception {
        test("label", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_noscript() throws Exception {
        test("label", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_pre() throws Exception {
        test("label", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_rp() throws Exception {
        test("label", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_rt() throws Exception {
        test("label", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_ruby() throws Exception {
        test("label", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _label_s() throws Exception {
        test("label", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _label_script() throws Exception {
        test("label", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _li_nextid() throws Exception {
        test("li", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _li_script() throws Exception {
        test("li", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _listing_script() throws Exception {
        test("listing", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_applet() throws Exception {
        test("map", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_center() throws Exception {
        test("map", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_dd() throws Exception {
        test("map", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_del() throws Exception {
        test("map", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_dir() throws Exception {
        test("map", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_dt() throws Exception {
        test("map", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_fieldset() throws Exception {
        test("map", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_legend() throws Exception {
        test("map", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_listing() throws Exception {
        test("map", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_marquee() throws Exception {
        test("map", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_menu() throws Exception {
        test("map", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_multicol() throws Exception {
        test("map", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _map_nextid() throws Exception {
        test("map", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_noembed() throws Exception {
        test("map", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_noframes() throws Exception {
        test("map", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_nolayer() throws Exception {
        test("map", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_noscript() throws Exception {
        test("map", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_pre() throws Exception {
        test("map", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_rp() throws Exception {
        test("map", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_rt() throws Exception {
        test("map", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_ruby() throws Exception {
        test("map", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _map_s() throws Exception {
        test("map", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _map_script() throws Exception {
        test("map", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _marquee_nextid() throws Exception {
        test("marquee", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _marquee_script() throws Exception {
        test("marquee", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _menu_nextid() throws Exception {
        test("menu", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _menu_script() throws Exception {
        test("menu", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_applet() throws Exception {
        test("nobr", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_center() throws Exception {
        test("nobr", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_dd() throws Exception {
        test("nobr", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_del() throws Exception {
        test("nobr", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_dir() throws Exception {
        test("nobr", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_dt() throws Exception {
        test("nobr", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_fieldset() throws Exception {
        test("nobr", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_legend() throws Exception {
        test("nobr", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_listing() throws Exception {
        test("nobr", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_marquee() throws Exception {
        test("nobr", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_menu() throws Exception {
        test("nobr", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_multicol() throws Exception {
        test("nobr", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _nobr_nextid() throws Exception {
        test("nobr", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_noembed() throws Exception {
        test("nobr", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_noframes() throws Exception {
        test("nobr", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_nolayer() throws Exception {
        test("nobr", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_noscript() throws Exception {
        test("nobr", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_pre() throws Exception {
        test("nobr", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_rp() throws Exception {
        test("nobr", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_rt() throws Exception {
        test("nobr", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_ruby() throws Exception {
        test("nobr", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _nobr_s() throws Exception {
        test("nobr", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _nobr_script() throws Exception {
        test("nobr", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ol_nextid() throws Exception {
        test("ol", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _ol_script() throws Exception {
        test("ol", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _p_legend() throws Exception {
        test("p", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _p_nextid() throws Exception {
        test("p", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _p_script() throws Exception {
        test("p", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _pre_script() throws Exception {
        test("pre", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_applet() throws Exception {
        test("q", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_center() throws Exception {
        test("q", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_dd() throws Exception {
        test("q", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_del() throws Exception {
        test("q", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_dir() throws Exception {
        test("q", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_dt() throws Exception {
        test("q", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_fieldset() throws Exception {
        test("q", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_legend() throws Exception {
        test("q", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_listing() throws Exception {
        test("q", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_marquee() throws Exception {
        test("q", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_menu() throws Exception {
        test("q", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_multicol() throws Exception {
        test("q", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _q_nextid() throws Exception {
        test("q", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_noembed() throws Exception {
        test("q", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_noframes() throws Exception {
        test("q", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_nolayer() throws Exception {
        test("q", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_noscript() throws Exception {
        test("q", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_pre() throws Exception {
        test("q", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_rp() throws Exception {
        test("q", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_rt() throws Exception {
        test("q", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_ruby() throws Exception {
        test("q", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _q_s() throws Exception {
        test("q", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _q_script() throws Exception {
        test("q", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ruby_nextid() throws Exception {
        test("ruby", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _ruby_script() throws Exception {
        test("ruby", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _s_nextid() throws Exception {
        test("s", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _s_script() throws Exception {
        test("s", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_applet() throws Exception {
        test("samp", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_center() throws Exception {
        test("samp", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_dd() throws Exception {
        test("samp", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_del() throws Exception {
        test("samp", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_dir() throws Exception {
        test("samp", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_dt() throws Exception {
        test("samp", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_fieldset() throws Exception {
        test("samp", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_legend() throws Exception {
        test("samp", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_listing() throws Exception {
        test("samp", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_marquee() throws Exception {
        test("samp", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_menu() throws Exception {
        test("samp", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_multicol() throws Exception {
        test("samp", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _samp_nextid() throws Exception {
        test("samp", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_noembed() throws Exception {
        test("samp", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_noframes() throws Exception {
        test("samp", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_nolayer() throws Exception {
        test("samp", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_noscript() throws Exception {
        test("samp", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_pre() throws Exception {
        test("samp", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_rp() throws Exception {
        test("samp", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_rt() throws Exception {
        test("samp", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_ruby() throws Exception {
        test("samp", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _samp_s() throws Exception {
        test("samp", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _samp_script() throws Exception {
        test("samp", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _select_script() throws Exception {
        test("select", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _select_section() throws Exception {
        test("select", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _select_title() throws Exception {
        test("select", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_applet() throws Exception {
        test("small", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_center() throws Exception {
        test("small", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_dd() throws Exception {
        test("small", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_del() throws Exception {
        test("small", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_dir() throws Exception {
        test("small", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_dt() throws Exception {
        test("small", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_fieldset() throws Exception {
        test("small", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_legend() throws Exception {
        test("small", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_listing() throws Exception {
        test("small", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_marquee() throws Exception {
        test("small", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_menu() throws Exception {
        test("small", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_multicol() throws Exception {
        test("small", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _small_nextid() throws Exception {
        test("small", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_noembed() throws Exception {
        test("small", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_noframes() throws Exception {
        test("small", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_nolayer() throws Exception {
        test("small", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_noscript() throws Exception {
        test("small", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_pre() throws Exception {
        test("small", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_rp() throws Exception {
        test("small", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_rt() throws Exception {
        test("small", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_ruby() throws Exception {
        test("small", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _small_s() throws Exception {
        test("small", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _small_script() throws Exception {
        test("small", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _span_nextid() throws Exception {
        test("span", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _span_script() throws Exception {
        test("span", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_applet() throws Exception {
        test("strike", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_center() throws Exception {
        test("strike", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_dd() throws Exception {
        test("strike", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_del() throws Exception {
        test("strike", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_dir() throws Exception {
        test("strike", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_dt() throws Exception {
        test("strike", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_fieldset() throws Exception {
        test("strike", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_legend() throws Exception {
        test("strike", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_listing() throws Exception {
        test("strike", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_marquee() throws Exception {
        test("strike", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_menu() throws Exception {
        test("strike", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_multicol() throws Exception {
        test("strike", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strike_nextid() throws Exception {
        test("strike", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_noembed() throws Exception {
        test("strike", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_noframes() throws Exception {
        test("strike", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_nolayer() throws Exception {
        test("strike", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_noscript() throws Exception {
        test("strike", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_pre() throws Exception {
        test("strike", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_rp() throws Exception {
        test("strike", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_rt() throws Exception {
        test("strike", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_ruby() throws Exception {
        test("strike", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strike_s() throws Exception {
        test("strike", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _strike_script() throws Exception {
        test("strike", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_applet() throws Exception {
        test("strong", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_center() throws Exception {
        test("strong", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_dd() throws Exception {
        test("strong", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_del() throws Exception {
        test("strong", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_dir() throws Exception {
        test("strong", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_dt() throws Exception {
        test("strong", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_fieldset() throws Exception {
        test("strong", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_legend() throws Exception {
        test("strong", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_listing() throws Exception {
        test("strong", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_marquee() throws Exception {
        test("strong", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_menu() throws Exception {
        test("strong", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_multicol() throws Exception {
        test("strong", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _strong_nextid() throws Exception {
        test("strong", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_noembed() throws Exception {
        test("strong", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_noframes() throws Exception {
        test("strong", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_nolayer() throws Exception {
        test("strong", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_noscript() throws Exception {
        test("strong", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_pre() throws Exception {
        test("strong", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_rp() throws Exception {
        test("strong", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_rt() throws Exception {
        test("strong", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_ruby() throws Exception {
        test("strong", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _strong_s() throws Exception {
        test("strong", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _strong_script() throws Exception {
        test("strong", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_applet() throws Exception {
        test("sub", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_center() throws Exception {
        test("sub", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_dd() throws Exception {
        test("sub", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_del() throws Exception {
        test("sub", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_dir() throws Exception {
        test("sub", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_dt() throws Exception {
        test("sub", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_fieldset() throws Exception {
        test("sub", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_legend() throws Exception {
        test("sub", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_listing() throws Exception {
        test("sub", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_marquee() throws Exception {
        test("sub", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_menu() throws Exception {
        test("sub", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_multicol() throws Exception {
        test("sub", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sub_nextid() throws Exception {
        test("sub", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_noembed() throws Exception {
        test("sub", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_noframes() throws Exception {
        test("sub", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_nolayer() throws Exception {
        test("sub", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_noscript() throws Exception {
        test("sub", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_pre() throws Exception {
        test("sub", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_rp() throws Exception {
        test("sub", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_rt() throws Exception {
        test("sub", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_ruby() throws Exception {
        test("sub", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sub_s() throws Exception {
        test("sub", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _sub_script() throws Exception {
        test("sub", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_applet() throws Exception {
        test("sup", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_center() throws Exception {
        test("sup", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_dd() throws Exception {
        test("sup", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_del() throws Exception {
        test("sup", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_dir() throws Exception {
        test("sup", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_dt() throws Exception {
        test("sup", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_fieldset() throws Exception {
        test("sup", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_legend() throws Exception {
        test("sup", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_listing() throws Exception {
        test("sup", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_marquee() throws Exception {
        test("sup", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_menu() throws Exception {
        test("sup", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_multicol() throws Exception {
        test("sup", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _sup_nextid() throws Exception {
        test("sup", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_noembed() throws Exception {
        test("sup", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_noframes() throws Exception {
        test("sup", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_nolayer() throws Exception {
        test("sup", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_noscript() throws Exception {
        test("sup", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_pre() throws Exception {
        test("sup", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_rp() throws Exception {
        test("sup", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_rt() throws Exception {
        test("sup", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_ruby() throws Exception {
        test("sup", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _sup_s() throws Exception {
        test("sup", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _sup_script() throws Exception {
        test("sup", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_applet() throws Exception {
        test("tt", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_center() throws Exception {
        test("tt", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_dd() throws Exception {
        test("tt", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_del() throws Exception {
        test("tt", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_dir() throws Exception {
        test("tt", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_dt() throws Exception {
        test("tt", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_fieldset() throws Exception {
        test("tt", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_legend() throws Exception {
        test("tt", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_listing() throws Exception {
        test("tt", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_marquee() throws Exception {
        test("tt", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_menu() throws Exception {
        test("tt", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_multicol() throws Exception {
        test("tt", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _tt_nextid() throws Exception {
        test("tt", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_noembed() throws Exception {
        test("tt", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_noframes() throws Exception {
        test("tt", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_nolayer() throws Exception {
        test("tt", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_noscript() throws Exception {
        test("tt", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_pre() throws Exception {
        test("tt", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_rp() throws Exception {
        test("tt", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_rt() throws Exception {
        test("tt", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_ruby() throws Exception {
        test("tt", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _tt_s() throws Exception {
        test("tt", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _tt_script() throws Exception {
        test("tt", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_applet() throws Exception {
        test("u", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_center() throws Exception {
        test("u", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_dd() throws Exception {
        test("u", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_del() throws Exception {
        test("u", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_dir() throws Exception {
        test("u", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_dt() throws Exception {
        test("u", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_fieldset() throws Exception {
        test("u", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_legend() throws Exception {
        test("u", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_listing() throws Exception {
        test("u", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_marquee() throws Exception {
        test("u", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_menu() throws Exception {
        test("u", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_multicol() throws Exception {
        test("u", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _u_nextid() throws Exception {
        test("u", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_noembed() throws Exception {
        test("u", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_noframes() throws Exception {
        test("u", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_nolayer() throws Exception {
        test("u", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_noscript() throws Exception {
        test("u", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_pre() throws Exception {
        test("u", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_rp() throws Exception {
        test("u", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_rt() throws Exception {
        test("u", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_ruby() throws Exception {
        test("u", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _u_s() throws Exception {
        test("u", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _u_script() throws Exception {
        test("u", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _ul_nextid() throws Exception {
        test("ul", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _ul_script() throws Exception {
        test("ul", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_applet() throws Exception {
        test("var", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_center() throws Exception {
        test("var", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_dd() throws Exception {
        test("var", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_del() throws Exception {
        test("var", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_dir() throws Exception {
        test("var", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_dt() throws Exception {
        test("var", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_fieldset() throws Exception {
        test("var", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_legend() throws Exception {
        test("var", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_listing() throws Exception {
        test("var", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_marquee() throws Exception {
        test("var", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_menu() throws Exception {
        test("var", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_multicol() throws Exception {
        test("var", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ FF, CHROME, IE11 })
    public void _var_nextid() throws Exception {
        test("var", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_noembed() throws Exception {
        test("var", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_noframes() throws Exception {
        test("var", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_nolayer() throws Exception {
        test("var", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_noscript() throws Exception {
        test("var", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_pre() throws Exception {
        test("var", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_rp() throws Exception {
        test("var", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_rt() throws Exception {
        test("var", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_ruby() throws Exception {
        test("var", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    public void _var_s() throws Exception {
        test("var", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _var_script() throws Exception {
        test("var", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_caption() throws Exception {
        test("a", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_col() throws Exception {
        test("a", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_colgroup() throws Exception {
        test("a", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_optgroup() throws Exception {
        test("a", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_option() throws Exception {
        test("a", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_tbody() throws Exception {
        test("a", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_td() throws Exception {
        test("a", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_tfoot() throws Exception {
        test("a", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_th() throws Exception {
        test("a", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_thead() throws Exception {
        test("a", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _a_tr() throws Exception {
        test("a", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_caption() throws Exception {
        test("abbr", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_col() throws Exception {
        test("abbr", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_colgroup() throws Exception {
        test("abbr", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_optgroup() throws Exception {
        test("abbr", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_option() throws Exception {
        test("abbr", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_tbody() throws Exception {
        test("abbr", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_td() throws Exception {
        test("abbr", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_tfoot() throws Exception {
        test("abbr", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_th() throws Exception {
        test("abbr", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_thead() throws Exception {
        test("abbr", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _abbr_tr() throws Exception {
        test("abbr", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_caption() throws Exception {
        test("acronym", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_col() throws Exception {
        test("acronym", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_colgroup() throws Exception {
        test("acronym", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_optgroup() throws Exception {
        test("acronym", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_option() throws Exception {
        test("acronym", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_tbody() throws Exception {
        test("acronym", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_td() throws Exception {
        test("acronym", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_tfoot() throws Exception {
        test("acronym", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_th() throws Exception {
        test("acronym", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_thead() throws Exception {
        test("acronym", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _acronym_tr() throws Exception {
        test("acronym", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_caption() throws Exception {
        test("address", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_col() throws Exception {
        test("address", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_colgroup() throws Exception {
        test("address", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_optgroup() throws Exception {
        test("address", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_option() throws Exception {
        test("address", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_tbody() throws Exception {
        test("address", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_td() throws Exception {
        test("address", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_tfoot() throws Exception {
        test("address", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_th() throws Exception {
        test("address", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_thead() throws Exception {
        test("address", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _address_tr() throws Exception {
        test("address", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_caption() throws Exception {
        test("b", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_col() throws Exception {
        test("b", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_colgroup() throws Exception {
        test("b", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_optgroup() throws Exception {
        test("b", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_option() throws Exception {
        test("b", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_tbody() throws Exception {
        test("b", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_td() throws Exception {
        test("b", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_tfoot() throws Exception {
        test("b", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_th() throws Exception {
        test("b", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_thead() throws Exception {
        test("b", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _b_tr() throws Exception {
        test("b", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_caption() throws Exception {
        test("bdo", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_col() throws Exception {
        test("bdo", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_colgroup() throws Exception {
        test("bdo", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_optgroup() throws Exception {
        test("bdo", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_option() throws Exception {
        test("bdo", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_tbody() throws Exception {
        test("bdo", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_td() throws Exception {
        test("bdo", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_tfoot() throws Exception {
        test("bdo", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_th() throws Exception {
        test("bdo", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_thead() throws Exception {
        test("bdo", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _bdo_tr() throws Exception {
        test("bdo", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_caption() throws Exception {
        test("big", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_col() throws Exception {
        test("big", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_colgroup() throws Exception {
        test("big", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_optgroup() throws Exception {
        test("big", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_option() throws Exception {
        test("big", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_tbody() throws Exception {
        test("big", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_td() throws Exception {
        test("big", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_tfoot() throws Exception {
        test("big", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_th() throws Exception {
        test("big", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_thead() throws Exception {
        test("big", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _big_tr() throws Exception {
        test("big", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_caption() throws Exception {
        test("blink", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_col() throws Exception {
        test("blink", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_colgroup() throws Exception {
        test("blink", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_optgroup() throws Exception {
        test("blink", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_option() throws Exception {
        test("blink", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_tbody() throws Exception {
        test("blink", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_td() throws Exception {
        test("blink", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_tfoot() throws Exception {
        test("blink", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_th() throws Exception {
        test("blink", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_thead() throws Exception {
        test("blink", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blink_tr() throws Exception {
        test("blink", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_caption() throws Exception {
        test("blockquote", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_col() throws Exception {
        test("blockquote", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_colgroup() throws Exception {
        test("blockquote", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_optgroup() throws Exception {
        test("blockquote", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_option() throws Exception {
        test("blockquote", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_tbody() throws Exception {
        test("blockquote", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_td() throws Exception {
        test("blockquote", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_tfoot() throws Exception {
        test("blockquote", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_th() throws Exception {
        test("blockquote", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_thead() throws Exception {
        test("blockquote", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _blockquote_tr() throws Exception {
        test("blockquote", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_caption() throws Exception {
        test("body", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_col() throws Exception {
        test("body", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_colgroup() throws Exception {
        test("body", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_tbody() throws Exception {
        test("body", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_td() throws Exception {
        test("body", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_tfoot() throws Exception {
        test("body", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_th() throws Exception {
        test("body", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_thead() throws Exception {
        test("body", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _body_tr() throws Exception {
        test("body", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_caption() throws Exception {
        test("button", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_col() throws Exception {
        test("button", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_colgroup() throws Exception {
        test("button", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_optgroup() throws Exception {
        test("button", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_option() throws Exception {
        test("button", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_tbody() throws Exception {
        test("button", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_td() throws Exception {
        test("button", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_tfoot() throws Exception {
        test("button", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_th() throws Exception {
        test("button", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_thead() throws Exception {
        test("button", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _button_tr() throws Exception {
        test("button", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_caption() throws Exception {
        test("center", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_col() throws Exception {
        test("center", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_colgroup() throws Exception {
        test("center", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_optgroup() throws Exception {
        test("center", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_option() throws Exception {
        test("center", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_tbody() throws Exception {
        test("center", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_td() throws Exception {
        test("center", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_tfoot() throws Exception {
        test("center", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_th() throws Exception {
        test("center", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_thead() throws Exception {
        test("center", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _center_tr() throws Exception {
        test("center", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_caption() throws Exception {
        test("cite", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_col() throws Exception {
        test("cite", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_colgroup() throws Exception {
        test("cite", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_optgroup() throws Exception {
        test("cite", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_option() throws Exception {
        test("cite", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_tbody() throws Exception {
        test("cite", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_td() throws Exception {
        test("cite", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_tfoot() throws Exception {
        test("cite", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_th() throws Exception {
        test("cite", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_thead() throws Exception {
        test("cite", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _cite_tr() throws Exception {
        test("cite", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_caption() throws Exception {
        test("code", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_col() throws Exception {
        test("code", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_colgroup() throws Exception {
        test("code", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_optgroup() throws Exception {
        test("code", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_option() throws Exception {
        test("code", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_tbody() throws Exception {
        test("code", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_td() throws Exception {
        test("code", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_tfoot() throws Exception {
        test("code", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_th() throws Exception {
        test("code", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_thead() throws Exception {
        test("code", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _code_tr() throws Exception {
        test("code", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_caption() throws Exception {
        test("dd", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_col() throws Exception {
        test("dd", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_colgroup() throws Exception {
        test("dd", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_optgroup() throws Exception {
        test("dd", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_option() throws Exception {
        test("dd", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_tbody() throws Exception {
        test("dd", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_td() throws Exception {
        test("dd", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_tfoot() throws Exception {
        test("dd", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_th() throws Exception {
        test("dd", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_thead() throws Exception {
        test("dd", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dd_tr() throws Exception {
        test("dd", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_caption() throws Exception {
        test("del", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_col() throws Exception {
        test("del", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_colgroup() throws Exception {
        test("del", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_optgroup() throws Exception {
        test("del", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_option() throws Exception {
        test("del", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_tbody() throws Exception {
        test("del", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_td() throws Exception {
        test("del", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_tfoot() throws Exception {
        test("del", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_th() throws Exception {
        test("del", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_thead() throws Exception {
        test("del", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _del_tr() throws Exception {
        test("del", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_caption() throws Exception {
        test("dfn", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_col() throws Exception {
        test("dfn", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_colgroup() throws Exception {
        test("dfn", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_optgroup() throws Exception {
        test("dfn", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_option() throws Exception {
        test("dfn", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_tbody() throws Exception {
        test("dfn", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_td() throws Exception {
        test("dfn", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_tfoot() throws Exception {
        test("dfn", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_th() throws Exception {
        test("dfn", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_thead() throws Exception {
        test("dfn", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dfn_tr() throws Exception {
        test("dfn", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_caption() throws Exception {
        test("dir", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_col() throws Exception {
        test("dir", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_colgroup() throws Exception {
        test("dir", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_optgroup() throws Exception {
        test("dir", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_option() throws Exception {
        test("dir", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_tbody() throws Exception {
        test("dir", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_td() throws Exception {
        test("dir", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_tfoot() throws Exception {
        test("dir", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_th() throws Exception {
        test("dir", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_thead() throws Exception {
        test("dir", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dir_tr() throws Exception {
        test("dir", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_caption() throws Exception {
        test("div", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_col() throws Exception {
        test("div", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_colgroup() throws Exception {
        test("div", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_optgroup() throws Exception {
        test("div", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_option() throws Exception {
        test("div", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_tbody() throws Exception {
        test("div", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_td() throws Exception {
        test("div", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_tfoot() throws Exception {
        test("div", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_th() throws Exception {
        test("div", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_thead() throws Exception {
        test("div", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _div_tr() throws Exception {
        test("div", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_caption() throws Exception {
        test("dl", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_col() throws Exception {
        test("dl", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_colgroup() throws Exception {
        test("dl", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_optgroup() throws Exception {
        test("dl", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_option() throws Exception {
        test("dl", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_tbody() throws Exception {
        test("dl", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_td() throws Exception {
        test("dl", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_tfoot() throws Exception {
        test("dl", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_th() throws Exception {
        test("dl", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_thead() throws Exception {
        test("dl", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dl_tr() throws Exception {
        test("dl", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_caption() throws Exception {
        test("dt", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_col() throws Exception {
        test("dt", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_colgroup() throws Exception {
        test("dt", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_optgroup() throws Exception {
        test("dt", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_option() throws Exception {
        test("dt", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_tbody() throws Exception {
        test("dt", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_td() throws Exception {
        test("dt", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_tfoot() throws Exception {
        test("dt", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_th() throws Exception {
        test("dt", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_thead() throws Exception {
        test("dt", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _dt_tr() throws Exception {
        test("dt", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_caption() throws Exception {
        test("em", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_col() throws Exception {
        test("em", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_colgroup() throws Exception {
        test("em", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_optgroup() throws Exception {
        test("em", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_option() throws Exception {
        test("em", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_tbody() throws Exception {
        test("em", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_td() throws Exception {
        test("em", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_tfoot() throws Exception {
        test("em", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_th() throws Exception {
        test("em", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_thead() throws Exception {
        test("em", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _em_tr() throws Exception {
        test("em", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_caption() throws Exception {
        test("fieldset", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_col() throws Exception {
        test("fieldset", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_colgroup() throws Exception {
        test("fieldset", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_optgroup() throws Exception {
        test("fieldset", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_option() throws Exception {
        test("fieldset", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_tbody() throws Exception {
        test("fieldset", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_td() throws Exception {
        test("fieldset", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_tfoot() throws Exception {
        test("fieldset", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_th() throws Exception {
        test("fieldset", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_thead() throws Exception {
        test("fieldset", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _fieldset_tr() throws Exception {
        test("fieldset", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_caption() throws Exception {
        test("form", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_col() throws Exception {
        test("form", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_colgroup() throws Exception {
        test("form", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_form() throws Exception {
        test("form", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_optgroup() throws Exception {
        test("form", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_option() throws Exception {
        test("form", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_tbody() throws Exception {
        test("form", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_td() throws Exception {
        test("form", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_tfoot() throws Exception {
        test("form", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_th() throws Exception {
        test("form", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_thead() throws Exception {
        test("form", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _form_tr() throws Exception {
        test("form", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_caption() throws Exception {
        test("h1", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_col() throws Exception {
        test("h1", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_colgroup() throws Exception {
        test("h1", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_optgroup() throws Exception {
        test("h1", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_option() throws Exception {
        test("h1", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_tbody() throws Exception {
        test("h1", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_td() throws Exception {
        test("h1", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_tfoot() throws Exception {
        test("h1", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_th() throws Exception {
        test("h1", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_thead() throws Exception {
        test("h1", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h1_tr() throws Exception {
        test("h1", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_caption() throws Exception {
        test("h2", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_col() throws Exception {
        test("h2", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_colgroup() throws Exception {
        test("h2", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_optgroup() throws Exception {
        test("h2", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_option() throws Exception {
        test("h2", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_tbody() throws Exception {
        test("h2", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_td() throws Exception {
        test("h2", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_tfoot() throws Exception {
        test("h2", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_th() throws Exception {
        test("h2", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_thead() throws Exception {
        test("h2", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h2_tr() throws Exception {
        test("h2", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_caption() throws Exception {
        test("h3", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_col() throws Exception {
        test("h3", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_colgroup() throws Exception {
        test("h3", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_optgroup() throws Exception {
        test("h3", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_option() throws Exception {
        test("h3", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_tbody() throws Exception {
        test("h3", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_td() throws Exception {
        test("h3", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_tfoot() throws Exception {
        test("h3", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_th() throws Exception {
        test("h3", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_thead() throws Exception {
        test("h3", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h3_tr() throws Exception {
        test("h3", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_caption() throws Exception {
        test("h4", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_col() throws Exception {
        test("h4", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_colgroup() throws Exception {
        test("h4", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_optgroup() throws Exception {
        test("h4", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_option() throws Exception {
        test("h4", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_tbody() throws Exception {
        test("h4", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_td() throws Exception {
        test("h4", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_tfoot() throws Exception {
        test("h4", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_th() throws Exception {
        test("h4", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_thead() throws Exception {
        test("h4", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h4_tr() throws Exception {
        test("h4", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_caption() throws Exception {
        test("h5", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_col() throws Exception {
        test("h5", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_colgroup() throws Exception {
        test("h5", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_optgroup() throws Exception {
        test("h5", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_option() throws Exception {
        test("h5", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_tbody() throws Exception {
        test("h5", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_td() throws Exception {
        test("h5", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_tfoot() throws Exception {
        test("h5", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_th() throws Exception {
        test("h5", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_thead() throws Exception {
        test("h5", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h5_tr() throws Exception {
        test("h5", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_caption() throws Exception {
        test("h6", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_col() throws Exception {
        test("h6", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_colgroup() throws Exception {
        test("h6", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_optgroup() throws Exception {
        test("h6", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_option() throws Exception {
        test("h6", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_tbody() throws Exception {
        test("h6", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_td() throws Exception {
        test("h6", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_tfoot() throws Exception {
        test("h6", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_th() throws Exception {
        test("h6", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_thead() throws Exception {
        test("h6", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _h6_tr() throws Exception {
        test("h6", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_caption() throws Exception {
        test("i", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_col() throws Exception {
        test("i", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_colgroup() throws Exception {
        test("i", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_optgroup() throws Exception {
        test("i", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_option() throws Exception {
        test("i", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_tbody() throws Exception {
        test("i", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_td() throws Exception {
        test("i", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_tfoot() throws Exception {
        test("i", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_th() throws Exception {
        test("i", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_thead() throws Exception {
        test("i", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _i_tr() throws Exception {
        test("i", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_caption() throws Exception {
        test("ins", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_col() throws Exception {
        test("ins", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_colgroup() throws Exception {
        test("ins", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_optgroup() throws Exception {
        test("ins", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_option() throws Exception {
        test("ins", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_tbody() throws Exception {
        test("ins", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_td() throws Exception {
        test("ins", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_tfoot() throws Exception {
        test("ins", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_th() throws Exception {
        test("ins", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_thead() throws Exception {
        test("ins", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ins_tr() throws Exception {
        test("ins", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_caption() throws Exception {
        test("kbd", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_col() throws Exception {
        test("kbd", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_colgroup() throws Exception {
        test("kbd", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_optgroup() throws Exception {
        test("kbd", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_option() throws Exception {
        test("kbd", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_tbody() throws Exception {
        test("kbd", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_td() throws Exception {
        test("kbd", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_tfoot() throws Exception {
        test("kbd", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_th() throws Exception {
        test("kbd", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_thead() throws Exception {
        test("kbd", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _kbd_tr() throws Exception {
        test("kbd", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_caption() throws Exception {
        test("label", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_col() throws Exception {
        test("label", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_colgroup() throws Exception {
        test("label", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_optgroup() throws Exception {
        test("label", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_option() throws Exception {
        test("label", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_tbody() throws Exception {
        test("label", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_td() throws Exception {
        test("label", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_tfoot() throws Exception {
        test("label", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_th() throws Exception {
        test("label", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_thead() throws Exception {
        test("label", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _label_tr() throws Exception {
        test("label", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_caption() throws Exception {
        test("li", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_col() throws Exception {
        test("li", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_colgroup() throws Exception {
        test("li", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_optgroup() throws Exception {
        test("li", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_option() throws Exception {
        test("li", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_tbody() throws Exception {
        test("li", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_td() throws Exception {
        test("li", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_tfoot() throws Exception {
        test("li", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_th() throws Exception {
        test("li", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_thead() throws Exception {
        test("li", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _li_tr() throws Exception {
        test("li", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_caption() throws Exception {
        test("map", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_col() throws Exception {
        test("map", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_colgroup() throws Exception {
        test("map", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_optgroup() throws Exception {
        test("map", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_option() throws Exception {
        test("map", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_tbody() throws Exception {
        test("map", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_td() throws Exception {
        test("map", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_tfoot() throws Exception {
        test("map", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_th() throws Exception {
        test("map", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_thead() throws Exception {
        test("map", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _map_tr() throws Exception {
        test("map", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_caption() throws Exception {
        test("marquee", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_col() throws Exception {
        test("marquee", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_colgroup() throws Exception {
        test("marquee", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_optgroup() throws Exception {
        test("marquee", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_option() throws Exception {
        test("marquee", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_tbody() throws Exception {
        test("marquee", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_td() throws Exception {
        test("marquee", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_tfoot() throws Exception {
        test("marquee", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_th() throws Exception {
        test("marquee", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_thead() throws Exception {
        test("marquee", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _marquee_tr() throws Exception {
        test("marquee", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_caption() throws Exception {
        test("menu", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_col() throws Exception {
        test("menu", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_colgroup() throws Exception {
        test("menu", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_optgroup() throws Exception {
        test("menu", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_option() throws Exception {
        test("menu", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_tbody() throws Exception {
        test("menu", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_td() throws Exception {
        test("menu", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_tfoot() throws Exception {
        test("menu", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_th() throws Exception {
        test("menu", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_thead() throws Exception {
        test("menu", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _menu_tr() throws Exception {
        test("menu", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_caption() throws Exception {
        test("nobr", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_col() throws Exception {
        test("nobr", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_colgroup() throws Exception {
        test("nobr", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_optgroup() throws Exception {
        test("nobr", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_option() throws Exception {
        test("nobr", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_tbody() throws Exception {
        test("nobr", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_td() throws Exception {
        test("nobr", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_tfoot() throws Exception {
        test("nobr", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_th() throws Exception {
        test("nobr", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_thead() throws Exception {
        test("nobr", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _nobr_tr() throws Exception {
        test("nobr", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_caption() throws Exception {
        test("ol", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_col() throws Exception {
        test("ol", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_colgroup() throws Exception {
        test("ol", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_optgroup() throws Exception {
        test("ol", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_option() throws Exception {
        test("ol", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_tbody() throws Exception {
        test("ol", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_td() throws Exception {
        test("ol", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_tfoot() throws Exception {
        test("ol", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_th() throws Exception {
        test("ol", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_thead() throws Exception {
        test("ol", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ol_tr() throws Exception {
        test("ol", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_caption() throws Exception {
        test("p", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_col() throws Exception {
        test("p", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_colgroup() throws Exception {
        test("p", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_optgroup() throws Exception {
        test("p", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_option() throws Exception {
        test("p", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_tbody() throws Exception {
        test("p", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_td() throws Exception {
        test("p", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_tfoot() throws Exception {
        test("p", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_th() throws Exception {
        test("p", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_thead() throws Exception {
        test("p", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _p_tr() throws Exception {
        test("p", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_caption() throws Exception {
        test("q", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_col() throws Exception {
        test("q", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_colgroup() throws Exception {
        test("q", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_optgroup() throws Exception {
        test("q", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_option() throws Exception {
        test("q", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_tbody() throws Exception {
        test("q", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_td() throws Exception {
        test("q", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_tfoot() throws Exception {
        test("q", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_th() throws Exception {
        test("q", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_thead() throws Exception {
        test("q", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _q_tr() throws Exception {
        test("q", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_caption() throws Exception {
        test("ruby", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_col() throws Exception {
        test("ruby", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_colgroup() throws Exception {
        test("ruby", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_optgroup() throws Exception {
        test("ruby", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_option() throws Exception {
        test("ruby", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_tbody() throws Exception {
        test("ruby", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_td() throws Exception {
        test("ruby", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_tfoot() throws Exception {
        test("ruby", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_th() throws Exception {
        test("ruby", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_thead() throws Exception {
        test("ruby", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ruby_tr() throws Exception {
        test("ruby", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_caption() throws Exception {
        test("s", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_col() throws Exception {
        test("s", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_colgroup() throws Exception {
        test("s", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_optgroup() throws Exception {
        test("s", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_option() throws Exception {
        test("s", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_tbody() throws Exception {
        test("s", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_td() throws Exception {
        test("s", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_tfoot() throws Exception {
        test("s", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_th() throws Exception {
        test("s", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_thead() throws Exception {
        test("s", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _s_tr() throws Exception {
        test("s", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_caption() throws Exception {
        test("samp", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_col() throws Exception {
        test("samp", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_colgroup() throws Exception {
        test("samp", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_optgroup() throws Exception {
        test("samp", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_option() throws Exception {
        test("samp", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_tbody() throws Exception {
        test("samp", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_td() throws Exception {
        test("samp", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_tfoot() throws Exception {
        test("samp", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_th() throws Exception {
        test("samp", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_thead() throws Exception {
        test("samp", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _samp_tr() throws Exception {
        test("samp", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_caption() throws Exception {
        test("small", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_col() throws Exception {
        test("small", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_colgroup() throws Exception {
        test("small", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_optgroup() throws Exception {
        test("small", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_option() throws Exception {
        test("small", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_tbody() throws Exception {
        test("small", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_td() throws Exception {
        test("small", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_tfoot() throws Exception {
        test("small", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_th() throws Exception {
        test("small", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_thead() throws Exception {
        test("small", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _small_tr() throws Exception {
        test("small", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_caption() throws Exception {
        test("span", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_col() throws Exception {
        test("span", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_colgroup() throws Exception {
        test("span", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_optgroup() throws Exception {
        test("span", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_option() throws Exception {
        test("span", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_tbody() throws Exception {
        test("span", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_td() throws Exception {
        test("span", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_tfoot() throws Exception {
        test("span", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_th() throws Exception {
        test("span", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_thead() throws Exception {
        test("span", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _span_tr() throws Exception {
        test("span", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_caption() throws Exception {
        test("strike", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_col() throws Exception {
        test("strike", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_colgroup() throws Exception {
        test("strike", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_optgroup() throws Exception {
        test("strike", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_option() throws Exception {
        test("strike", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_tbody() throws Exception {
        test("strike", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_td() throws Exception {
        test("strike", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_tfoot() throws Exception {
        test("strike", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_th() throws Exception {
        test("strike", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_thead() throws Exception {
        test("strike", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strike_tr() throws Exception {
        test("strike", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_caption() throws Exception {
        test("strong", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_col() throws Exception {
        test("strong", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_colgroup() throws Exception {
        test("strong", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_optgroup() throws Exception {
        test("strong", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_option() throws Exception {
        test("strong", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_tbody() throws Exception {
        test("strong", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_td() throws Exception {
        test("strong", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_tfoot() throws Exception {
        test("strong", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_th() throws Exception {
        test("strong", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_thead() throws Exception {
        test("strong", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _strong_tr() throws Exception {
        test("strong", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_caption() throws Exception {
        test("sub", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_col() throws Exception {
        test("sub", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_colgroup() throws Exception {
        test("sub", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_optgroup() throws Exception {
        test("sub", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_option() throws Exception {
        test("sub", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_tbody() throws Exception {
        test("sub", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_td() throws Exception {
        test("sub", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_tfoot() throws Exception {
        test("sub", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_th() throws Exception {
        test("sub", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_thead() throws Exception {
        test("sub", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sub_tr() throws Exception {
        test("sub", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_caption() throws Exception {
        test("sup", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_col() throws Exception {
        test("sup", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_colgroup() throws Exception {
        test("sup", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_optgroup() throws Exception {
        test("sup", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_option() throws Exception {
        test("sup", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_tbody() throws Exception {
        test("sup", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_td() throws Exception {
        test("sup", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_tfoot() throws Exception {
        test("sup", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_th() throws Exception {
        test("sup", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_thead() throws Exception {
        test("sup", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _sup_tr() throws Exception {
        test("sup", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_caption() throws Exception {
        test("tt", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_col() throws Exception {
        test("tt", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_colgroup() throws Exception {
        test("tt", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_optgroup() throws Exception {
        test("tt", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_option() throws Exception {
        test("tt", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_tbody() throws Exception {
        test("tt", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_td() throws Exception {
        test("tt", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_tfoot() throws Exception {
        test("tt", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_th() throws Exception {
        test("tt", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_thead() throws Exception {
        test("tt", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _tt_tr() throws Exception {
        test("tt", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_caption() throws Exception {
        test("u", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_col() throws Exception {
        test("u", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_colgroup() throws Exception {
        test("u", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_optgroup() throws Exception {
        test("u", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_option() throws Exception {
        test("u", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_tbody() throws Exception {
        test("u", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_td() throws Exception {
        test("u", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_tfoot() throws Exception {
        test("u", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_th() throws Exception {
        test("u", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_thead() throws Exception {
        test("u", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _u_tr() throws Exception {
        test("u", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_caption() throws Exception {
        test("ul", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_col() throws Exception {
        test("ul", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_colgroup() throws Exception {
        test("ul", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_optgroup() throws Exception {
        test("ul", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_option() throws Exception {
        test("ul", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_tbody() throws Exception {
        test("ul", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_td() throws Exception {
        test("ul", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_tfoot() throws Exception {
        test("ul", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_th() throws Exception {
        test("ul", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_thead() throws Exception {
        test("ul", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _ul_tr() throws Exception {
        test("ul", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_caption() throws Exception {
        test("var", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_col() throws Exception {
        test("var", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_colgroup() throws Exception {
        test("var", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_optgroup() throws Exception {
        test("var", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_option() throws Exception {
        test("var", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_tbody() throws Exception {
        test("var", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_td() throws Exception {
        test("var", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_tfoot() throws Exception {
        test("var", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_th() throws Exception {
        test("var", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_thead() throws Exception {
        test("var", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _var_tr() throws Exception {
        test("var", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _a_input() throws Exception {
        test("a", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _abbr_input() throws Exception {
        test("abbr", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _acronym_input() throws Exception {
        test("acronym", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _address_input() throws Exception {
        test("address", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_input() throws Exception {
        test("applet", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_input() throws Exception {
        test("area", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_input() throws Exception {
        test("article", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_input() throws Exception {
        test("aside", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_input() throws Exception {
        test("audio", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _b_input() throws Exception {
        test("b", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_input() throws Exception {
        test("base", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "0",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _basefont_input() throws Exception {
        test("basefont", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_input() throws Exception {
        test("bdi", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _bdo_input() throws Exception {
        test("bdo", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_input() throws Exception {
        test("bgsound", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _big_input() throws Exception {
        test("big", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _blink_input() throws Exception {
        test("blink", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _blockquote_input() throws Exception {
        test("blockquote", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "3",
            IE8 = "2")
    public void _body_input() throws Exception {
        test("body", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_input() throws Exception {
        test("br", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            CHROME = "2",
            FF38 = "2")
    @NotYetImplemented({ IE8 })
    public void _button_input() throws Exception {
        test("button", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_input() throws Exception {
        test("canvas", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_input() throws Exception {
        test("caption", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _center_input() throws Exception {
        test("center", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _cite_input() throws Exception {
        test("cite", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _code_input() throws Exception {
        test("code", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_input() throws Exception {
        test("col", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_input() throws Exception {
        test("colgroup", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "0",
            CHROME = "0",
            IE8 = "0",
            FF38 = "2")
    @NotYetImplemented({ CHROME, IE })
    public void _command_input() throws Exception {
        test("command", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_input() throws Exception {
        test("datalist", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _dd_input() throws Exception {
        test("dd", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _del_input() throws Exception {
        test("del", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_input() throws Exception {
        test("details", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _dfn_input() throws Exception {
        test("dfn", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_input() throws Exception {
        test("dialog", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _dir_input() throws Exception {
        test("dir", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _div_input() throws Exception {
        test("div", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _dl_input() throws Exception {
        test("dl", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _dt_input() throws Exception {
        test("dt", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _em_input() throws Exception {
        test("em", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_input() throws Exception {
        test("embed", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _fieldset_input() throws Exception {
        test("fieldset", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_input() throws Exception {
        test("figcaption", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_input() throws Exception {
        test("figure", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _font_input() throws Exception {
        test("font", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_input() throws Exception {
        test("footer", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _form_input() throws Exception {
        test("form", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frame_input() throws Exception {
        test("frame", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frameset_input() throws Exception {
        test("frameset", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h1_input() throws Exception {
        test("h1", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h2_input() throws Exception {
        test("h2", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h3_input() throws Exception {
        test("h3", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h4_input() throws Exception {
        test("h4", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h5_input() throws Exception {
        test("h5", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _h6_input() throws Exception {
        test("h6", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_input() throws Exception {
        test("head", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_input() throws Exception {
        test("header", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_input() throws Exception {
        test("hr", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            CHROME = "2",
            IE8 = "null",
            FF38 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _html_input() throws Exception {
        test("html", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _i_input() throws Exception {
        test("i", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_input() throws Exception {
        test("image", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_input() throws Exception {
        test("img", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_a() throws Exception {
        test("input", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_abbr() throws Exception {
        test("input", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_acronym() throws Exception {
        test("input", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_address() throws Exception {
        test("input", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_applet() throws Exception {
        test("input", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_area() throws Exception {
        test("input", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_article() throws Exception {
        test("input", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_aside() throws Exception {
        test("input", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_audio() throws Exception {
        test("input", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_b() throws Exception {
        test("input", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_base() throws Exception {
        test("input", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_basefont() throws Exception {
        test("input", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_bdi() throws Exception {
        test("input", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_bdo() throws Exception {
        test("input", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_bgsound() throws Exception {
        test("input", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_big() throws Exception {
        test("input", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_blink() throws Exception {
        test("input", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_blockquote() throws Exception {
        test("input", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_body() throws Exception {
        test("input", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_br() throws Exception {
        test("input", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_button() throws Exception {
        test("input", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_canvas() throws Exception {
        test("input", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_caption() throws Exception {
        test("input", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_center() throws Exception {
        test("input", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_cite() throws Exception {
        test("input", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_code() throws Exception {
        test("input", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_col() throws Exception {
        test("input", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_colgroup() throws Exception {
        test("input", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_command() throws Exception {
        test("input", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_datalist() throws Exception {
        test("input", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dd() throws Exception {
        test("input", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_del() throws Exception {
        test("input", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_details() throws Exception {
        test("input", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dfn() throws Exception {
        test("input", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dialog() throws Exception {
        test("input", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dir() throws Exception {
        test("input", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_div() throws Exception {
        test("input", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dl() throws Exception {
        test("input", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_dt() throws Exception {
        test("input", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_em() throws Exception {
        test("input", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_embed() throws Exception {
        test("input", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_fieldset() throws Exception {
        test("input", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_figcaption() throws Exception {
        test("input", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_figure() throws Exception {
        test("input", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_font() throws Exception {
        test("input", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_footer() throws Exception {
        test("input", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_form() throws Exception {
        test("input", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_frame() throws Exception {
        test("input", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_frameset() throws Exception {
        test("input", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h1() throws Exception {
        test("input", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h2() throws Exception {
        test("input", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h3() throws Exception {
        test("input", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h4() throws Exception {
        test("input", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h5() throws Exception {
        test("input", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_h6() throws Exception {
        test("input", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_head() throws Exception {
        test("input", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_header() throws Exception {
        test("input", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_hr() throws Exception {
        test("input", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_html() throws Exception {
        test("input", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_i() throws Exception {
        test("input", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_iframe() throws Exception {
        test("input", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_image() throws Exception {
        test("input", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_img() throws Exception {
        test("input", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_input() throws Exception {
        test("input", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_ins() throws Exception {
        test("input", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_isindex() throws Exception {
        test("input", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_kbd() throws Exception {
        test("input", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_keygen() throws Exception {
        test("input", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_label() throws Exception {
        test("input", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_layer() throws Exception {
        test("input", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_legend() throws Exception {
        test("input", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_li() throws Exception {
        test("input", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_link() throws Exception {
        test("input", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_listing() throws Exception {
        test("input", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_main() throws Exception {
        test("input", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_map() throws Exception {
        test("input", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_mark() throws Exception {
        test("input", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_marquee() throws Exception {
        test("input", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_menu() throws Exception {
        test("input", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_menuitem() throws Exception {
        test("input", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_meta() throws Exception {
        test("input", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_meter() throws Exception {
        test("input", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_multicol() throws Exception {
        test("input", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_nav() throws Exception {
        test("input", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_nextid() throws Exception {
        test("input", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_nobr() throws Exception {
        test("input", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_noembed() throws Exception {
        test("input", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_noframes() throws Exception {
        test("input", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_nolayer() throws Exception {
        test("input", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_noscript() throws Exception {
        test("input", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_object() throws Exception {
        test("input", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_ol() throws Exception {
        test("input", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_optgroup() throws Exception {
        test("input", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_option() throws Exception {
        test("input", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_output() throws Exception {
        test("input", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_p() throws Exception {
        test("input", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_param() throws Exception {
        test("input", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_plaintext() throws Exception {
        test("input", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_pre() throws Exception {
        test("input", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_progress() throws Exception {
        test("input", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_q() throws Exception {
        test("input", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_rp() throws Exception {
        test("input", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_rt() throws Exception {
        test("input", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_ruby() throws Exception {
        test("input", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_s() throws Exception {
        test("input", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_samp() throws Exception {
        test("input", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _input_script() throws Exception {
        test("input", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_section() throws Exception {
        test("input", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_select() throws Exception {
        test("input", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_small() throws Exception {
        test("input", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_source() throws Exception {
        test("input", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_span() throws Exception {
        test("input", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_strike() throws Exception {
        test("input", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_strong() throws Exception {
        test("input", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_style() throws Exception {
        test("input", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_sub() throws Exception {
        test("input", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_summary() throws Exception {
        test("input", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_sup() throws Exception {
        test("input", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_table() throws Exception {
        test("input", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_tbody() throws Exception {
        test("input", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_td() throws Exception {
        test("input", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_textarea() throws Exception {
        test("input", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_tfoot() throws Exception {
        test("input", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_th() throws Exception {
        test("input", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_thead() throws Exception {
        test("input", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_time() throws Exception {
        test("input", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_title() throws Exception {
        test("input", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_tr() throws Exception {
        test("input", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_track() throws Exception {
        test("input", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_tt() throws Exception {
        test("input", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_u() throws Exception {
        test("input", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_ul() throws Exception {
        test("input", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_var() throws Exception {
        test("input", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_video() throws Exception {
        test("input", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_wbr() throws Exception {
        test("input", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_xmp() throws Exception {
        test("input", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _ins_input() throws Exception {
        test("ins", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "0",
            IE11 = "0",
            CHROME = "2",
            IE8 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE, FF38 })
    public void _isindex_input() throws Exception {
        test("isindex", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _kbd_input() throws Exception {
        test("kbd", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "0",
            CHROME = "0",
            IE8 = "0",
            FF38 = "2")
    @NotYetImplemented(FF)
    public void _keygen_input() throws Exception {
        test("keygen", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _label_input() throws Exception {
        test("label", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_input() throws Exception {
        test("layer", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_input() throws Exception {
        test("legend", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _li_input() throws Exception {
        test("li", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_input() throws Exception {
        test("link", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _listing_input() throws Exception {
        test("listing", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_input() throws Exception {
        test("main", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _map_input() throws Exception {
        test("map", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_input() throws Exception {
        test("mark", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            CHROME = "2",
            FF38 = "2")
    @NotYetImplemented({ IE8 })
    public void _marquee_input() throws Exception {
        test("marquee", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _menu_input() throws Exception {
        test("menu", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_input() throws Exception {
        test("menuitem", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_input() throws Exception {
        test("meta", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_input() throws Exception {
        test("meter", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_input() throws Exception {
        test("multicol", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_input() throws Exception {
        test("nav", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _nextid_input() throws Exception {
        test("nextid", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _nobr_input() throws Exception {
        test("nobr", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_input() throws Exception {
        test("nolayer", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            CHROME = "2",
            IE8 = "null",
            FF38 = "2")
    @NotYetImplemented({ IE8 })
    public void _object_input() throws Exception {
        test("object", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _ol_input() throws Exception {
        test("ol", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_input() throws Exception {
        test("optgroup", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _option_input() throws Exception {
        test("option", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_input() throws Exception {
        test("output", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _p_input() throws Exception {
        test("p", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_input() throws Exception {
        test("param", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _pre_input() throws Exception {
        test("pre", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_input() throws Exception {
        test("progress", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _q_input() throws Exception {
        test("q", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_input() throws Exception {
        test("rp", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_input() throws Exception {
        test("rt", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _ruby_input() throws Exception {
        test("ruby", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _s_input() throws Exception {
        test("s", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _samp_input() throws Exception {
        test("samp", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_input() throws Exception {
        test("section", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _select_input() throws Exception {
        test("select", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _small_input() throws Exception {
        test("small", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_input() throws Exception {
        test("source", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _span_input() throws Exception {
        test("span", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _strike_input() throws Exception {
        test("strike", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _strong_input() throws Exception {
        test("strong", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _sub_input() throws Exception {
        test("sub", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_input() throws Exception {
        test("summary", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _sup_input() throws Exception {
        test("sup", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_input() throws Exception {
        test("tbody", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_input() throws Exception {
        test("td", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_input() throws Exception {
        test("tfoot", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_input() throws Exception {
        test("th", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_input() throws Exception {
        test("thead", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_input() throws Exception {
        test("time", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_input() throws Exception {
        test("tr", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_input() throws Exception {
        test("track", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _tt_input() throws Exception {
        test("tt", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _u_input() throws Exception {
        test("u", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _ul_input() throws Exception {
        test("ul", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _var_input() throws Exception {
        test("var", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_input() throws Exception {
        test("video", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_input() throws Exception {
        test("wbr", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _noembed_input() throws Exception {
        test("noembed", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_input() throws Exception {
        test("script", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _table_input() throws Exception {
        test("table", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _title_input() throws Exception {
        test("title", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_input() throws Exception {
        test("iframe", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_input() throws Exception {
        test("noframes", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_input() throws Exception {
        test("noscript", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_input() throws Exception {
        test("style", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_content() throws Exception {
        test("area", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_data() throws Exception {
        test("area", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_content() throws Exception {
        test("base", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_data() throws Exception {
        test("base", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "0",
            IE8 = "1")
    @NotYetImplemented(IE8)
    public void _basefont_content() throws Exception {
        test("basefont", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "0",
            IE8 = "1")
    @NotYetImplemented(IE8)
    public void _basefont_data() throws Exception {
        test("basefont", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_content() throws Exception {
        test("bgsound", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_data() throws Exception {
        test("bgsound", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_content() throws Exception {
        test("body", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "1")
    public void _body_data() throws Exception {
        test("body", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_content() throws Exception {
        test("br", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_data() throws Exception {
        test("br", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_content() throws Exception {
        test("caption", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _caption_data() throws Exception {
        test("caption", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_content() throws Exception {
        test("col", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _col_data() throws Exception {
        test("col", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_content() throws Exception {
        test("colgroup", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _colgroup_data() throws Exception {
        test("colgroup", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            IE = "0")
    @NotYetImplemented({ CHROME, IE })
    public void _command_content() throws Exception {
        test("command", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            IE = "0")
    @NotYetImplemented({ CHROME, IE })
    public void _command_data() throws Exception {
        test("command", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _content_area() throws Exception {
        test("content", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_base() throws Exception {
        test("content", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_basefont() throws Exception {
        test("content", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_bgsound() throws Exception {
        test("content", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_br() throws Exception {
        test("content", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "2",
            IE11 = "2",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE })
    public void _content_command() throws Exception {
        test("content", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_embed() throws Exception {
        test("content", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_hr() throws Exception {
        test("content", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _content_image() throws Exception {
        test("content", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_img() throws Exception {
        test("content", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_input() throws Exception {
        test("content", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_keygen() throws Exception {
        test("content", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_link() throws Exception {
        test("content", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_meta() throws Exception {
        test("content", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _content_param() throws Exception {
        test("content", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _content_source() throws Exception {
        test("content", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _content_track() throws Exception {
        test("content", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_wbr() throws Exception {
        test("content", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _data_area() throws Exception {
        test("data", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_base() throws Exception {
        test("data", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_basefont() throws Exception {
        test("data", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_bgsound() throws Exception {
        test("data", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_br() throws Exception {
        test("data", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "2",
            IE11 = "2",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE })
    public void _data_command() throws Exception {
        test("data", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_embed() throws Exception {
        test("data", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_hr() throws Exception {
        test("data", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _data_image() throws Exception {
        test("data", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_img() throws Exception {
        test("data", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_input() throws Exception {
        test("data", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_keygen() throws Exception {
        test("data", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_link() throws Exception {
        test("data", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_meta() throws Exception {
        test("data", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _data_param() throws Exception {
        test("data", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _data_source() throws Exception {
        test("data", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented
    public void _data_track() throws Exception {
        test("data", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_wbr() throws Exception {
        test("data", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_content() throws Exception {
        test("embed", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_data() throws Exception {
        test("embed", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frame_content() throws Exception {
        test("frame", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frame_data() throws Exception {
        test("frame", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frameset_content() throws Exception {
        test("frameset", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _frameset_data() throws Exception {
        test("frameset", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_content() throws Exception {
        test("head", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_data() throws Exception {
        test("head", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_content() throws Exception {
        test("hr", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_data() throws Exception {
        test("hr", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _html_content() throws Exception {
        test("html", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "2",
            IE8 = "null")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _html_data() throws Exception {
        test("html", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_content() throws Exception {
        test("image", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_data() throws Exception {
        test("image", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_content() throws Exception {
        test("img", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_data() throws Exception {
        test("img", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_content() throws Exception {
        test("input", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_data() throws Exception {
        test("input", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF31 = "2",
            IE = "0",
            FF38 = "2")
    @NotYetImplemented(FF)
    public void _keygen_content() throws Exception {
        test("keygen", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF31 = "2",
            IE = "0",
            FF38 = "2")
    @NotYetImplemented(FF)
    public void _keygen_data() throws Exception {
        test("keygen", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_content() throws Exception {
        test("link", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_data() throws Exception {
        test("link", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_content() throws Exception {
        test("meta", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_data() throws Exception {
        test("meta", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_content() throws Exception {
        test("param", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_data() throws Exception {
        test("param", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_content() throws Exception {
        test("source", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_data() throws Exception {
        test("source", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "0",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_content() throws Exception {
        test("table", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "0",
            IE8 = "3")
    @NotYetImplemented(IE8)
    public void _table_data() throws Exception {
        test("table", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_content() throws Exception {
        test("tbody", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tbody_data() throws Exception {
        test("tbody", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_content() throws Exception {
        test("td", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _td_data() throws Exception {
        test("td", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_content() throws Exception {
        test("tfoot", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tfoot_data() throws Exception {
        test("tfoot", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_content() throws Exception {
        test("th", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _th_data() throws Exception {
        test("th", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_content() throws Exception {
        test("thead", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _thead_data() throws Exception {
        test("thead", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_content() throws Exception {
        test("tr", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _tr_data() throws Exception {
        test("tr", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_content() throws Exception {
        test("track", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_data() throws Exception {
        test("track", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_content() throws Exception {
        test("wbr", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_data() throws Exception {
        test("wbr", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            IE8 = "0",
            FF38 = "2")
    @NotYetImplemented({ FF, IE })
    public void _content_isindex() throws Exception {
        test("content", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2",
            IE8 = "0",
            FF38 = "2")
    @NotYetImplemented({ FF, IE })
    public void _data_isindex() throws Exception {
        test("data", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "0",
            IE = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_content() throws Exception {
        test("isindex", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "0",
            IE = "0",
            FF38 = "0")
    @NotYetImplemented({ FF, IE })
    public void _isindex_data() throws Exception {
        test("isindex", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _content_nextid() throws Exception {
        test("content", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _content_script() throws Exception {
        test("content", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _content_title() throws Exception {
        test("content", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _data_nextid() throws Exception {
        test("data", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _data_script() throws Exception {
        test("data", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _data_title() throws Exception {
        test("data", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _nextid_content() throws Exception {
        test("nextid", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _nextid_data() throws Exception {
        test("nextid", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_content() throws Exception {
        test("optgroup", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _optgroup_data() throws Exception {
        test("optgroup", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_content() throws Exception {
        test("option", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _option_data() throws Exception {
        test("option", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_content() throws Exception {
        test("script", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented
    public void _script_data() throws Exception {
        test("script", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_body() throws Exception {
        test("content", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_caption() throws Exception {
        test("content", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_col() throws Exception {
        test("content", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_colgroup() throws Exception {
        test("content", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_head() throws Exception {
        test("content", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_html() throws Exception {
        test("content", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_optgroup() throws Exception {
        test("content", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_option() throws Exception {
        test("content", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_tbody() throws Exception {
        test("content", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_td() throws Exception {
        test("content", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_tfoot() throws Exception {
        test("content", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_th() throws Exception {
        test("content", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_thead() throws Exception {
        test("content", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _content_tr() throws Exception {
        test("content", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_body() throws Exception {
        test("data", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_caption() throws Exception {
        test("data", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_col() throws Exception {
        test("data", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_colgroup() throws Exception {
        test("data", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_head() throws Exception {
        test("data", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_html() throws Exception {
        test("data", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_optgroup() throws Exception {
        test("data", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_option() throws Exception {
        test("data", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_tbody() throws Exception {
        test("data", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_td() throws Exception {
        test("data", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_tfoot() throws Exception {
        test("data", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_th() throws Exception {
        test("data", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_thead() throws Exception {
        test("data", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _data_tr() throws Exception {
        test("data", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_content() throws Exception {
        test("noscript", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    public void _noscript_data() throws Exception {
        test("noscript", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_content() throws Exception {
        test("applet", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _applet_data() throws Exception {
        test("applet", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_content() throws Exception {
        test("article", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _article_data() throws Exception {
        test("article", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_content() throws Exception {
        test("aside", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _aside_data() throws Exception {
        test("aside", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_content() throws Exception {
        test("audio", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _audio_data() throws Exception {
        test("audio", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_content() throws Exception {
        test("bdi", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _bdi_data() throws Exception {
        test("bdi", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_content() throws Exception {
        test("canvas", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _canvas_data() throws Exception {
        test("canvas", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_a() throws Exception {
        test("content", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_abbr() throws Exception {
        test("content", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_acronym() throws Exception {
        test("content", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_address() throws Exception {
        test("content", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_applet() throws Exception {
        test("content", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_article() throws Exception {
        test("content", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_aside() throws Exception {
        test("content", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_audio() throws Exception {
        test("content", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_b() throws Exception {
        test("content", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_bdi() throws Exception {
        test("content", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_bdo() throws Exception {
        test("content", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_big() throws Exception {
        test("content", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_blink() throws Exception {
        test("content", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_blockquote() throws Exception {
        test("content", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_button() throws Exception {
        test("content", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_canvas() throws Exception {
        test("content", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_center() throws Exception {
        test("content", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_cite() throws Exception {
        test("content", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_code() throws Exception {
        test("content", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_content() throws Exception {
        test("content", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_data() throws Exception {
        test("content", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_datalist() throws Exception {
        test("content", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dd() throws Exception {
        test("content", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_del() throws Exception {
        test("content", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_details() throws Exception {
        test("content", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dfn() throws Exception {
        test("content", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dialog() throws Exception {
        test("content", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dir() throws Exception {
        test("content", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_div() throws Exception {
        test("content", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dl() throws Exception {
        test("content", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_dt() throws Exception {
        test("content", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_em() throws Exception {
        test("content", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_fieldset() throws Exception {
        test("content", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_figcaption() throws Exception {
        test("content", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_figure() throws Exception {
        test("content", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_font() throws Exception {
        test("content", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_footer() throws Exception {
        test("content", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_form() throws Exception {
        test("content", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_frame() throws Exception {
        test("content", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_frameset() throws Exception {
        test("content", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h1() throws Exception {
        test("content", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h2() throws Exception {
        test("content", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h3() throws Exception {
        test("content", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h4() throws Exception {
        test("content", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h5() throws Exception {
        test("content", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_h6() throws Exception {
        test("content", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_header() throws Exception {
        test("content", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_i() throws Exception {
        test("content", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_iframe() throws Exception {
        test("content", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_ins() throws Exception {
        test("content", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_kbd() throws Exception {
        test("content", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_label() throws Exception {
        test("content", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_layer() throws Exception {
        test("content", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_legend() throws Exception {
        test("content", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_li() throws Exception {
        test("content", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_listing() throws Exception {
        test("content", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_main() throws Exception {
        test("content", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_map() throws Exception {
        test("content", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_mark() throws Exception {
        test("content", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_marquee() throws Exception {
        test("content", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_menu() throws Exception {
        test("content", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_menuitem() throws Exception {
        test("content", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_meter() throws Exception {
        test("content", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_multicol() throws Exception {
        test("content", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_nav() throws Exception {
        test("content", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_nobr() throws Exception {
        test("content", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_noembed() throws Exception {
        test("content", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_noframes() throws Exception {
        test("content", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_nolayer() throws Exception {
        test("content", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_noscript() throws Exception {
        test("content", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_object() throws Exception {
        test("content", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_ol() throws Exception {
        test("content", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_output() throws Exception {
        test("content", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_p() throws Exception {
        test("content", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_plaintext() throws Exception {
        test("content", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_pre() throws Exception {
        test("content", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_progress() throws Exception {
        test("content", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_q() throws Exception {
        test("content", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_rp() throws Exception {
        test("content", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_rt() throws Exception {
        test("content", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_ruby() throws Exception {
        test("content", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_s() throws Exception {
        test("content", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_samp() throws Exception {
        test("content", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_section() throws Exception {
        test("content", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_select() throws Exception {
        test("content", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_small() throws Exception {
        test("content", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_span() throws Exception {
        test("content", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_strike() throws Exception {
        test("content", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_strong() throws Exception {
        test("content", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_style() throws Exception {
        test("content", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_sub() throws Exception {
        test("content", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_summary() throws Exception {
        test("content", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_sup() throws Exception {
        test("content", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_table() throws Exception {
        test("content", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_textarea() throws Exception {
        test("content", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_time() throws Exception {
        test("content", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_tt() throws Exception {
        test("content", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_u() throws Exception {
        test("content", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_ul() throws Exception {
        test("content", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_var() throws Exception {
        test("content", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_video() throws Exception {
        test("content", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _content_xmp() throws Exception {
        test("content", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_a() throws Exception {
        test("data", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_abbr() throws Exception {
        test("data", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_acronym() throws Exception {
        test("data", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_address() throws Exception {
        test("data", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_applet() throws Exception {
        test("data", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_article() throws Exception {
        test("data", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_aside() throws Exception {
        test("data", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_audio() throws Exception {
        test("data", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_b() throws Exception {
        test("data", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_bdi() throws Exception {
        test("data", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_bdo() throws Exception {
        test("data", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_big() throws Exception {
        test("data", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_blink() throws Exception {
        test("data", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_blockquote() throws Exception {
        test("data", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_button() throws Exception {
        test("data", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_canvas() throws Exception {
        test("data", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_center() throws Exception {
        test("data", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_cite() throws Exception {
        test("data", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_code() throws Exception {
        test("data", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_content() throws Exception {
        test("data", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_data() throws Exception {
        test("data", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_datalist() throws Exception {
        test("data", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dd() throws Exception {
        test("data", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_del() throws Exception {
        test("data", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_details() throws Exception {
        test("data", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dfn() throws Exception {
        test("data", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dialog() throws Exception {
        test("data", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dir() throws Exception {
        test("data", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_div() throws Exception {
        test("data", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dl() throws Exception {
        test("data", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_dt() throws Exception {
        test("data", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_em() throws Exception {
        test("data", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_fieldset() throws Exception {
        test("data", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_figcaption() throws Exception {
        test("data", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_figure() throws Exception {
        test("data", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_font() throws Exception {
        test("data", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_footer() throws Exception {
        test("data", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_form() throws Exception {
        test("data", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_frame() throws Exception {
        test("data", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_frameset() throws Exception {
        test("data", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h1() throws Exception {
        test("data", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h2() throws Exception {
        test("data", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h3() throws Exception {
        test("data", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h4() throws Exception {
        test("data", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h5() throws Exception {
        test("data", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_h6() throws Exception {
        test("data", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_header() throws Exception {
        test("data", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_i() throws Exception {
        test("data", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_iframe() throws Exception {
        test("data", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_ins() throws Exception {
        test("data", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_kbd() throws Exception {
        test("data", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_label() throws Exception {
        test("data", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_layer() throws Exception {
        test("data", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_legend() throws Exception {
        test("data", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_li() throws Exception {
        test("data", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_listing() throws Exception {
        test("data", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_main() throws Exception {
        test("data", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_map() throws Exception {
        test("data", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_mark() throws Exception {
        test("data", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_marquee() throws Exception {
        test("data", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_menu() throws Exception {
        test("data", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_menuitem() throws Exception {
        test("data", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_meter() throws Exception {
        test("data", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_multicol() throws Exception {
        test("data", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_nav() throws Exception {
        test("data", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_nobr() throws Exception {
        test("data", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_noembed() throws Exception {
        test("data", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_noframes() throws Exception {
        test("data", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_nolayer() throws Exception {
        test("data", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_noscript() throws Exception {
        test("data", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_object() throws Exception {
        test("data", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_ol() throws Exception {
        test("data", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_output() throws Exception {
        test("data", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_p() throws Exception {
        test("data", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_plaintext() throws Exception {
        test("data", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_pre() throws Exception {
        test("data", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_progress() throws Exception {
        test("data", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_q() throws Exception {
        test("data", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_rp() throws Exception {
        test("data", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_rt() throws Exception {
        test("data", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_ruby() throws Exception {
        test("data", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_s() throws Exception {
        test("data", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_samp() throws Exception {
        test("data", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_section() throws Exception {
        test("data", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_select() throws Exception {
        test("data", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_small() throws Exception {
        test("data", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_span() throws Exception {
        test("data", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_strike() throws Exception {
        test("data", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_strong() throws Exception {
        test("data", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_style() throws Exception {
        test("data", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_sub() throws Exception {
        test("data", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_summary() throws Exception {
        test("data", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_sup() throws Exception {
        test("data", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_table() throws Exception {
        test("data", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_textarea() throws Exception {
        test("data", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_time() throws Exception {
        test("data", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_tt() throws Exception {
        test("data", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_u() throws Exception {
        test("data", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_ul() throws Exception {
        test("data", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_var() throws Exception {
        test("data", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_video() throws Exception {
        test("data", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _data_xmp() throws Exception {
        test("data", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_content() throws Exception {
        test("datalist", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _datalist_data() throws Exception {
        test("datalist", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_content() throws Exception {
        test("details", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _details_data() throws Exception {
        test("details", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_content() throws Exception {
        test("dialog", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _dialog_data() throws Exception {
        test("dialog", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_content() throws Exception {
        test("figcaption", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figcaption_data() throws Exception {
        test("figcaption", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_content() throws Exception {
        test("figure", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _figure_data() throws Exception {
        test("figure", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_content() throws Exception {
        test("footer", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _footer_data() throws Exception {
        test("footer", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_content() throws Exception {
        test("header", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _header_data() throws Exception {
        test("header", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_content() throws Exception {
        test("iframe", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _iframe_data() throws Exception {
        test("iframe", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_content() throws Exception {
        test("layer", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _layer_data() throws Exception {
        test("layer", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_content() throws Exception {
        test("legend", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _legend_data() throws Exception {
        test("legend", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_content() throws Exception {
        test("listing", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _listing_data() throws Exception {
        test("listing", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_content() throws Exception {
        test("main", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _main_data() throws Exception {
        test("main", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_content() throws Exception {
        test("mark", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _mark_data() throws Exception {
        test("mark", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_content() throws Exception {
        test("menuitem", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _menuitem_data() throws Exception {
        test("menuitem", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_content() throws Exception {
        test("meter", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _meter_data() throws Exception {
        test("meter", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_content() throws Exception {
        test("multicol", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _multicol_data() throws Exception {
        test("multicol", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_content() throws Exception {
        test("nav", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nav_data() throws Exception {
        test("nav", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_content() throws Exception {
        test("noembed", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noembed_data() throws Exception {
        test("noembed", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_content() throws Exception {
        test("noframes", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _noframes_data() throws Exception {
        test("noframes", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_content() throws Exception {
        test("nolayer", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _nolayer_data() throws Exception {
        test("nolayer", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_content() throws Exception {
        test("object", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "null")
    @NotYetImplemented(IE8)
    public void _object_data() throws Exception {
        test("object", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_content() throws Exception {
        test("output", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _output_data() throws Exception {
        test("output", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_content() throws Exception {
        test("pre", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "2")
    @NotYetImplemented(IE8)
    public void _pre_data() throws Exception {
        test("pre", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_content() throws Exception {
        test("progress", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _progress_data() throws Exception {
        test("progress", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_content() throws Exception {
        test("rp", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rp_data() throws Exception {
        test("rp", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_content() throws Exception {
        test("rt", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _rt_data() throws Exception {
        test("rt", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_content() throws Exception {
        test("section", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _section_data() throws Exception {
        test("section", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_content() throws Exception {
        test("style", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _style_data() throws Exception {
        test("style", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_content() throws Exception {
        test("summary", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _summary_data() throws Exception {
        test("summary", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_content() throws Exception {
        test("time", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _time_data() throws Exception {
        test("time", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_content() throws Exception {
        test("title", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _title_data() throws Exception {
        test("title", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_content() throws Exception {
        test("video", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE8 = "0")
    @NotYetImplemented(IE8)
    public void _video_data() throws Exception {
        test("video", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_picture() throws Exception {
        test("area", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_picture() throws Exception {
        test("base", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_picture() throws Exception {
        test("basefont", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_picture() throws Exception {
        test("bgsound", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _body_picture() throws Exception {
        test("body", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_picture() throws Exception {
        test("br", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented({ IE8 })
    public void _caption_picture() throws Exception {
        test("caption", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented({ IE8 })
    public void _col_picture() throws Exception {
        test("col", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented({ IE8 })
    public void _colgroup_picture() throws Exception {
        test("colgroup", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            IE11 = "0")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_picture() throws Exception {
        test("command", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_picture() throws Exception {
        test("embed", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented
    public void _frame_picture() throws Exception {
        test("frame", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented
    public void _frameset_picture() throws Exception {
        test("frameset", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "null",
            IE8 = "1")
    @NotYetImplemented({ IE8 })
    public void _head_picture() throws Exception {
        test("head", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_picture() throws Exception {
        test("hr", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _html_picture() throws Exception {
        test("html", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_picture() throws Exception {
        test("image", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_picture() throws Exception {
        test("img", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_picture() throws Exception {
        test("input", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF31 = "2",
            IE11 = "0",
            FF38 = "2")
    @NotYetImplemented({ IE8, FF })
    public void _keygen_picture() throws Exception {
        test("keygen", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_picture() throws Exception {
        test("link", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_picture() throws Exception {
        test("meta", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_picture() throws Exception {
        test("param", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _picture_area() throws Exception {
        test("picture", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_base() throws Exception {
        test("picture", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_basefont() throws Exception {
        test("picture", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_bgsound() throws Exception {
        test("picture", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_br() throws Exception {
        test("picture", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "2",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11 })
    public void _picture_command() throws Exception {
        test("picture", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_embed() throws Exception {
        test("picture", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_hr() throws Exception {
        test("picture", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _picture_image() throws Exception {
        test("picture", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_img() throws Exception {
        test("picture", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    public void _picture_input() throws Exception {
        test("picture", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_keygen() throws Exception {
        test("picture", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_link() throws Exception {
        test("picture", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_meta() throws Exception {
        test("picture", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _picture_param() throws Exception {
        test("picture", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _picture_source() throws Exception {
        test("picture", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _picture_track() throws Exception {
        test("picture", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _picture_wbr() throws Exception {
        test("picture", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_picture() throws Exception {
        test("source", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _table_picture() throws Exception {
        test("table", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _tbody_picture() throws Exception {
        test("tbody", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _td_picture() throws Exception {
        test("td", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _tfoot_picture() throws Exception {
        test("tfoot", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _th_picture() throws Exception {
        test("th", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _thead_picture() throws Exception {
        test("thead", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "null",
            FF31 = "null",
            IE11 = "null")
    @NotYetImplemented({ IE8, FF38 })
    public void _tr_picture() throws Exception {
        test("tr", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_picture() throws Exception {
        test("track", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_picture() throws Exception {
        test("wbr", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _nextid_picture() throws Exception {
        test("nextid", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _optgroup_picture() throws Exception {
        test("optgroup", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _option_picture() throws Exception {
        test("option", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented({ CHROME, FF, IE11 })
    public void _picture_nextid() throws Exception {
        test("picture", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _picture_script() throws Exception {
        test("picture", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _picture_title() throws Exception {
        test("picture", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _script_picture() throws Exception {
        test("script", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _noscript_picture() throws Exception {
        test("noscript", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_body() throws Exception {
        test("picture", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_caption() throws Exception {
        test("picture", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_col() throws Exception {
        test("picture", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_colgroup() throws Exception {
        test("picture", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_head() throws Exception {
        test("picture", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_html() throws Exception {
        test("picture", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_optgroup() throws Exception {
        test("picture", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_option() throws Exception {
        test("picture", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_tbody() throws Exception {
        test("picture", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_td() throws Exception {
        test("picture", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_tfoot() throws Exception {
        test("picture", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_th() throws Exception {
        test("picture", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_thead() throws Exception {
        test("picture", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _picture_tr() throws Exception {
        test("picture", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "0",
            IE11 = "0",
            FF38 = "0")
    @NotYetImplemented({ FF31, IE11, FF38 })
    public void _isindex_picture() throws Exception {
        test("isindex", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF31 = "2",
            IE11 = "2")
    @NotYetImplemented({ FF31, IE11 })
    public void _picture_isindex() throws Exception {
        test("picture", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _area_template() throws Exception {
        test("area", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _base_template() throws Exception {
        test("base", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _basefont_template() throws Exception {
        test("basefont", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _bgsound_template() throws Exception {
        test("bgsound", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented(IE8)
    public void _body_template() throws Exception {
        test("body", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _br_template() throws Exception {
        test("br", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _caption_template() throws Exception {
        test("caption", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _col_template() throws Exception {
        test("col", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _colgroup_template() throws Exception {
        test("colgroup", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            IE11 = "0")
    @NotYetImplemented({ CHROME, IE11 })
    public void _command_template() throws Exception {
        test("command", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _embed_template() throws Exception {
        test("embed", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    @NotYetImplemented
    public void _frame_template() throws Exception {
        test("frame", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    @NotYetImplemented({ CHROME, IE, FF })
    public void _frameset_template() throws Exception {
        test("frameset", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _head_template() throws Exception {
        test("head", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _hr_template() throws Exception {
        test("hr", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("2")
    @NotYetImplemented
    public void _html_template() throws Exception {
        test("html", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _image_template() throws Exception {
        test("image", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _img_template() throws Exception {
        test("img", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _input_template() throws Exception {
        test("input", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "2",
            IE11 = "0")
    @NotYetImplemented({ IE8, FF })
    public void _keygen_template() throws Exception {
        test("keygen", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _link_template() throws Exception {
        test("link", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _meta_template() throws Exception {
        test("meta", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _param_template() throws Exception {
        test("param", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _source_template() throws Exception {
        test("source", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _tbody_template() throws Exception {
        test("tbody", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _td_template() throws Exception {
        test("td", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_a() throws Exception {
        test("template", "a");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_abbr() throws Exception {
        test("template", "abbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_acronym() throws Exception {
        test("template", "acronym");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_address() throws Exception {
        test("template", "address");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_applet() throws Exception {
        test("template", "applet");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_area() throws Exception {
        test("template", "area");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_article() throws Exception {
        test("template", "article");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_aside() throws Exception {
        test("template", "aside");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_audio() throws Exception {
        test("template", "audio");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_b() throws Exception {
        test("template", "b");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_base() throws Exception {
        test("template", "base");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_basefont() throws Exception {
        test("template", "basefont");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_bdi() throws Exception {
        test("template", "bdi");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_bdo() throws Exception {
        test("template", "bdo");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_bgsound() throws Exception {
        test("template", "bgsound");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_big() throws Exception {
        test("template", "big");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_blink() throws Exception {
        test("template", "blink");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_blockquote() throws Exception {
        test("template", "blockquote");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_body() throws Exception {
        test("template", "body");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_br() throws Exception {
        test("template", "br");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_button() throws Exception {
        test("template", "button");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_canvas() throws Exception {
        test("template", "canvas");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_caption() throws Exception {
        test("template", "caption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_center() throws Exception {
        test("template", "center");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_cite() throws Exception {
        test("template", "cite");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_code() throws Exception {
        test("template", "code");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_col() throws Exception {
        test("template", "col");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_colgroup() throws Exception {
        test("template", "colgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_command() throws Exception {
        test("template", "command");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_content() throws Exception {
        test("template", "content");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_data() throws Exception {
        test("template", "data");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_datalist() throws Exception {
        test("template", "datalist");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dd() throws Exception {
        test("template", "dd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_del() throws Exception {
        test("template", "del");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_details() throws Exception {
        test("template", "details");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dfn() throws Exception {
        test("template", "dfn");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dialog() throws Exception {
        test("template", "dialog");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dir() throws Exception {
        test("template", "dir");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_div() throws Exception {
        test("template", "div");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dl() throws Exception {
        test("template", "dl");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_dt() throws Exception {
        test("template", "dt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_em() throws Exception {
        test("template", "em");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_embed() throws Exception {
        test("template", "embed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_fieldset() throws Exception {
        test("template", "fieldset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_figcaption() throws Exception {
        test("template", "figcaption");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_figure() throws Exception {
        test("template", "figure");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_font() throws Exception {
        test("template", "font");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_footer() throws Exception {
        test("template", "footer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_form() throws Exception {
        test("template", "form");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_frame() throws Exception {
        test("template", "frame");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_frameset() throws Exception {
        test("template", "frameset");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h1() throws Exception {
        test("template", "h1");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h2() throws Exception {
        test("template", "h2");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h3() throws Exception {
        test("template", "h3");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h4() throws Exception {
        test("template", "h4");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h5() throws Exception {
        test("template", "h5");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_h6() throws Exception {
        test("template", "h6");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_head() throws Exception {
        test("template", "head");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_header() throws Exception {
        test("template", "header");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_hr() throws Exception {
        test("template", "hr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_html() throws Exception {
        test("template", "html");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_i() throws Exception {
        test("template", "i");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_iframe() throws Exception {
        test("template", "iframe");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_image() throws Exception {
        test("template", "image");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_img() throws Exception {
        test("template", "img");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ IE8, CHROME, FF })
    public void _template_input() throws Exception {
        test("template", "input");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_ins() throws Exception {
        test("template", "ins");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_isindex() throws Exception {
        test("template", "isindex");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_kbd() throws Exception {
        test("template", "kbd");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_keygen() throws Exception {
        test("template", "keygen");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_label() throws Exception {
        test("template", "label");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_layer() throws Exception {
        test("template", "layer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_legend() throws Exception {
        test("template", "legend");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_li() throws Exception {
        test("template", "li");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_link() throws Exception {
        test("template", "link");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_listing() throws Exception {
        test("template", "listing");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_main() throws Exception {
        test("template", "main");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_map() throws Exception {
        test("template", "map");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_mark() throws Exception {
        test("template", "mark");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_marquee() throws Exception {
        test("template", "marquee");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_menu() throws Exception {
        test("template", "menu");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_menuitem() throws Exception {
        test("template", "menuitem");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_meta() throws Exception {
        test("template", "meta");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_meter() throws Exception {
        test("template", "meter");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_multicol() throws Exception {
        test("template", "multicol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_nav() throws Exception {
        test("template", "nav");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF31, IE11, FF38 })
    public void _template_nextid() throws Exception {
        test("template", "nextid");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_nobr() throws Exception {
        test("template", "nobr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_noembed() throws Exception {
        test("template", "noembed");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_noframes() throws Exception {
        test("template", "noframes");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_nolayer() throws Exception {
        test("template", "nolayer");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_noscript() throws Exception {
        test("template", "noscript");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_object() throws Exception {
        test("template", "object");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_ol() throws Exception {
        test("template", "ol");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_optgroup() throws Exception {
        test("template", "optgroup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_option() throws Exception {
        test("template", "option");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_output() throws Exception {
        test("template", "output");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_p() throws Exception {
        test("template", "p");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_param() throws Exception {
        test("template", "param");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_picture() throws Exception {
        test("template", "picture");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_plaintext() throws Exception {
        test("template", "plaintext");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_pre() throws Exception {
        test("template", "pre");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_progress() throws Exception {
        test("template", "progress");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_q() throws Exception {
        test("template", "q");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_rp() throws Exception {
        test("template", "rp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_rt() throws Exception {
        test("template", "rt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_ruby() throws Exception {
        test("template", "ruby");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_s() throws Exception {
        test("template", "s");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_samp() throws Exception {
        test("template", "samp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented
    public void _template_script() throws Exception {
        test("template", "script");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_section() throws Exception {
        test("template", "section");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_select() throws Exception {
        test("template", "select");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_small() throws Exception {
        test("template", "small");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_source() throws Exception {
        test("template", "source");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_span() throws Exception {
        test("template", "span");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_strike() throws Exception {
        test("template", "strike");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_strong() throws Exception {
        test("template", "strong");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_style() throws Exception {
        test("template", "style");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_sub() throws Exception {
        test("template", "sub");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_summary() throws Exception {
        test("template", "summary");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_sup() throws Exception {
        test("template", "sup");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_table() throws Exception {
        test("template", "table");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_tbody() throws Exception {
        test("template", "tbody");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_td() throws Exception {
        test("template", "td");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_template() throws Exception {
        test("template", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_textarea() throws Exception {
        test("template", "textarea");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_tfoot() throws Exception {
        test("template", "tfoot");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_th() throws Exception {
        test("template", "th");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_thead() throws Exception {
        test("template", "thead");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_time() throws Exception {
        test("template", "time");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented(IE)
    public void _template_title() throws Exception {
        test("template", "title");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, IE8, FF })
    public void _template_tr() throws Exception {
        test("template", "tr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, IE11, FF })
    public void _template_track() throws Exception {
        test("template", "track");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_tt() throws Exception {
        test("template", "tt");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_u() throws Exception {
        test("template", "u");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_ul() throws Exception {
        test("template", "ul");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_var() throws Exception {
        test("template", "var");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_video() throws Exception {
        test("template", "video");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0",
            IE11 = "2")
    @NotYetImplemented({ CHROME, FF })
    public void _template_wbr() throws Exception {
        test("template", "wbr");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            CHROME = "0",
            FF = "0")
    @NotYetImplemented({ CHROME, FF })
    public void _template_xmp() throws Exception {
        test("template", "xmp");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _tfoot_template() throws Exception {
        test("tfoot", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _th_template() throws Exception {
        test("th", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _thead_template() throws Exception {
        test("thead", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("null")
    public void _tr_template() throws Exception {
        test("tr", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    @NotYetImplemented
    public void _track_template() throws Exception {
        test("track", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("0")
    public void _wbr_template() throws Exception {
        test("wbr", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            FF = "0",
            IE11 = "0")
    @NotYetImplemented({ IE11, FF })
    public void _isindex_template() throws Exception {
        test("isindex", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts(DEFAULT = "1",
            IE11 = "0")
    @NotYetImplemented({ IE8, CHROME, FF })
    public void _table_template() throws Exception {
        test("table", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _nextid_template() throws Exception {
        test("nextid", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _optgroup_template() throws Exception {
        test("optgroup", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _option_template() throws Exception {
        test("option", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented
    public void _script_template() throws Exception {
        test("script", "template");
    }

    /**
     * @throws Exception if the test fails
     */
    @Test
    @Alerts("1")
    @NotYetImplemented(IE8)
    public void _noscript_template() throws Exception {
        test("noscript", "template");
    }
}
