# The MIT License
#
# Copyright (c) 2004-2010, Sun Microsystems, Inc., Alan Harder, Simon Wiest
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

Error=Fehler
Manage\ Old\ Data=Veraltete Daten verwalten
Name=Name
No\ old\ data\ was\ found.=Keine veralteten Daten gefunden.
Resave\ data\ files\ with\ structure\ changes\ no\ newer\ than\ Jenkins=\
  Aktualisiere Dateien mit Strukturänderungen nicht aktueller als Jenkins
Type=Typ
Unreadable\ Data=Nicht lesbare Daten
Discard\ Unreadable\ Data=Nicht lesbare Daten entfernen
Upgrade=Aktualisieren
Version=Version
blurb.1=\
  Ändert sich die Struktur von Konfigurationsdateien, geht Jenkins folgendermaßen vor: \
  Dateien werden beim Einlesen in den Speicher in das neue Datenformat migriert, aber \
  nicht automatisch auf Festplatte zurückgeschrieben. Die Konfigurationsdateien bleiben also \
  unverändert. Dies ermöglicht bei Problemen ein Jenkins-Downgrade zu einer früheren \
  Version. Auf der anderen Seite können dadurch Dateien endlos in längst veralteten \
  Formaten verbleiben. Die folgende Tabelle zeigt Dateien, die veraltete Strukturen verwenden, \
  sowie die Jenkins-Version(en), in denen die Datenstruktur verändert wurde.
blurb.2=\
  Beim Einlesen von Konfigurationsdateien können Fehler auftreten, z.B. wenn ein Plugin \
  Daten hinzufügt und später deaktiviert wird, wenn kein Migrationscode für Strukturänderungen \
  geschrieben wurde oder Jenkins auf eine ältere Version zurückgesetzt wird, nachdem die neuere \
  Version bereits Dateien mit einer neuen Struktur geschrieben hatte. Diese Fehler werden beim \
  Hochfahren von Jenkins zwar protokolliert, die nicht-lesbaren Daten werden aber einfach \
  übersprungen, damit Jenkins trotzdem starten und arbeiten kann.
blurb.3=\
  Mit der untenstehenden Funktion können Sie diese Datein im aktuellen Format neu abspeichern. \
  Damit entfällt die Möglichzeit, auf eine ältere als die ausgewählte Jenkins-Version zurückzukehren. \
  Auch wenn Sie Konfigurationen bestehender Jobs ändern, werden diese Daten im neuen \
  Format gespeichert, was ein späteres Downgrade ausschließt. Nicht-lesbare Daten, die in der \
  Tabelle rechts dargestellt sind, werden bei der Aktualisierung dauerhaft entfernt.  
blurb.4=\
  Langfristig wird Migrationscode zum Lesen veralteter Datenformate auch wieder entfernt werden. \
  Die Kompatibilität wird mindestens 150 Releases nach Änderung des Datenformates gewährleistet. \
  Versionen, die noch älter sind, werden fett dargestellt. Es wird emfohlen, diese Dateien neu \
  abzuspeichern.
blurb.5=\
  (ein Downgrade bis zur ausgewählten Version könnte immer noch möglich sein) 
blurb.6=\
  Nicht-lesbare Daten stellen kein Problem dar, da Jenkins sie einfach ignoriert. \
  Um jedoch lange Protokolle mit zahlreichen Warnungen während des Hochfahrens von Jenkins zu \
  vermeiden, können Sie nicht-lesbare Daten dauerhaft entfernen, indem Sie diese über die \
  untenstehende Funktion neu abspeichern lassen.